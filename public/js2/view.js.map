{"version":3,"sources":["../js/view.js"],"names":["types","lastTouchEnd","document","documentElement","addEventListener","event","now","Date","getTime","preventDefault","window","querySelector","TINT","assortment","colors","angle","angleOffset","shuffle","sample","c1","c2","deg","Math","randomIntMinMax","load","refresh","setAngleOffset","elem","$","css","DSGameLobby","props","state","lobbyOptionsShown","setState","data","lobbySummary","full","users","players","length","game_settings","noneditableSettings","maxPlayers","ongoing","isPublic","type","rotation","nextChange","code","password","lobbyOptionsToggle","editableSettings","joined","ready","React","Component","IconBar","homeAction","location","reset","IconButton","iconName","onClick","LobbyType","name","REF","lobby","toUpperCase","desc","mode","map","options","nextChangeDate","hour","getHours","timeOfDay","minutes","getMinutes","timeString","typeDesc","LobbyActions","ENV","clearPassword","setPassword","prompt","href","passwordMessage","passwordButtonClass","optionButtonClass","handleShareClick","handlePasswordClick","onOptionsClick","LobbyOptions","prefs","optionKey","choiceIndex","copy","Object","assign","updateOptions","keys","forEach","optionValue","push","handleOptionChange","hidden","collapsed","show","ListSelect","selectedChoice","selectTitle","LOBBY_OPTIONS","choiceIndexes","slice","optionChoices","ListSelectOption","title","selected","className","PlayerConfig","shipCatalogue","catalogueIndex","ship","expanded","refreshShip","isLeft","prevShip","nextShip","start","playerConfigClass","shadeClass","handleClick","handleExpansionToggle","handleActionClick","ShipPicker","i","typeName","ShipDesc","imagePath","IMAGES","ShipStats","rows","stats","metric","value","ShipStatsRow","ShipSub","subName","sub","shipSub","ActionButton","buttonTitle","actionBlock","join","LobbyUsers","spectators","limit","playerLimit","PlayersTable","index","id","rank","team","highlight","user","sign","rankSymbol","User","calculateRankLetter","left","over","SpectatorsTable","INFO","stock","player_capacity","maps","time","results","modeMeasure"],"mappings":"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","file":"view.js","sourcesContent":["\n// function refreshLobbyView() {\n//\n//   // clear it up\n//   $('span.mi').remove();\n//\n//   // populate\n//   let players = ENV[\"lobby\"][\"players\"];\n//   players.forEach((id, player) => {\n//\n//     let name = player.name;\n//     if(id == ENV.storage.id) {\n//       let span = document.createElement('span'); span.className = 'mi';\n//       let input = document.createElement('input'); input.id = \"name-input\";\n//       input.type = \"text\";\n//       input.placeholder = \"your name\";\n//       input.value = name;\n//       input.onkeydown = function(e) { if(e.keyCode==13) $(this).blur() };\n//       input.oninput = function() { ENV.sound.play('type') };\n//       input.onfocus = function() { editing = true };\n//       input.onblur = function() { socket.emit('set name', this.value.substr(0, 24)); editing = false; refreshLobbyView() };\n//       let row = document.createElement('span'); row.className = 'mi-row';\n//       let select = document.createElement('select');\n//       // let defoption = document.createElement('option'); defoption.disabled = true; defoption.textContent = \"choose ship type\";\n//       // select.appendChild(defoption);\n//       // let random_option = document.createElement('option'); random_option.textContent = \"random\"; random_option.value = types.sample();\n//       // select.appendChild(random_option);\n//       types.forEach(t => {\n//         let option = document.createElement('option');\n//         option.innerHTML = t;\n//         select.appendChild(option);\n//       });\n//       select.value = ENV.storage.type || 'standard';//defoption.textContent;\n//       select.onchange = function(e) { socket.emit('set type', this.value); ENV.storage.type = this.value; };\n//       let team = document.createElement('select');\n//       let no_team = document.createElement('option');\n//       no_team.innerHTML = '-';\n//       no_team.value = -1;\n//       team.appendChild(no_team);\n//       ENV.lobby.team_capacity.times(i => {\n//         let option = document.createElement('option');\n//         option.innerHTML = i+1;\n//         option.value = i;\n//         team.appendChild(option);\n//       });\n//       team.value = ENV.storage.team || -1;\n//       team.onchange = function(e) { socket.emit('set team', this.value); ENV.storage.team = this.value; };\n//       // let right = document.createElement('span');\n//       let checkbox = document.createElement('input'); checkbox.type = \"checkbox\"; checkbox.name = \"checkbox\";\n//       checkbox.onchange = function() { if(this.checked) { socket.emit('ready'); ENV.sound.play('ready') } };\n//\n//       row.appendChild(document.createTextNode(\"type:\"));\n//       row.appendChild(select);\n//       if(ENV.lobby.type == 'private') row.appendChild(document.createTextNode(\"team:\"));\n//       if(ENV.lobby.type == 'private') row.appendChild(team);\n//       if(player.cleared) row.appendChild(document.createTextNode(\"ready?\"));\n//       if(player.cleared) row.appendChild(checkbox); //row.appendChild(checkboxlabel);\n//\n//       span.appendChild(input);\n//       span.appendChild(row);\n//\n//       $('.lobby > main').append(span);\n//       if(player.ready) { input.disabled = true; select.disabled = true; checkbox.checked = true; checkbox.disabled = true; }\n//     } else {\n//       let span = document.createElement('span'); span.className = 'mi player'; span.textContent = name || 'connected..'; span.title = name;\n//       $('.lobby > main').append(span);\n//     }\n//   });\n//\n//   let emptySlots =  ENV[\"lobby\"][\"capacity\"] - Object.keys(players).length;\n//   emptySlots.times(()=>{\n//     let span = document.createElement('span'); span.className = 'mi vacant'; span.textContent = 'waiting for players...';\n//     $('.lobby > main').append(span);\n//   });\n//\n// }\n\n\nlet types = ['damage', 'speed', 'standard', 'rate', 'defense'];\n\n\n// scroll view\n// let resetScrollView = () => {\n// var scroll_view = document.querySelector('#touch_layer .scroll');\n// scroll_view.scrollTop = scroll_view.scrollHeight/2;\n// };\n// $(()=>resetScrollView());\n\nvar lastTouchEnd = 0;\ndocument.documentElement.addEventListener('touchend', function (event) {\n  var now = (new Date()).getTime();\n  if (now - lastTouchEnd <= 300) {\n    event.preventDefault();\n  }\n  lastTouchEnd = now;\n}, false);\n\nwindow.addEventListener('load', ()=> {\n  document.querySelector('#touch_layer').addEventListener('touchstart', function (event) { event.preventDefault() }, true);\n  document.querySelector('#touch_layer').addEventListener('touchend', function (event) { event.preventDefault() }, false);\n});\n\n\n\nvar TINT = {\n  assortment: [\n    ['#0000ff', '#ff0000'],\n    ['#0000ff', '#aedc39'],\n    ['#0048ff', '#cc00ff']\n  ],\n\n  colors: [null, null],\n  angle: 0,\n\n  angleOffset: 0,\n\n  shuffle() {\n    let [c1, c2] = TINT.assortment.sample(), deg = Math.randomIntMinMax(15, 75);\n    TINT.load(deg, c1, c2);\n  },\n\n  load(deg, c1, c2) {\n    this.angle = deg;\n    this.colors[0] = c1;\n    this.colors[1] = c2;\n    this.refresh()\n  },\n\n  setAngleOffset(deg) {\n    this.angleOffset = deg;\n    this.refresh()\n  },\n\n  refresh() {\n    let elem = document.querySelector('#tint');\n    if (elem) $(elem).css('background', `linear-gradient(${this.angle + this.angleOffset}deg, ${this.colors[0]}, ${this.colors[1]})`);\n  }\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass DSGameLobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // state.userEngagementPhase\n      //   values: 0 - available to join\n      //           1 - joined\n      //           2 - locked in\n      //           3 - not available to join\n      // userEngagementPhase:  0,\n      lobbyOptionsShown: false,\n    }\n  }\n\n  lobbyOptionsToggle() {\n    this.setState({\n      lobbyOptionsShown: !this.state.lobbyOptionsShown\n    })\n  }\n\n  render() {\n    const data = this.props.lobbySummary;\n    const full = data.users.players.length >= data.game_settings.noneditableSettings.maxPlayers;\n    const ongoing = data.ongoing;\n    const isPublic = data.type === 0;\n\n    return (\n      <div id=\"ds-game-lobby\">\n        <div id=\"part-1\">\n          <IconBar />\n          <span id=\"logo-type\">DEEP SPACE</span>\n          <LobbyType type={data.type} rotation={data.rotation} nextChange={data.nextChange} />\n          <LobbyActions code={data.code} password={data.password} onOptionsClick={() => this.lobbyOptionsToggle()} isPublic={isPublic} />\n          <LobbyOptions type={data.type} prefs={data.game_settings.editableSettings} show={this.state.lobbyOptionsShown} />\n        </div>\n        <div id=\"part-2\">\n          <PlayerConfig joined={this.props.joined} ready={this.props.ready} full={full} ongoing={ongoing} />\n          <LobbyUsers users={data.users} playerLimit={data.game_settings.noneditableSettings.maxPlayers}/>\n          {/*<div id=\"lobby-users\">*/}\n            {/*<PlayersTable />*/}\n            {/*<SpectatorsTable />*/}\n          {/*</div>*/}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass IconBar extends React.Component {\n  render() {\n    \n    const homeAction = () => window.location.reset();\n    \n    return (\n      <div id=\"icon-bar\">\n        <IconButton iconName=\"home\" onClick={() => homeAction()}/>\n        {/*<IconButton iconName=\"volume_up\" />*/}\n        {/*<IconButton iconName=\"help\" />*/}\n        {/*<IconButton iconName=\"settings\" />*/}\n      </div>\n    );\n  }\n}\n\nclass IconButton extends React.Component {\n\n  render() {\n    return (\n      <button className={this.props.iconName + '_icon'} onClick={() => this.props.onClick()}><i className=\"material-icons\">{this.props.iconName}</i></button>\n    );\n  }\n}\n\nclass LobbyType extends React.Component {\n  render() {\n\n    const name = (REF.lobby.type[this.props.type] + ' lobby').toUpperCase();\n\n    let desc = 'no description';\n    switch(this.props.type) {\n\n      // public matches (deal with rotation info)\n      case 0:\n\n        let {mode, map} = this.props.rotation;\n        mode = REF.lobby.options.mode[mode];\n        map = REF.lobby.options.map[map];\n\n        const nextChangeDate = new Date(this.props.nextChange);\n        let hour = nextChangeDate.getHours();\n        const timeOfDay = (hour > 11) ? 'PM' : 'AM';\n        if(hour > 11) hour -= 12;\n        if(hour == 0) hour = 12;\n        let minutes = nextChangeDate.getMinutes();\n        if(minutes < 10) minutes = '0' + minutes;\n        const timeString = `${hour} ${timeOfDay}`;\n\n        desc = REF.lobby.typeDesc[this.props.type](map, mode, timeString);\n\n        break;\n\n      // everything else\n      default:\n\n        desc = REF.lobby.typeDesc[this.props.type];\n\n        break;\n\n    }\n\n    return (\n      <div id=\"lobby-type\">\n        <span id=\"lobby-type-name\">{name}</span>\n        <span id=\"lobby-type-desc\">{desc}</span>\n      </div>\n    );\n\n  }\n}\n\nclass LobbyActions extends React.Component {\n\n  handlePasswordClick() {\n\n    this.props.password ? ENV.lobby.clearPassword() : ENV.lobby.setPassword()\n\n  }\n  \n  handleShareClick() {\n\n    window.prompt(`copy to share this link:`, window.location.href)\n\n  }\n\n  render() {\n    const code = this.props.code;\n    \n    const passwordMessage = this.props.password ? 'clear password' : 'add password';\n\n    const passwordButtonClass = `lobby-button ${this.props.isPublic ? 'hidden' : ''}`;\n    const optionButtonClass = `lobby-button ${this.props.isPublic ? 'hidden' : ''}`;\n\n    return (\n      <div id=\"lobby-action\">\n        <span id=\"lobby-id\">{code.toUpperCase()}</span>\n        <div id=\"lobby-action-buttons\">\n          {/*<Button title=\"share\" />*/}\n          {/*<Button title=\"password\" />*/}\n          {/*<Button title=\"options\" />*/}\n          <span className=\"lobby-button\" onClick={() => this.handleShareClick()}>share</span>\n          <span className={passwordButtonClass} onClick={() => this.handlePasswordClick()} hidden={this.props.isPublic}>{passwordMessage}</span>\n          <span id=\"lobby-button-option\" className={optionButtonClass} onClick={() => this.props.onOptionsClick()}>options</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LobbyOptions extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prefs: props.prefs\n    }\n  }\n\n  handleOptionChange(optionKey, choiceIndex) {\n\n    const copy = Object.assign({}, this.state.prefs);\n    copy[optionKey] = choiceIndex;\n    this.setState({\n      prefs: copy,\n    })\n\n    // tell server\n    ENV.lobby.updateOptions(optionKey, choiceIndex);\n\n  }\n\n  render() {\n\n    let options = [];\n\n    // iterating over object\n    Object.keys(this.state.prefs).forEach(optionKey => {\n      const optionValue = this.state.prefs[optionKey];\n      options.push(\n        <ListSelect key={optionKey} optionKey={optionKey} optionValue={optionValue} type={this.props.type} onClick={(optionKey, choiceIndex) => this.handleOptionChange(optionKey, choiceIndex)} />\n      );\n    });\n\n    const hidden = (options.length === 0);\n    const collapsed = !this.props.show;\n\n    return (\n      <div id=\"lobby-options\" className={(collapsed ? 'collapsed' : '') +' '+ (hidden ? 'hidden' : '')}>\n        {options}\n      </div>\n    );\n\n  }\n}\n\nclass ListSelect extends React.Component {\n  render() {\n\n    const optionKey = this.props.optionKey;\n    const selectedChoice = this.props.optionValue;\n\n    const selectTitle = LOBBY_OPTIONS[optionKey][0];\n    const choiceIndexes = LOBBY_OPTIONS[optionKey].slice(1)[this.props.type];\n    // const choices = LOBBY_OPTIONS[optionKey].slice(1);\n\n    let optionChoices = [];\n    choiceIndexes.forEach((choiceIndex)=>{\n      optionChoices.push(\n        <ListSelectOption \n          key={choiceIndex}\n          title={REF.lobby.options[optionKey][choiceIndex]}\n          selected={choiceIndex===selectedChoice}\n          onClick={() => this.props.onClick(optionKey, choiceIndex)} />\n      );\n    });\n\n    return (\n      <div className=\"list-select\">\n        <span className=\"list-select-title\">{selectTitle}</span>\n        <div className=\"list-select-options\">{optionChoices}</div>\n      </div>\n    );\n\n\n  }\n}\n\nclass ListSelectOption extends React.Component {\n  render() {\n    const title = this.props.title;\n    const selected = this.props.selected;\n    const className = selected ? 'active' : '';\n\n    return (\n      <span className={className} onClick={() => this.props.onClick()}>{title}</span>\n    );\n\n  }\n}\n\n\nclass PlayerConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shipCatalogue = [0, 1, 2, 3, 4];\n    this.catalogueIndex = 0;\n\n    this.state = {\n      ship: this.shipCatalogue[this.catalogueIndex],\n      // abilities: [3x],\n      expanded: false\n    }\n\n  }\n\n  refreshShip() {\n    this.setState({\n      ship: this.shipCatalogue[this.catalogueIndex]\n    });\n  }\n\n  nextShip() {\n    this.catalogueIndex++;\n    if(this.catalogueIndex > this.shipCatalogue.length-1) this.catalogueIndex = 0;\n    this.refreshShip();\n  }\n\n  prevShip() {\n    this.catalogueIndex--;\n    if(this.catalogueIndex < 0) this.catalogueIndex = this.shipCatalogue.length-1;\n    this.refreshShip();\n  }\n\n  handleClick(isLeft) {\n    if(this.props.ready) return;\n    isLeft ? this.prevShip() : this.nextShip();\n  }\n\n  handleExpansionToggle() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n\n  handleActionClick() {\n    ENV.lobby.start(this.state.ship);\n  }\n\n  render() {\n    let playerConfigClass = ( this.props.joined ? ( this.props.ready ? 'disabled' : '' ) : 'hidden' ) ;\n    let shadeClass = ( this.props.joined ? ( this.props.ready ? 'opacity-5' : 'opacity-0' ) : 'opacity-10' ) ;\n\n    return (\n      <div id=\"player-config\" className={playerConfigClass}>\n        <div id=\"player-config-shade\" className={shadeClass}></div>\n        <ShipPicker ship={this.state.ship} onClick={(isLeft) => this.handleClick(isLeft)} />\n        <ShipDesc ship={this.state.ship} />\n        <ShipStats ship={this.state.ship} expanded={this.state.expanded} />\n        <ShipSub ship={this.state.ship} expanded={this.state.expanded} />\n        <div id=\"ability-action-box\">\n          {/*<AbilityBubbles />*/}\n          <div id=\"ability-action-box-row\">\n            <span onClick={() => this.handleExpansionToggle()}>{this.state.expanded ? 'less' : 'more'}</span>\n            <ActionButton\n              joined={this.props.joined}\n              ready={this.props.ready}\n              full={this.props.full}\n              ongoing={this.props.ongoing}\n              onClick={() => this.handleActionClick() } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nclass ShipPicker extends React.Component {\n\n\n  render() {\n    const i = this.props.ship;\n    const typeName = REF.ship.type[i];\n\n    return (\n      <div id=\"ship-picker\">\n        <span\n          id=\"ship-picker-left\"\n          className=\"ship-picker-arrow\"\n          onClick={() => this.props.onClick(true)}>&lt;</span>\n        <span id=\"ship-picker-text\"\n              onClick={() => this.props.onClick(false)}>{typeName.toUpperCase()}</span>\n        <span\n          id=\"ship-picker-right\"\n          className=\"ship-picker-arrow\"\n          onClick={() => this.props.onClick(false)}>&gt;</span>\n      </div>\n    );\n  }\n}\n\nclass ShipDesc extends React.Component {\n\n  render() {\n    const i = this.props.ship;\n    const typeName = REF.ship.type[i];\n    const imagePath = IMAGES.ship[i];\n    const typeDesc = REF.ship.typeDesc[i];\n    \n    return (\n      <div id=\"ship-desc\">\n        <div id=\"ship-desc-image\">\n          <div id=\"ship-desc-image-background\"></div>\n          <img src={imagePath} alt={typeName + ' ship image'} id=\"ship-desc-image-mask\" draggable=\"false\"/>\n        </div>\n        <span id=\"ship-desc-text\">{typeDesc}</span>\n      </div>\n    );\n  }\n}\n\nclass ShipStats extends React.Component {\n\n  render() {\n\n    const className = this.props.expanded ? '' : 'collapsed';\n\n    let rows = [];\n    for(let metric of REF.ship.stats) {\n      const title = metric[0];\n      const value = metric.slice(1)[this.props.ship];\n      rows.push(<ShipStatsRow key={title} title={title} value={value} />);\n    }\n\n    return (\n      <div id=\"ship-stats\" className={className}>\n        {rows}\n      </div>\n    );\n  }\n}\n\nclass ShipStatsRow extends React.Component {\n\n  render() {\n    return (\n      <div className=\"ship-stats-row\">\n        <span className=\"ship-stats-row-label\">{this.props.title}</span>\n        <span className=\"ship-stats-bar\">\n          <span className={'ship-stats-bar-value-' + this.props.value*10}></span>\n        </span>\n      </div>\n    );\n  }\n}\n\n\nclass ShipSub extends React.Component {\n  render() {\n\n    const className = this.props.expanded ? '' : 'collapsed';\n\n    const i = this.props.ship;\n    const subName = REF.ship.sub[i];\n    const imagePath = IMAGES.shipSub[i];\n\n    return (\n      <div id=\"ship-sub\" className={className}>\n        <span id=\"ship-sub-label\">SUB</span>\n        <div id=\"ship-sub-image\">\n          <div id=\"ship-sub-image-background\"></div>\n          <img src={imagePath} alt={subName + ' ship sub image'} id=\"ship-sub-image-mask\" draggable=\"false\"/>\n        </div>\n        <span id=\"ship-sub-title\">{subName}</span>\n      </div>\n    );\n  }\n}\n\nclass ActionButton extends React.Component {\n\n  render() {\n\n    let buttonTitle;\n    let className = '';\n    let actionBlock = () => {};\n    if(this.props.ongoing) {\n      buttonTitle = 'IN PROGRESS';\n      className = 'hollow';\n    } else {\n      if(this.props.joined) {\n        if(this.props.ready) {\n          buttonTitle = 'waiting...';\n          className = 'disabled';\n        } else {\n          buttonTitle = 'START';\n          actionBlock = () => { this.props.onClick(); }\n        }\n      } else {\n        if(this.props.full) {\n          buttonTitle = 'LOBBY FULL';\n          className = 'hollow';\n        } else {\n          buttonTitle = 'JOIN';\n          actionBlock = () => { ENV.lobby.join() }\n        }\n      }\n    }\n\n    // if(this.props.joined) {\n    //   if(this.props.ready) {\n    //     buttonTitle = 'waiting...';\n    //     className = 'disabled';\n    //   } else {\n    //     buttonTitle = 'START';\n    //     actionBlock = () => { this.props.onClick(); }\n    //   }\n    // } else {\n    //   if(this.props.ongoing) {\n    //     buttonTitle = 'IN PROGRESS';\n    //     className = 'hollow';\n    //   } else {\n    //     if(this.props.full) {\n    //       buttonTitle = 'LOBBY FULL';\n    //       className = 'hollow';\n    //     } else {\n    //       buttonTitle = 'CONNECT';\n    //       actionBlock = () => { ENV.lobby.join() }\n    //     }\n    //   }\n    // }\n\n\n    return (\n      <button className={className} onClick={() => actionBlock()}>{buttonTitle}</button>\n    );\n  }\n}\n\n\nclass LobbyUsers extends React.Component {\n\n  render() {\n    const players = this.props.users.players;\n    const spectators = this.props.users.spectators;\n    const limit = this.props.playerLimit;\n\n    return (\n      <div id=\"lobby-users\">\n        <PlayersTable users={players} limit={limit}/>\n        <SpectatorsTable users={spectators}/>\n      </div>\n    );\n  }\n}\n\nclass PlayersTable extends React.Component {\n\n  render() {\n\n    let rows = [];\n    let index = 0;\n    for(let [id, name, rank, team, ready] of this.props.users) {\n\n      let highlight = ENV.user.id === id ? 'highlight' : '';\n      ready = ready ? '✓' : '';\n      let sign = (rank % 100 <= 30 ? '-' : (rank % 100 >= 70 ? '+' : ''));\n      let rankSymbol = `${User.calculateRankLetter(rank) + sign}`;\n      team = team || 'SOLO';\n      rows.push(\n        <tr key={name+rank} className={highlight}>\n          <td>{++index + '.'}</td>\n          <td>{ready}</td>\n          <td>{name}</td>\n          <td>{rankSymbol}</td>\n          <td>{team}</td>\n        </tr>\n      )\n    }\n    let left = this.props.limit - this.props.users.length;\n    const over = left > 3;\n    if(over) left = 3;\n    for(let i = 0; i < left; i++) {\n      rows.push(\n        <tr key={++index} className=\"empty-row\">\n          <td></td>\n          <td></td>\n          <td>{'empty'}</td>\n          <td></td>\n          <td></td>\n        </tr>\n      )\n    }\n    if(over) {\n      rows.push(\n        <tr key={++index} className=\"empty-row\">\n          <td></td>\n          <td></td>\n          <td>{'...'}</td>\n          <td></td>\n          <td></td>\n        </tr>\n      )\n    }\n\n    return (\n      <table id=\"players-table\" className=\"users-table\">\n        <thead>\n          <tr>\n            <th></th>\n            <th></th>\n            <th>PLAYERS</th>\n            <th>RANK</th>\n            <th>TEAM</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass SpectatorsTable extends React.Component {\n\n  render() {\n\n    let rows = [];\n    let index = 0;\n    for(let name of this.props.users) {\n      index++;\n      rows.push(\n        <tr key={name+index}>\n          <td>{name}</td>\n        </tr>\n      )\n    }\n\n    return (\n      <table id=\"spectators-table\" className=\"users-table\">\n        <thead>\n        <tr>\n          <th>SPECTATING ({index})</th>\n        </tr>\n        </thead>\n        <tbody>\n        {rows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n\n/*class ProductCategoryRow extends React.Component {\n  render() {\n    return <tr><th colSpan=\"2\">{this.props.category}</th></tr>;\n  }\n}\n\nclass ProductRow extends React.Component {\n  render() {\n    var name = this.props.product.stocked ?\n      this.props.product.name :\n      <span style={{color: 'red'}}>\n        {this.props.product.name}\n      </span>;\n    return (\n      <tr>\n        <td>{name}</td>\n        <td>{this.props.product.price}</td>\n      </tr>\n    );\n  }\n}\n\nclass ProductTable extends React.Component {\n  render() {\n    var rows = [];\n    var lastCategory = null;\n    this.props.products.forEach(function(product) {\n      if (product.category !== lastCategory) {\n        rows.push(<ProductCategoryRow category={product.category} key={product.category} />);\n      }\n      rows.push(<ProductRow product={product} key={product.name} />);\n      lastCategory = product.category;\n    });\n    return (\n      <table>\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n        </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n}\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <form>\n        <input type=\"text\" placeholder=\"Search...\" />\n        <p>\n          <input type=\"checkbox\" />\n          {' '}\n          Only show products in stock\n        </p>\n      </form>\n    );\n  }\n}\n\nclass FilterableProductTable extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchBar />\n        <ProductTable products={this.props.products} />\n      </div>\n    );\n  }\n}*/\n\n\n// var PRODUCTS = [\n//   {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n//   {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n//   {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n//   {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n//   {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n//   {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n// ];\n\nlet INFO = {\n  type: 1,\n  code: 'Hkd3M-',\n  password: null,\n  game_settings: {\n    map: 2,\n    mode: 0,\n    stock: 3,\n    player_capacity: 6,\n  },\n  users: {\n    players: [\n      // {name, rank, team, ready, ship, slots []}\n\n      ['Billy', 302, 1, true, 2],\n      ['twenty-one p', 380, 1, false, 1],\n      ['user1902', 340, 0, true, 1],\n\n    ],\n    spectators: [\n      'markees',\n      'facemace'\n    ]\n  }\n};\n\nconst LOBBY_OPTIONS = {\n  map: ['MAP', [], [0, 1, 2, 3], [0, 1, 2, 3]],\n  mode: ['GAME MODE', [], [0, 1], [0, 1]],\n  player_capacity: ['MAX PLAYERS', '2', '3', '4', '5', '6', '7', '8'],\n  stock: ['STOCK', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n};\n\nconst REF = {\n  lobby: {\n    type: ['public', 'private', 'practice'],\n    typeDesc: [\n      (maps, mode, time) => <span>Match up against players with similar skill. The current rotation is <b>{maps}</b> until <b>{time}</b>. The mode is <b>{mode}</b>.</span>,\n      <span>Enjoy a <b>private</b> space where you and <b>friends</b> can play. All present players have control over settings.</span>,\n      <span>Test the <b>stages</b>, <b>ships</b>, and <b>modes</b> in a private environment you control.</span>,\n    ],\n    options: {\n      map: ['Wide Sky', 'Nautical', 'Nebula', 'Clockwise'],\n      mode: ['Capture the Flag', 'Territorial', 'Survival'],\n      player_capacity: ['2', '3', '4', '5', '6', '7', '8'],\n      stock: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    }\n  },\n\n  ship: {\n    type: ['standard', 'rate', 'speed', 'defense', 'damage'],\n    typeDesc: [\n      'a classic ship fit for all occasions',\n      'traps and confuses with a stream of light bullets',\n      'run your way out of any situation with the speed ship',\n      'takes more than just a hit',\n      'feared across the reach of space, use it wisely'\n    ],\n    sub: ['attractor', 'heat seeker', 'repulsors', 'stealth', 'block bomb'],\n    stats: [\n      ['HEALTH' , '0.6', '0.6', '0.2', '1.0', '0.7'],\n      ['SPEED'  , '0.6', '0.6', '0.9', '0.4', '0.4'],\n      ['ATTACK' , '0.5', '0.4', '0.3', '0.5', '1.0'],\n      ['RANGE'  , '0.5', '0.5', '0.3', '0.7', '0.4'],\n    ]\n\n  },\n\n  results: {\n    modeMeasure: ['distance', 'amount covered', 'time lasted']\n  }\n\n};\n\nconst IMAGES = {\n  ship: [\n    'images/menu-ship-standard.png',\n    'images/menu-ship-rate.png',\n    'images/menu-ship-speed.png',\n    'images/menu-ship-defense.png',\n    'images/menu-ship-damage.png',\n  ],\n  shipSub: [\n    'images/menu-ship-sub-standard.png',\n    'images/menu-ship-sub-rate.png',\n    'images/menu-ship-sub-speed.png',\n    'images/menu-ship-sub-defense.png',\n    'images/menu-ship-sub-damage.png',\n  ]\n};\n\n// ReactDOM.render(\n//   <DSGameLobby data={INFO} />,\n//   document.getElementById('container')\n// );\n\n\n\n\n"]}