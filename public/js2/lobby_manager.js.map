{"version":3,"sources":["../js/lobby_manager.js"],"names":["Lobby","require","shortid","Set","prototype","draw","next","values","value","delete","Map","shift","key","keys","get","LobbyManager","lobbies","public","private","practice","joinable","min_available_lobby_count","i","new_public","lobbyID","has","ID","size","setTimeout","updateLobbyPlacement","id","lobby","full","ongoing","set","console","log","Array","from","map","a","generate","slice","new_lobby","players","teams","options","type","new_ID","module","exports"],"mappings":"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","file":"lobby_manager.js","sourcesContent":["\n\"use strict\";\nvar Lobby = require('./server_lobby.js');\nvar shortid = require('shortid');\nSet.prototype.draw = function() { var next = this.values().next().value; this.delete(next); return next }\nMap.prototype.shift = function() { var key = this.keys().next().value; var next = this.get(key); this.delete(key); return next }\n\n\nclass LobbyManager {\n  constructor () {\n    this.lobbies = new Map();\n    this.public = new Map();\n    this.private = new Map();\n    this.practice = new Map();\n    // this.ongoing = new Map();\n    // this.available = new Map();\n\n    this.joinable = new Map();\n    this.min_available_lobby_count = 2;\n    for(var i = 0; i < this.min_available_lobby_count; i++) this.new_public(); // populate\n  }\n\n  exists(lobbyID) {return this.lobbies.has(lobbyID)}\n  existsInPrivate(lobbyID) {return this.private.has(lobbyID)}\n\n  lobby(ID) {return this.lobbies.get(ID)}\n\n  next() {\n    // this.relay_status();\n    while(this.joinable.size < this.min_available_lobby_count) this.new_public();\n    let next = this.joinable.shift();\n    setTimeout(() => { this.updateLobbyPlacement(next) }, 2000);\n    return next.id;\n  }\n\n  updateLobbyPlacement(lobby) {\n    // console.log(`${lobby.id} :: full: ${lobby.full}, ongoing: ${lobby.ongoing}, public ${this.public.has(lobby.id)}`)\n    if(!lobby.full && !lobby.ongoing && this.public.has(lobby.id)) {\n      this.joinable.set(lobby.id, lobby);\n      console.log(`lobby ${lobby.id} IS joinable`);\n    }\n    else { this.joinable.delete(lobby.id); console.log(`lobby ${lobby.id} is NOT joinable`) }\n  }\n\n  relay_status() {\n    console.log(`---------- OVERVIEW -----------`);\n    console.log(`| lobbies ${this.lobbies.size}`);\n    console.log(`| `, Array.from(this.lobbies).map(a=>a[0]));\n    console.log(`| joinable ${this.joinable.size}`);\n    console.log(`| `, Array.from(this.joinable).map(a=>a[0]));\n    console.log(`===============================`);\n  }\n\n  new_ID() {\n    return shortid.generate().slice(0, 6);\n  }\n\n  new_public() {\n    var lobby = this.new_lobby('public', {players: 4, teams: 2});\n    this.public.set(lobby.id, lobby);\n    this.joinable.set(lobby.id, lobby);\n    return lobby.id;\n  }\n\n  new_private(options) {\n    var lobby = this.new_lobby('private');\n    this.private.set(lobby.id, lobby);\n    return lobby.id;\n  }\n\n  new_practice() {\n    var lobby = this.new_lobby('practice', {players: 1});\n    this.practice.set(lobby.id, lobby);\n    return lobby.id;\n  }\n\n  new_lobby(type, options) {\n    var id = this.new_ID();\n    var lobby = new Lobby(id, type, options);\n    this.lobbies.set(id, lobby);\n    console.log(`new lobby: ${id}`);\n    return lobby;\n  }\n\n  delete(id) {\n    this.lobbies.delete(id);\n    this.public.delete(id);\n    this.private.delete(id);\n    this.practice.delete(id);\n    this.joinable.delete(id);\n  }\n\n\n}\n\nmodule.exports = LobbyManager;\n"]}