{"version":3,"sources":["../js/user.js"],"names":["User","id","ENV","storage","name","user_name","rank","money","simple_rank","simple_money","stats","wins","losses","kills","deaths","resetRank","refreshUserView","watch","idChangeHandler","nameChangeHandler","propChangeHandler","validateStats","refreshUserNameView","refreshUserRankView","no_name_small","no_name_large","node_small","document","querySelector","node_large","name_small","textContent","box_node","rank_node","rank_letter","rank_number","removeAttribute","setAttribute","prop","old_value","new_value","wait","$","ajax","url","type","data","JSON","stringify","contentType","dataType","done","simple","encoded","calculateRankLetter","calculateRankNumber","parseInt","UserAdapter","root","_root","default_name","String","Math","randomIntMinMax","padding","attempts","validation","test","swearjar","profane","trim","window","prompt","substring","refreshUI","name_set","user","user_set","val","text","attr","ongoing","updateRank","click","LOBBY","showLayer","hideLayer","UA","getName"],"mappings":"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","file":"user.js","sourcesContent":["\nclass User {\n\n  constructor() {\n    this.id = ENV.storage.id;\n    this.name = ENV.storage.user_name;\n    this.rank = ENV.storage.rank;\n    this.money = ENV.storage.money;\n\n    this.simple_rank = ENV.storage.simple_rank; // this is a number from 0 to 599\n    this.simple_money = ENV.storage.simple_money;\n\n    this.stats = {};\n    this.stats.wins = ENV.storage.wins;\n    this.stats.losses = ENV.storage.losses;\n    this.stats.kills = ENV.storage.kills;\n    this.stats.deaths = ENV.storage.deaths;\n\n    if(this.id && !(this.simple_rank >= 0)) { // if id and invalid rank, reset\n      this.resetRank();\n    } else {\n      this.refreshUserView();\n    }\n\n\n\n    this.watch('id', this.idChangeHandler);\n    this.watch('name', this.nameChangeHandler);\n    this.watch('rank', this.propChangeHandler);\n    this.watch('simple_rank', this.propChangeHandler);\n    this.watch('money', this.propChangeHandler);\n    this.watch('simple_money', this.propChangeHandler);\n\n    this.stats.watch('wins', this.propChangeHandler);\n    this.stats.watch('losses', this.propChangeHandler);\n    this.stats.watch('kills', this.propChangeHandler);\n    this.stats.watch('deaths', this.propChangeHandler);\n\n    this.validateStats();\n\n    // promises\n    // this.get_id = () => {\n    //   return new Promise((resolve, reject) => {\n    //     if (this.id) {\n    //       resolve(this.id);\n    //     } else {\n    //       $.ajax({\n    //         url: '/id',\n    //         type: 'POST'\n    //       })\n    //         .done(resolve);\n    //     }\n    //   });\n    //\n    // }\n    // this.get_name = () => {\n    //   return new Promise((resolve, reject) => {\n    //     let name = this.name,\n    //         validation = name => {\n    //           // only alphanumeric and whitespace characters\n    //           if(!(/^(\\w|\\s)+$/.test(name))) return false;\n    //\n    //           // no profanity\n    //           if(swearjar.profane(name)) return false;\n    //\n    //           return true;\n    //         }\n    //\n    //     while(!name || (name.trim()===\"\") || !validation(name)) {\n    //       name = window.prompt('please enter a display name');\n    //     }\n    //\n    //     this.name = name.trim();\n    //     resolve(name);\n    //   })\n    // }\n  }\n\n  refreshUserView() {\n    this.refreshUserNameView();\n    this.refreshUserRankView();\n  }\n  refreshUserNameView(name = this.name) {\n    const no_name_small = 'g';\n    const no_name_large = 'guest';\n    const node_small = document.querySelector('#umi_name_letter');\n    const node_large = document.querySelector('#umi_name_full');\n    const name_small = (name) ? name[0] : no_name_small;\n    if(node_small && node_large) {\n      node_small.textContent = name_small;\n      node_large.textContent = name || no_name_large\n    }\n  }\n  refreshUserRankView() {\n    const box_node = document.querySelector('#user_mini_info');\n    const rank_node = box_node.querySelector('#umi_stats_rank');\n    if(this.name && this.simple_rank >= 0) {\n      rank_node.textContent = `${this.rank_letter} ${this.rank_number}`;\n      box_node.removeAttribute('limited');\n    } else {\n      box_node.setAttribute('limited', '');\n    }\n  }\n\n  get rank_letter() {\n    return User.calculateRankLetter(this.simple_rank)\n  }\n  get rank_number() {\n    return User.calculateRankNumber(this.simple_rank)\n  }\n\n  static calculateRankLetter(simple_rank) { return ['E', 'D', 'C', 'B', 'A', 'M'][parseInt(simple_rank/100)] }\n  static calculateRankNumber(simple_rank) { return simple_rank%100 }\n  static calculateRankString(simple_rank) { return `${User.calculateRankLetter(simple_rank)} ${User.calculateRankNumber(simple_rank)}` }\n\n  idChangeHandler(prop, old_value, new_value) {\n    ENV.storage.id = new_value;\n    if(old_value != new_value) this.resetRank.wait(10);\n    return new_value;\n  }\n\n  nameChangeHandler(prop, old_value, new_value) {\n    ENV.storage.user_name = new_value;\n    this.refreshUserNameView(new_value);\n    return new_value;\n  }\n\n  propChangeHandler(prop, old_value, new_value) {\n    ENV.storage[prop] = new_value;\n    return new_value;\n  }\n\n  resetRank() {\n    $.ajax({\n      url: '/rank',\n      type: 'POST',\n      data: JSON.stringify({ id: this.id }),\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json'\n    })\n    .done(( data ) => {\n      var {simple, encoded} = data;\n      this.simple_rank = simple;\n      this.rank = encoded;\n\n      this.refreshUserRankView();\n    });\n  }\n\n  updateRank() {\n    $.ajax({\n      url: '/update_rank',\n      type: 'POST',\n      data: JSON.stringify({ rank: this.rank, id: this.id }),\n      // data: JSON.stringify({ history: pp }),\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json'\n    })\n    .done(( data ) => {\n      var {simple, encoded} = data;\n      this.simple_rank = simple;\n      this.rank = encoded;\n\n      this.refreshUserRankView();\n    });\n  }\n\n  validateStats() {\n    if(!(this.stats.wins > 0)) this.stats.wins = 0;\n    if(!(this.stats.losses > 0)) this.stats.losses = 0;\n    if(!(this.stats.kills > 0)) this.stats.kills = 0;\n    if(!(this.stats.deaths > 0)) this.stats.deaths = 0;\n  }\n\n  resetStats() {\n    this.stats.wins = 0;\n    this.stats.losses = 0;\n    this.stats.kills = 0;\n    this.stats.deaths = 0;\n  }\n\n}\n\nclass UserAdapter {\n\n  constructor(root) {\n    this._root = root;\n\n  }\n\n  getName() {\n    let name,\n        default_name = 'user' + String(Math.randomIntMinMax(10, 10000)).padding(4, '0'),\n        attempts = 0,\n        validation = name => {\n          // only alphanumeric and whitespace characters\n          if(!(/^(\\w|\\s)+$/.test(name))) return false;\n\n          // no profanity\n          if(swearjar.profane(name)) return false;\n\n          return true;\n        };\n\n    while(!name || (name.trim()===\"\") || !validation(name)) {\n      if(++attempts > 3) { name = default_name }\n      else { name = window.prompt('please enter a display name' + (attempts-1 ? ` (letters and numbers only please)` : ''), this._root.name || ''); }\n    }\n\n    name = name.trim().substring(0, 10);\n\n    this._root.name = name;\n    this.refreshUI();\n\n    return name;\n  }\n\n  refreshUI() {\n    // mini user info\n    // mini user info end\n\n    // user info content\n    const name_set = !!ENV.user.name;\n    const user_set = name_set && !!ENV.user.rank;\n\n    //name\n    $('#uic_title').val(ENV.user.name || '- name -');\n    // edit button\n    $('#uic_title_edit').text(name_set ? 'change' : 'set')\n\n    if(user_set) {\n      $('#uic_money_cell').text('0');\n      $('#uic_rank_cell').text(User.calculateRankLetter() + ' - ' + User.calculateRankNumber());\n      $('#uic_win_cell').text('0');\n      $('#uic_friends_cell').text('0');\n\n      $('#uic_wins_row').text('0');\n      $('#uic_losses_row').text('0');\n      $('#uic_kills_row').text('0');\n      $('#uic_deaths_row').text('0');\n    } else {\n      $('#uic_money_cell').text('-');\n      $('#uic_rank_cell').text('-');\n      $('#uic_win_cell').text('-');\n      $('#uic_friends_cell').text('-');\n\n      $('#uic_wins_row').text('-');\n      $('#uic_losses_row').text('-');\n      $('#uic_kills_row').text('-');\n      $('#uic_deaths_row').text('-');\n\n      $('#uic_reset_button').attr('disabled', 'true')\n    }\n\n\n\n  }\n\n}\n\n\n$(()=>{\n  ENV.user = new User();\n  if(ENV.storage.ongoing == 'true') { ENV.user.updateRank(); ENV.storage.ongoing = 'false' }\n\n  $('#user_mini_info').click(jqEvent => { LOBBY.showLayer('#user_info_layer') });\n  $('#user_info_background, #uic_close_button').click(jqEvent => { LOBBY.hideLayer('#user_info_layer') })\n\n  const UA = new UserAdapter(ENV.user);\n  $('#uic_title_edit').click(jqEvent => { UA.getName() })\n  UA.refreshUI();\n})"]}