{"version":3,"sources":["../js/friends_page.js"],"names":["$","ENV","friends","Friends","friends_page","FriendsPage","DSGameFriends","props","state","lobbyOptionsShown","setState","data","friendPlayer","unfriendPlayer","lobbies","unavailable","history","React","Component","FriendsHeader","enterFriendCode","FRIENDS_REF","title","description","handleAddFriendClick","LobbiesSection","hostMatch","lobbyID","window","location","origin","rows","lobby","push","handleJoinClick","onClick","length","handleHostMatchClick","LobbyRow","players","slice","playerList","code","name","toUpperCase","onJoin","PlayerButton","UnavailableSection","HistorySection","clearHistory","empty","buttonTitle","handleClearHistoryClick","IconBar","homeAction","reset","IconButton","iconName","sendSAMPLEDATA","receiveSAMPLEDATA","names","dataSAMPLEDATA","adapter","loadHistory","contactServer","IDList","Array","from","map","a","ajax","url","type","JSON","stringify","list","contentType","dataType","done","serverResponded","console","log","setNames","convertedLobby","shift","namedPairFor","render","namesList","id","setFriendName","get","confirm","friendQuestion","has","addFriend","unfriendQuestion","deleteFriend","method","form","action","append","submit","_","reject","p","clearHistoryQuestion","response","prompt","user","passedValidation","test","isNotOurOwn","ReactDOM","document","getElementById"],"mappings":";;;;;;;;;;;;AACAA,EAAE,YAAI;;AAEJC,MAAIC,OAAJ,GAAc,IAAIC,OAAJ,EAAd;AACAF,MAAIG,YAAJ,GAAmB,IAAIC,WAAJ,CAAgBJ,IAAIC,OAApB,CAAnB;AAED,CALD;;IAQMI,a;;;AAEJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,yBAAmB;AADR,KAAb;AAFiB;AAKlB;;;;yCAEoB;AACnB,WAAKC,QAAL,CAAc;AACZD,2BAAmB,CAAC,KAAKD,KAAL,CAAWC;AADnB,OAAd;AAGD;;;iCAEYE,I,EAAM;AAAE;AACnBV,UAAIG,YAAJ,CAAiBQ,YAAjB,CAA8BD,IAA9B;AACD;;;mCAEcA,I,EAAM;AAAE;AACrBV,UAAIG,YAAJ,CAAiBS,cAAjB,CAAgCF,IAAhC;AACD;;;6BAEQ;AAAA;;AAAA,wBAEiC,KAAKJ,KAAL,CAAWI,IAF5C;AAAA,UAEAG,OAFA,eAEAA,OAFA;AAAA,UAESC,WAFT,eAESA,WAFT;AAAA,UAEsBC,OAFtB,eAEsBA,OAFtB;;;AAIP,aACE;AAAA;AAAA,UAAK,IAAG,iBAAR,EAA0B,WAAU,kBAApC;AACE;AAAA;AAAA,YAAK,IAAG,QAAR,EAAiB,WAAU,kBAA3B;AACE,8BAAC,OAAD,OADF;AAEE,8BAAC,aAAD,OAFF;AAGE,8BAAC,cAAD,IAAgB,SAASF,OAAzB,EAAkC,SAAS;AAAA,qBAAQ,OAAKD,cAAL,CAAoBF,IAApB,CAAR;AAAA,aAA3C;AAHF,SADF;AAME;AAAA;AAAA,YAAK,IAAG,QAAR,EAAiB,WAAU,kBAA3B;AACE,8BAAC,kBAAD,IAAoB,aAAaI,WAAjC,EAA8C,SAAS;AAAA,qBAAQ,OAAKF,cAAL,CAAoBF,IAApB,CAAR;AAAA,aAAvD,GADF;AAEE,8BAAC,cAAD,IAAgB,SAASK,OAAzB,EAAkC,SAAS;AAAA,qBAAQ,OAAKJ,YAAL,CAAkBD,IAAlB,CAAR;AAAA,aAA3C;AAFF;AANF,OADF;AAaD;;;;EAxCyBM,MAAMC,S;;IA4C5BC,a;;;;;;;;;;;2CAEmB;AACrBlB,UAAIG,YAAJ,CAAiBgB,eAAjB;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA,UAAK,IAAG,gBAAR;AACE;AAAA;AAAA,YAAM,IAAG,sBAAT,EAAgC,WAAU,UAA1C;AAAsDC,sBAAYC;AAAlE,SADF;AAEE;AAAA;AAAA,YAAM,IAAG,qBAAT,EAA+B,WAAU,YAAzC;AAAuDD,sBAAYE;AAAnE,SAFF;AAGE;AAAA;AAAA,YAAK,IAAG,2BAAR;AACE;AAAA;AAAA,cAAM,WAAU,cAAhB,EAA+B,SAAS;AAAA,uBAAM,OAAKC,oBAAL,EAAN;AAAA,eAAxC;AAAA;AAAA;AADF;AAHF,OADF;AASD;;;;EAhByBP,MAAMC,S;;IAmB5BO,c;;;;;;;;;;;2CAEmB;AACrBxB,UAAIG,YAAJ,CAAiBsB,SAAjB;AACD;;;oCAEeC,O,EAAS;AACvBC,aAAOC,QAAP,GAAqBD,OAAOC,QAAP,CAAgBC,MAArC,SAA+CH,OAA/C;AACD;;;6BAEQ;AAAA;;AAEP,UAAMI,OAAO,EAAb;AAFO;AAAA;AAAA;;AAAA;AAGP,6BAAiB,KAAKxB,KAAL,CAAWO,OAA5B;AAAA,cAAQkB,KAAR;;AACED,eAAKE,IAAL,CAAU,oBAAC,QAAD,IAAU,KAAKD,MAAM,CAAN,CAAf,EAAyB,OAAOA,KAAhC,EAAuC,QAAQ,gBAACL,OAAD;AAAA,qBAAa,OAAKO,eAAL,CAAqBP,OAArB,CAAb;AAAA,aAA/C,EAA2F,SAAS;AAAA,qBAAQ,OAAKpB,KAAL,CAAW4B,OAAX,CAAmBxB,IAAnB,CAAR;AAAA,aAApG,GAAV;AADF;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKP,UAAGoB,KAAKK,MAAL,IAAe,CAAlB,EACEL,KAAKE,IAAL,CAAU;AAAA;AAAA,UAAM,KAAK,KAAX,EAAkB,WAAU,aAA5B;AAAA;AAAA,OAAV;;AAEF,aACE;AAAA;AAAA,UAAK,IAAG,uBAAR;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4B;AAA5B,WADF;AAEE;AAAA;AAAA,cAAM,WAAU,cAAhB,EAA+B,SAAS;AAAA,uBAAM,OAAKI,oBAAL,EAAN;AAAA,eAAxC;AAAA;AAAA;AAFF,SADF;AAKGN;AALH,OADF;AASD;;;;EA3B0Bd,MAAMC,S;;IA8B7BoB,Q;;;;;;;;;;;6BAEK;AAAA;;AAEP,UAAMX,UAAU,KAAKpB,KAAL,CAAWyB,KAAX,CAAiB,CAAjB,CAAhB;AACA,UAAMO,UAAU,KAAKhC,KAAL,CAAWyB,KAAX,CAAiBQ,KAAjB,CAAuB,CAAvB,CAAhB;AACA,UAAMC,aAAa,EAAnB;;AAJO;AAAA;AAAA;;AAAA;AAMP,8BAAwBF,OAAxB;AAAA;;AAAA;;AAAA,cAASG,IAAT;AAAA,cAAeC,IAAf;;AACEF,qBAAWR,IAAX,CAAgB,oBAAC,YAAD,IAAc,KAAKS,IAAnB,EAAyB,MAAMA,IAA/B,EAAqC,MAAMC,IAA3C,EAAiD,SAAS;AAAA,qBAAQ,OAAKpC,KAAL,CAAW4B,OAAX,CAAmBxB,IAAnB,CAAR;AAAA,aAA1D,GAAhB;AADF;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAK,WAAU,sBAAf;AACE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4BgB,oBAAQiB,WAAR;AAA5B,WADF;AAEE;AAAA;AAAA,cAAK,WAAU,aAAf;AACGH;AADH;AAFF,SADF;AAOE;AAAA;AAAA,YAAM,WAAU,cAAhB,EAA+B,SAAS;AAAA,qBAAM,OAAKlC,KAAL,CAAWsC,MAAX,CAAkBlB,OAAlB,CAAN;AAAA,aAAxC;AAAA;AAAA;AAPF,OADF;AAWD;;;;EAtBoBV,MAAMC,S;;IAyBvB4B,Y;;;;;;;;;;;6BAEK;AAAA;;AACP,aACE;AAAA;AAAA;AACE,qBAAU,eADZ;AAEE,mBAAS;AAAA,mBAAM,QAAKvC,KAAL,CAAW4B,OAAX,CAAmB,CAAC,QAAK5B,KAAL,CAAWmC,IAAZ,EAAkB,QAAKnC,KAAL,CAAWoC,IAA7B,CAAnB,CAAN;AAAA,WAFX;AAE0E,aAAKpC,KAAL,CAAWoC,IAAX,IAAmB;AAF7F,OADF;AAKD;;;;EARwB1B,MAAMC,S;;IAW3B6B,kB;;;;;;;;;;;6BAEK;AAAA;;AAEP,UAAMhB,OAAO,EAAb;AAFO;AAAA;AAAA;;AAAA;AAGP,8BAAwB,KAAKxB,KAAL,CAAWQ,WAAnC;AAAA;;AAAA;;AAAA,cAAS2B,IAAT;AAAA,cAAeC,IAAf;;AACEZ,eAAKE,IAAL,CAAU,oBAAC,YAAD,IAAc,KAAKS,IAAnB,EAAyB,MAAMA,IAA/B,EAAqC,MAAMC,IAA3C,EAAiD,SAAS;AAAA,qBAAQ,QAAKpC,KAAL,CAAW4B,OAAX,CAAmBxB,IAAnB,CAAR;AAAA,aAA1D,GAAV;AADF;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKP,UAAGoB,KAAKK,MAAL,IAAe,CAAlB,EACEL,KAAKE,IAAL,CAAU;AAAA;AAAA,UAAM,KAAK,KAAX,EAAkB,WAAU,aAA5B;AAAA;AAAA,OAAV;;AAEF,aACE;AAAA;AAAA,UAAK,IAAG,6BAAR,EAAsC,WAAU,kBAAhD;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4B;AAA5B;AADF,SADF;AAIGF;AAJH,OADF;AASD;;;;EAnB8Bd,MAAMC,S;;IAsBjC8B,c;;;;;;;;;;;8CAEsB;AACxB/C,UAAIG,YAAJ,CAAiB6C,YAAjB;AACD;;;6BAEQ;AAAA;;AAEP,UAAMC,QAAQ,KAAK3C,KAAL,CAAWS,OAAX,CAAmBoB,MAAnB,IAA6B,CAA3C;AACA,UAAMe,cAAc,OAApB;AACA,UAAMhB,UAAUe,QAAQ,YAAI,CAAE,CAAd,GAAiB;AAAA,eAAM,QAAKE,uBAAL,EAAN;AAAA,OAAjC;AACA,UAAMrB,OAAO,EAAb;;AAEA,UAAG,CAACmB,KAAJ,EAAW;AAAA;AAAA;AAAA;;AAAA;;AAET,gCAAwB,KAAK3C,KAAL,CAAWS,OAAnC;AAAA;;AAAA;;AAAA,gBAAS0B,IAAT;AAAA,gBAAeC,IAAf;;AACEZ,iBAAKE,IAAL,CAAU,oBAAC,YAAD,IAAc,KAAKS,IAAnB,EAAyB,MAAMA,IAA/B,EAAqC,MAAMC,IAA3C,EAAiD,SAAS;AAAA,uBAAQ,QAAKpC,KAAL,CAAW4B,OAAX,CAAmBxB,IAAnB,CAAR;AAAA,eAA1D,GAAV;AADF;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKV,OALD,MAKO;;AAELoB,aAAKE,IAAL,CAAU;AAAA;AAAA,YAAM,KAAK,KAAX,EAAkB,WAAU,aAA5B;AAAA;AAAA,SAAV;AAED;;AAED,aACE;AAAA;AAAA,UAAK,IAAG,yBAAR,EAAkC,WAAU,kBAA5C;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AACE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4B;AAA5B,WADF;AAEE;AAAA;AAAA,cAAM,WAAU,cAAhB,EAA+B,UAAUiB,KAAzC,EAAgD,SAASf,OAAzD;AAAmEgB;AAAnE;AAFF,SADF;AAKGpB;AALH,OADF;AAUD;;;;EAlC0Bd,MAAMC,S;;IAqC7BmC,O;;;;;;;;;;;6BACK;;AAEP,UAAMC,aAAa,SAAbA,UAAa;AAAA,eAAM1B,OAAOC,QAAP,CAAgB0B,KAAhB,EAAN;AAAA,OAAnB;;AAEA,aACE;AAAA;AAAA,UAAK,IAAG,UAAR;AACE,4BAAC,UAAD,IAAY,UAAS,MAArB,EAA4B,SAAS;AAAA,mBAAMD,YAAN;AAAA,WAArC;AADF,OADF;AAQD;;;;EAbmBrC,MAAMC,S;;IAgBtBsC,U;;;;;;;;;;;6BAEK;AAAA;;AACP,aACE;AAAA;AAAA,UAAQ,WAAW,KAAKjD,KAAL,CAAWkD,QAAX,GAAsB,OAAzC,EAAkD,SAAS;AAAA,mBAAM,QAAKlD,KAAL,CAAW4B,OAAX,EAAN;AAAA,WAA3D;AAAuF;AAAA;AAAA,YAAG,WAAU,gBAAb;AAA+B,eAAK5B,KAAL,CAAWkD;AAA1C;AAAvF,OADF;AAGD;;;;EANsBxC,MAAMC,S;;AAc/B,IAAIwC,iBAAiB,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,EAA6D,UAA7D,EAAyE,UAAzE,EAAqF,UAArF,EAAiG,UAAjG,EAA6G,UAA7G,CAArB;;AAEA,IAAIC,oBAAoB;;AAEtB7C,WAAS,CACP,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,CADO,EAEP,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAFO,EAGP,CAAC,QAAD,EAAW,UAAX,CAHO,CAFa;;AAQtBC,eAAa,CACX,UADW,EAEX,UAFW,EAGX,UAHW,EAIX,UAJW,EAKX,UALW,CARS;;AAgBtB6C,SAAO,CACL,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,CADK,EAEL,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,EAA6D,UAA7D,EAAyE,UAAzE,EAAqF,UAArF,EAAiG,UAAjG,EAA6G,UAA7G,CAFK;;AAhBe,CAAxB;;AAuBA,IAAIC,iBAAiB;;AAEnB/C,WAAS,CACP,CAAC,QAAD,EAAW,CAAC,UAAD,EAAa,KAAb,CAAX,EAAgC,CAAC,UAAD,EAAa,KAAb,CAAhC,CADO,EAEP,CAAC,QAAD,EAAW,CAAC,UAAD,EAAa,KAAb,CAAX,EAAgC,CAAC,UAAD,EAAa,KAAb,CAAhC,CAFO,EAGP,CAAC,QAAD,EAAW,CAAC,UAAD,EAAa,KAAb,CAAX,EAAgC,CAAC,UAAD,EAAa,KAAb,CAAhC,CAHO,CAFU;;AAQnBC,eAAa,CACX,CAAC,UAAD,EAAa,KAAb,CADW,EAEX,CAAC,UAAD,EAAa,KAAb,CAFW,EAGX,CAAC,UAAD,EAAa,KAAb,CAHW,EAIX,CAAC,UAAD,EAAa,KAAb,CAJW,EAKX,CAAC,UAAD,EAAa,KAAb,CALW,CARM;;AAgBnBC,WAAS,CACP,CAAC,UAAD,EAAa,KAAb,CADO,EAEP,CAAC,UAAD,EAAa,KAAb,CAFO,EAGP,CAAC,UAAD,EAAa,KAAb,CAHO,EAIP,CAAC,UAAD,EAAa,KAAb,CAJO,EAKP,CAAC,UAAD,EAAa,KAAb,CALO,EAMP,CAAC,UAAD,EAAa,KAAb,CANO,EAOP,CAAC,UAAD,EAAa,KAAb,CAPO,EAQP,CAAC,UAAD,EAAa,KAAb,CARO,EASP,CAAC,UAAD,EAAa,KAAb,CATO,EAUP,CAAC,UAAD,EAAa,KAAb,CAVO,EAWP,CAAC,UAAD,EAAa,KAAb,CAXO,EAYP,CAAC,UAAD,EAAa,KAAb,CAZO;;AAhBU,CAArB;;IAkCMX,W;AAEJ,uBAAYyD,OAAZ,EAAqB;AAAA;;AAEnB;AACA,SAAKA,OAAL,GAAeA,OAAf;;AAEA;AACA,SAAKnD,IAAL,GAAY,EAAEG,SAAS,EAAX,EAAeC,aAAa,EAA5B,EAAgCC,SAAS,EAAzC,EAAZ;;AAEA,SAAK+C,WAAL,GARmB,CAQK;AACxB,SAAKC,aAAL,GATmB,CASK;AAEzB;;AAGD;AACA;AACA;;;;oCAEgB;AAAA;;AAEd,UAAMC,SAASC,MAAMC,IAAN,CAAW,KAAKL,OAAL,CAAa5D,OAAxB,EAAiCkE,GAAjC,CAAqC;AAAA,eAAKC,EAAE,CAAF,CAAL;AAAA,OAArC,CAAf,CAFc,CAEkD;;AAEhErE,QAAEsE,IAAF,CAAO;AACLC,aAAK,gBADA;AAELC,cAAM,MAFD;AAGL7D,cAAM8D,KAAKC,SAAL,CAAe,EAAEC,MAAMV,MAAR,EAAf,CAHD;AAILW,qBAAa,iCAJR;AAKLC,kBAAU;AALL,OAAP,EAOGC,IAPH,CAOQ;AAAA,eAAQ,QAAKC,eAAL,CAAqBpE,IAArB,CAAR;AAAA,OAPR;AASD;;;oCAEeA,I,EAAM;AAAA;;AAAEqE,cAAQC,GAAR,CAAYtE,IAAZ;;AAEtB;AACA,WAAKuE,QAAL,CAAcvE,KAAKiD,KAAnB;;AAGA;AACA,WAAKjD,IAAL,CAAUG,OAAV,GAAoB,EAApB;AAPoB;AAAA;AAAA;;AAAA;AAQpB,8BAAiBH,KAAKG,OAAtB,mIAA+B;AAAA,cAAvBkB,KAAuB;;AAC7B,cAAMmD,iBAAiB,EAAvB;AACAA,yBAAelD,IAAf,CAAoBD,MAAMoD,KAAN,EAApB;AAF6B;AAAA;AAAA;;AAAA;AAG7B,kCAAgBpD,KAAhB;AAAA,kBAAQU,IAAR;;AACEyC,6BAAelD,IAAf,CAAoB,KAAKoD,YAAL,CAAkB3C,IAAlB,CAApB;AADF;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK7B,eAAK/B,IAAL,CAAUG,OAAV,CAAkBmB,IAAlB,CAAuBkD,cAAvB;AACD;;AAED;AAhBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBpB,WAAKxE,IAAL,CAAUI,WAAV,GAAwBJ,KAAKI,WAAL,CAAiBqD,GAAjB,CAAqB;AAAA,eAAQ,QAAKiB,YAAL,CAAkB3C,IAAlB,CAAR;AAAA,OAArB,CAAxB;;AAGA;AACA,WAAKqB,WAAL;AACA,WAAKuB,MAAL;AAED;;;6BAGQC,S,EAAW;AAAA;AAAA;AAAA;;AAAA;AAClB,8BAAsBA,SAAtB;AAAA;;AAAA;;AAAA,cAASC,EAAT;AAAA,cAAa7C,IAAb;;AACE,eAAKmB,OAAL,CAAa2B,aAAb,CAA2BD,EAA3B,EAA+B7C,IAA/B;AADF;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnB;;;iCAEYD,I,EAAM;AACjB,aAAO,CAACA,IAAD,EAAO,KAAKoB,OAAL,CAAa5D,OAAb,CAAqBwF,GAArB,CAAyBhD,IAAzB,CAAP,CAAP;AACD;;;wCAI0B;AAAA;AAAA,UAAbA,IAAa;AAAA,UAAPC,IAAO;;AAEzB,UAAG,CAACf,OAAO+D,OAAP,CAAetE,YAAYuE,cAAZ,CAA2BjD,IAA3B,CAAf,CAAJ,EAAsD;;AAEtD,UAAG,KAAKmB,OAAL,CAAa5D,OAAb,CAAqB2F,GAArB,CAAyBnD,IAAzB,CAAH,EAAmC;;AAEnC,WAAKoB,OAAL,CAAagC,SAAb,CAAuBpD,IAAvB,EAA6BC,IAA7B;;AAEA,WAAKqB,aAAL;AAED;;;2CAE4B;AAAA;AAAA,UAAbtB,IAAa;AAAA,UAAPC,IAAO;;AAE3B,UAAG,CAACf,OAAO+D,OAAP,CAAetE,YAAY0E,gBAAZ,CAA6BpD,IAA7B,CAAf,CAAJ,EAAwD;;AAExD,UAAG,CAAC,KAAKmB,OAAL,CAAa5D,OAAb,CAAqB2F,GAArB,CAAyBnD,IAAzB,CAAJ,EAAoC;;AAEpC,WAAKoB,OAAL,CAAakC,YAAb,CAA0BtD,IAA1B;AACA,WAAKqB,WAAL;AACA,WAAKuB,MAAL;;AAEA,WAAKtB,aAAL;AAED;;AAGD;;;;gCACY;;AAEV,UAAMiC,SAAS,MAAf;AACA,UAAM1B,MAAM,SAAZ;;AAEA,UAAM2B,OAAOlG,EAAE,QAAF,EAAY;AACvBiG,gBAAQA,MADe;AAEvBE,gBAAQ5B;AAFe,OAAZ,CAAb;;AAKAvE,QAAE,MAAF,EAAUoG,MAAV,CAAiBF,IAAjB;AACAA,WAAKG,MAAL;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACD;;;kCAEa;AAAA;;AACZ,UAAIrF,UAAUkD,MAAMC,IAAN,CAAW,KAAKL,OAAL,CAAa9C,OAAxB,CAAd,CADY,CACoC;;AAEhDA,gBAAUsF,EAAEtF,OAAF,EAAWuF,MAAX,CAAkB;AAAA,eAAK,QAAKzC,OAAL,CAAa5D,OAAb,CAAqB2F,GAArB,CAAyBW,EAAE,CAAF,CAAzB,CAAL;AAAA,OAAlB,CAAV,CAHY,CAGsD;;AAElE,WAAK7F,IAAL,CAAUK,OAAV,GAAoBA,OAApB,CALY,CAKiB;AAC9B;;;mCAEc;;AAEb,UAAG,CAACY,OAAO+D,OAAP,CAAetE,YAAYoF,oBAA3B,CAAJ,EAAsD;;AAEtD,WAAK3C,OAAL,CAAab,YAAb;AACA,WAAKc,WAAL;AACA,WAAKuB,MAAL;AAED;;;sCAEiB;;AAEhB,UAAMoB,WAAW9E,OAAO+E,MAAP,qDAAkE1G,IAAI2G,IAAJ,CAASpB,EAA3E,CAAjB;AACA,UAAMqB,mBAAmB,eAAeC,IAAf,CAAoBJ,QAApB,CAAzB;AACA,UAAMK,cAAcL,YAAYzG,IAAI2G,IAAJ,CAASpB,EAAzC;;AAGA,UAAGqB,oBAAoBE,WAAvB,EAAoC;;AAElC,aAAKjD,OAAL,CAAagC,SAAb,CAAuBY,QAAvB;AACA,aAAK1C,aAAL;AAED,OALD,MAKO;AACLgB,gBAAQC,GAAR,UAAmByB,QAAnB;AACD;AAEF;;;6BAGQ;AACPM,eAAS1B,MAAT,CACE,oBAAC,aAAD,IAAe,MAAM,KAAK3E,IAA1B,GADF,EAEEsG,SAASC,cAAT,CAAwB,WAAxB,CAFF;AAID;;;;;;AAKH,IAAM7F,cAAc;AAClBC,kBADkB;AAElBC,2GAFkB;AAGlBqE,kBAAgB;AAAA,qBAAejD,QAAQ,aAAvB;AAAA,GAHE;AAIlBoD,oBAAkB;AAAA,wBAAkBpD,QAAQ,aAA1B;AAAA,GAJA;AAKlB8D;AALkB,CAApB","file":"friends_page.js","sourcesContent":["\n$(()=>{\n\n  ENV.friends = new Friends();\n  ENV.friends_page = new FriendsPage(ENV.friends);\n\n});\n\n\nclass DSGameFriends extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lobbyOptionsShown: false,\n    }\n  }\n\n  lobbyOptionsToggle() {\n    this.setState({\n      lobbyOptionsShown: !this.state.lobbyOptionsShown\n    })\n  }\n\n  friendPlayer(data) { // data == [code, name]\n    ENV.friends_page.friendPlayer(data);\n  }\n\n  unfriendPlayer(data) { // data == [code, name]\n    ENV.friends_page.unfriendPlayer(data);\n  }\n\n  render() {\n\n    const {lobbies, unavailable, history} = this.props.data;\n\n    return (\n      <div id=\"ds-game-friends\" className=\"parent-container\">\n        <div id=\"part-1\" className=\"split-view-part1\">\n          <IconBar />\n          <FriendsHeader />\n          <LobbiesSection lobbies={lobbies} onClick={data => this.unfriendPlayer(data)} />\n        </div>\n        <div id=\"part-2\" className=\"split-view-part2\">\n          <UnavailableSection unavailable={unavailable} onClick={data => this.unfriendPlayer(data)} />\n          <HistorySection history={history} onClick={data => this.friendPlayer(data)} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass FriendsHeader extends React.Component {\n\n  handleAddFriendClick() {\n    ENV.friends_page.enterFriendCode();\n  }\n\n  render() {\n    return (\n      <div id=\"friends-header\">\n        <span id=\"friends-header-title\" className=\"header-1\">{FRIENDS_REF.title}</span>\n        <span id=\"friends-header-desc\" className=\"lobby-text\">{FRIENDS_REF.description}</span>\n        <div id=\"friends-header-button-row\">\n          <span className=\"lobby-button\" onClick={() => this.handleAddFriendClick()}>add friend</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LobbiesSection extends React.Component {\n\n  handleHostMatchClick() {\n    ENV.friends_page.hostMatch();\n  }\n\n  handleJoinClick(lobbyID) {\n    window.location = `${window.location.origin}/${lobbyID}`\n  }\n\n  render() {\n\n    const rows = [];\n    for(let lobby of this.props.lobbies)\n      rows.push(<LobbyRow key={lobby[0]} lobby={lobby} onJoin={(lobbyID) => this.handleJoinClick(lobbyID)} onClick={data => this.props.onClick(data)} />)\n    if(rows.length == 0)\n      rows.push(<span key={'---'} className=\"filler-text\">none</span>);\n\n    return (\n      <div id=\"friends-lobby-section\">\n        <div className=\"title-row\">\n          <span className=\"header-2\">{'JOINABLE'}</span>\n          <span className=\"lobby-button\" onClick={() => this.handleHostMatchClick()}>host match</span>\n        </div>\n        {rows}\n      </div>\n    );\n  }\n}\n\nclass LobbyRow extends React.Component {\n\n  render() {\n\n    const lobbyID = this.props.lobby[0];\n    const players = this.props.lobby.slice(1);\n    const playerList = [];\n\n    for(let [code, name] of players)\n      playerList.push(<PlayerButton key={code} code={code} name={name} onClick={data => this.props.onClick(data)} />)\n\n    return (\n      <div className=\"lobby-row\">\n        <div className=\"lobby-row-info-group\">\n          <span className=\"lobby-id\">{lobbyID.toUpperCase()}</span>\n          <div className=\"player-list\">\n            {playerList}\n          </div>\n        </div>\n        <span className=\"lobby-button\" onClick={() => this.props.onJoin(lobbyID)}>join</span>\n      </div>\n    );\n  }\n}\n\nclass PlayerButton extends React.Component {\n\n  render() {\n    return (\n      <span\n        className=\"player-button\"\n        onClick={() => this.props.onClick([this.props.code, this.props.name])}>{this.props.name || '---'}</span>\n    );\n  }\n}\n\nclass UnavailableSection extends React.Component {\n\n  render() {\n\n    const rows = [];\n    for(let [code, name] of this.props.unavailable)\n      rows.push(<PlayerButton key={code} code={code} name={name} onClick={data => this.props.onClick(data)} />)\n    if(rows.length == 0)\n      rows.push(<span key={'---'} className=\"filler-text\">none</span>);\n\n    return (\n      <div id=\"friends-unavailable-section\" className=\"split-view-part1\">\n        <div className=\"title-row\">\n          <span className=\"header-2\">{'NOT AVAILABLE'}</span>\n        </div>\n        {rows}\n      </div>\n    );\n\n  }\n}\n\nclass HistorySection extends React.Component {\n\n  handleClearHistoryClick() {\n    ENV.friends_page.clearHistory();\n  }\n\n  render() {\n\n    const empty = this.props.history.length == 0;\n    const buttonTitle = 'clear';\n    const onClick = empty ? ()=>{} : () => this.handleClearHistoryClick();\n    const rows = [];\n\n    if(!empty) {\n\n      for(let [code, name] of this.props.history)\n        rows.push(<PlayerButton key={code} code={code} name={name} onClick={data => this.props.onClick(data)} />)\n\n    } else {\n\n      rows.push(<span key={'---'} className=\"filler-text\">none</span>);\n\n    }\n\n    return (\n      <div id=\"friends-history-section\" className=\"split-view-part2\">\n        <div className=\"title-row\">\n          <span className=\"header-2\">{'HISTORY'}</span>\n          <span className=\"lobby-button\" disabled={empty} onClick={onClick}>{buttonTitle}</span>\n        </div>\n        {rows}\n      </div>\n    );\n\n  }\n}\n\nclass IconBar extends React.Component {\n  render() {\n\n    const homeAction = () => window.location.reset();\n\n    return (\n      <div id=\"icon-bar\">\n        <IconButton iconName=\"home\" onClick={() => homeAction()}/>\n        {/*<IconButton iconName=\"volume_up\" />*/}\n        {/*<IconButton iconName=\"help\" />*/}\n        {/*<IconButton iconName=\"settings\" />*/}\n      </div>\n    );\n  }\n}\n\nclass IconButton extends React.Component {\n\n  render() {\n    return (\n      <button className={this.props.iconName + '_icon'} onClick={() => this.props.onClick()}><i className=\"material-icons\">{this.props.iconName}</i></button>\n    );\n  }\n}\n\n\n\n\n\n\nlet sendSAMPLEDATA = ['4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', ];\n\nlet receiveSAMPLEDATA = {\n\n  lobbies: [\n    ['Dks73k', '4a50adb3', '4a50adb3', ],\n    ['HJKADF', '4a50adb3', '4a50adb3', ],\n    ['BJ5QBE', '4a50adb3', ],\n  ],\n\n  unavailable: [\n    '4a50adb3',\n    '4a50adb3',\n    '4a50adb3',\n    '4a50adb3',\n    '4a50adb3',\n  ],\n\n  names: [\n    ['bro', 'bro', 'bro', 'bro', 'bro', 'bro', 'bro', 'bro', 'bro', 'bro', ],\n    ['4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', '4a50adb3', ],\n  ],\n\n};\n\nlet dataSAMPLEDATA = {\n\n  lobbies: [\n    ['Dks73k', ['4a50adb3', 'bro'], ['4a50adb3', 'bro']],\n    ['HJKADF', ['4a50adb3', 'bro'], ['4a50adb3', 'bro']],\n    ['BJ5QBE', ['4a50adb3', 'bro'], ['4a50adb3', 'bro']],\n  ],\n\n  unavailable: [\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n  ],\n\n  history: [\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n    ['4a50adb3', 'bro'],\n  ],\n\n};\n\n\nclass FriendsPage {\n\n  constructor(adapter) {\n\n    // interface with local player record\n    this.adapter = adapter;\n\n    // data formatted for React\n    this.data = { lobbies: [], unavailable: [], history: [] };\n\n    this.loadHistory();     // fill history portion\n    this.contactServer();   // fill lobbies/unavailable portion\n\n  }\n\n\n  // [- Process -]\n  // 1. a friends list will be sent to find out who is available to play\n  // 2. the server responds with the names and lobbies of connected players\n\n  contactServer() {\n\n    const IDList = Array.from(this.adapter.friends).map(a => a[0]); // from map to 1d arr.\n\n    $.ajax({\n      url: '/online_status',\n      type: 'POST',\n      data: JSON.stringify({ list: IDList }),\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json'\n    })\n      .done(data => this.serverResponded(data));\n\n  }\n\n  serverResponded(data) { console.log(data);\n\n    // sync names from server\n    this.setNames(data.names);\n\n\n    // lobbies\n    this.data.lobbies = [];\n    for(let lobby of data.lobbies) {\n      const convertedLobby = [];\n      convertedLobby.push(lobby.shift())\n      for(let code of lobby)\n        convertedLobby.push(this.namedPairFor(code))\n      this.data.lobbies.push(convertedLobby);\n    }\n\n    // unavailable\n    this.data.unavailable = data.unavailable.map(code => this.namedPairFor(code));\n\n\n    // refresh React\n    this.loadHistory();\n    this.render();\n\n  }\n\n\n  setNames(namesList) {\n    for(let [id, name] of namesList)\n      this.adapter.setFriendName(id, name);\n  }\n\n  namedPairFor(code) {\n    return [code, this.adapter.friends.get(code)];\n  }\n\n\n\n  friendPlayer([code, name]) {\n    \n    if(!window.confirm(FRIENDS_REF.friendQuestion(name))) return;\n\n    if(this.adapter.friends.has(code)) return;\n\n    this.adapter.addFriend(code, name);\n\n    this.contactServer();\n\n  }\n\n  unfriendPlayer([code, name]) {\n\n    if(!window.confirm(FRIENDS_REF.unfriendQuestion(name))) return;\n\n    if(!this.adapter.friends.has(code)) return;\n\n    this.adapter.deleteFriend(code);\n    this.loadHistory();\n    this.render();\n\n    this.contactServer();\n\n  }\n\n\n  // for host button\n  hostMatch() {\n\n    const method = 'post';\n    const url = '/create';\n\n    const form = $('<form>', {\n      method: method,\n      action: url\n    });\n\n    $('body').append(form);\n    form.submit();\n\n\n    // $.ajax({\n    //   url: '/create',\n    //   type: 'POST',\n    // }).done(\n    //   data => data.redirect ? window.location.href = data.redirect : 0\n    // );\n\n\n    // <form action=\"/create\" method=\"POST\"><input type=\"submit\" value=\"host\"></form>\n  }\n\n  loadHistory() {\n    let history = Array.from(this.adapter.history); // map to 2d arr.\n\n    history = _(history).reject(p => this.adapter.friends.has(p[0])); // filter out any friends\n\n    this.data.history = history; // assign\n  }\n\n  clearHistory() {\n\n    if(!window.confirm(FRIENDS_REF.clearHistoryQuestion)) return;\n\n    this.adapter.clearHistory();\n    this.loadHistory();\n    this.render();\n\n  }\n\n  enterFriendCode() {\n\n    const response = window.prompt(`Enter a friends ID code.\\nHere is yours to copy:`, ENV.user.id)\n    const passedValidation = /^(\\d|\\w){8}$/.test(response);\n    const isNotOurOwn = response != ENV.user.id;\n\n\n    if(passedValidation && isNotOurOwn) {\n\n      this.adapter.addFriend(response);\n      this.contactServer();\n\n    } else {\n      console.log(`ID (${response}) was rejected as a friend. see enterFriendCode`);\n    }\n\n  }\n\n\n  render() {\n    ReactDOM.render(\n      <DSGameFriends data={this.data} />,\n      document.getElementById('container')\n    );\n  }\n\n}\n\n\nconst FRIENDS_REF = {\n  title: `FRIENDS`,\n  description: `Add friends to join them when they’re online.\\nYou can also find recent players here.`,\n  friendQuestion: name => `Add ${name || 'this player'} as a friend?`,\n  unfriendQuestion: name => `Remove ${name || 'this player'} as a friend?`,\n  clearHistoryQuestion: `Clear history?`,\n}"]}