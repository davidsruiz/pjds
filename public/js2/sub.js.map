{"version":3,"sources":["../js/sub.js"],"names":["Sub","Attractor","data","id","team","type","Object","assign","stats","position","V2D","x","y","velocity","length","SPEED","angle","rotation","radius","life_counter","disabled","dt","mul","Math","pow","FRICTION","add","mul_","LIFESPAN","ENV","game","removeSub","RANGE","MAX_INTENSITY","INTENSITY_FUNCTION","sqrt","_A","_B","Repulsor","hp","BlockBomb","exploding","EXPLOSION_RANGE","EXPLOSION_DAMAGE_FUNCTION","StealthCloak","target","players","get","player","dead","ship","flag","stealth","Missile","direction","copy","sub","delta_angle","atan2","sin","cos","MAX_TURN_SPEED","PI","VISION_RANGE"],"mappings":"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","file":"sub.js","sourcesContent":["\nclass Sub {\n\n}\n\nclass Attractor {\n\n  constructor(data) {\n    this.id = data.id;\n    this.team = data.team;\n    this.type = data.type;\n\n    Object.assign(this, Attractor.stats);\n\n    // needs work\n    this.position = new V2D(data.position.x, data.position.y);\n\n    this.velocity = new V2D();\n    this.velocity.length = this.SPEED;\n    this.velocity.angle = data.angle;\n\n    this.rotation = 0;\n\n    this.radius = 4;\n\n    // this.hp = data.hp;\n\n    this.life_counter = 0;\n    this.disabled = false;\n  }\n\n  update(dt) {\n    this.velocity.mul(Math.pow(this.FRICTION, (60*dt)));\n    this.position.add(this.velocity.mul_(dt));\n    this.rotation += ((this.velocity.length / 21600) + 0.05);\n    if((this.life_counter+=dt) > this.LIFESPAN) {\n      this.disabled = true;\n      ENV.game.removeSub(this.id);\n    }\n  }\n}\n\nAttractor.stats = {\n  radius: 4,\n  SPEED: 720, //px/s\n  FRICTION: 0.96,\n\n  // (attraction strength) you put in a distance it gives you the acceleration force\n  // INTENSITY_FUNCTION:\n  // x => fourth root of (a-(x * b)) over 2\n    // where: a is (y-intercept * 2)^4\n    //        b is a / x-intercept\n  // y-intercept (max effect) is 120px/s and x-intercept (range) is 200\n  RANGE: 240,\n  MAX_INTENSITY: 2,\n  INTENSITY_FUNCTION(x) { return (Math.sqrt(Math.sqrt((Attractor.stats._A) - (x * (Attractor.stats._B))))/2)*20 },\n\n  LIFESPAN: 4 //s\n};\n\nAttractor.stats._A = Math.pow(Attractor.stats.MAX_INTENSITY*2, 4);\nAttractor.stats._B = Attractor.stats._A / Attractor.stats.RANGE;\n\n\nclass Repulsor {\n\n  constructor(data) {\n    this.id = data.id;\n    this.team = data.team;\n    this.type = data.type;\n\n    Object.assign(this, Repulsor.stats);\n\n    // needs work\n    this.position = new V2D(data.position.x, data.position.y);\n\n    this.velocity = new V2D();\n    this.velocity.length = this.SPEED;\n    this.velocity.angle = data.angle;\n\n    this.rotation = 0;\n\n    this.radius = 4;\n\n    this.hp = data.hp;\n\n    this.life_counter = 0;\n    this.disabled = false;\n  }\n\n  update(dt) {\n    this.velocity.mul(Math.pow(this.FRICTION, (60*dt)));\n    this.position.add(this.velocity.mul_(dt));\n    this.rotation += ((this.velocity.length / 21600) + 0.05);\n    if((this.life_counter+=dt) > this.LIFESPAN) {\n      this.disabled = true;\n      ENV.game.removeSub(this.id);\n    }\n  }\n}\n\nRepulsor.stats = {\n  radius: 4,\n  SPEED: 600, //px/s\n  FRICTION: 0.96,\n\n  // (repulsion strength) you put in a distance it gives you the acceleration force\n  // INTENSITY_FUNCTION: x => fourth root of (a-(x * b)) over 2\n  // y-intercept (max effect) is 120px/s and x-intercept (range) is 160\n  // a is 256 and b is\n  RANGE: 160,\n  MAX_INTENSITY: 2,\n  INTENSITY_FUNCTION(x) { return (Math.sqrt(Math.sqrt((Repulsor.stats._A) - (x * (Repulsor.stats._B))))/2)*20 },\n\n  LIFESPAN: 3 //s\n};\n\nRepulsor.stats._A = Math.pow(Repulsor.stats.MAX_INTENSITY*2, 4);\nRepulsor.stats._B = Repulsor.stats._A / Repulsor.stats.RANGE;\n\nclass BlockBomb {\n\n  constructor(data) {\n    this.id = data.id;\n    this.team = data.team;\n    this.type = data.type;\n\n    Object.assign(this, BlockBomb.stats);\n\n    // needs work\n    this.position = new V2D(data.position.x, data.position.y);\n\n    this.velocity = new V2D();\n    this.velocity.length = this.SPEED;\n    this.velocity.angle = data.angle;\n\n    this.rotation = 0;\n\n    this.radius = 4;\n\n    this.life_counter = 0;\n    this.disabled = false;\n  }\n\n  update(dt) {\n    // if(this.disabled) ENV.game.endSub(this.id);\n    this.velocity.mul(Math.pow(this.FRICTION, (60*dt)));\n    this.position.add(this.velocity.mul_(dt));\n    // this.rotation += ((this.velocity.length / 360) + 0.05);\n    this.rotation += ((this.velocity.length / 2400) + 0.0);\n    if((this.life_counter+=dt) > this.LIFESPAN) {\n      this.exploding = true;\n    }\n  }\n\n  explode() { // TODO PLEASE FIX\n    this.exploding = true;\n    // ENV.game.removeSub(this.id);\n  }\n}\n\nBlockBomb.stats = {\n  radius: 10,\n  SPEED: 360, //px/s\n  FRICTION: 0.99,\n\n  EXPLOSION_RANGE: 120,\n  EXPLOSION_DAMAGE_FUNCTION: x => ((8000/((BlockBomb.stats._A * x)+100))-20)*3, // 60hp at contact and 0hp at range px\n\n  LIFESPAN: 2.4 //s\n}\n\nBlockBomb.stats._A = 300 / Repulsor.stats.RANGE;\n\nclass StealthCloak {\n\n  constructor(data) {\n    this.id = data.id;\n    this.type = data.type;\n    this.team = data.team;\n\n    this.target = ENV.game.players.get(data.player);\n\n    Object.assign(this, StealthCloak.stats);\n\n    this.life_counter = 0;\n    this.disabled = false;\n  }\n\n  update(dt) {\n    let dead;\n    if(this.target) {\n      dead = ((this.life_counter+=dt) > this.LIFESPAN) || (this.target.ship.disabled) || (this.target.ship.flag);\n      this.target.ship.stealth = !dead;\n    }\n    if(dead) {\n      // ENV.game.removeSub(this.id);\n    }\n    this.disabled = dead;\n  }\n\n}\n\nStealthCloak.stats = {\n  LIFESPAN: 6 //s\n};\n\n\nclass Missile {\n\n  constructor(data) {\n    this.id = data.id;\n    this.team = data.team;\n    this.type = data.type;\n\n    this.target = null; // ship\n\n    Object.assign(this, Missile.stats);\n\n    this.position = new V2D(data.position.x, data.position.y);\n\n    this.velocity = new V2D();\n    this.velocity.length = this.SPEED;\n    this.velocity.angle = data.angle;\n\n    this.rotation = this.velocity.angle;\n\n    this.life_counter = 0;\n    this.disabled = false;\n  }\n\n  update(dt) {\n\n    if(this.target) {\n      // http://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles?noredirect=1&lq=1\n      // x is the target angle. y is the source or starting angle\n      // It returns the signed delta angle.\n      // var x = this.target.position.angle, y = this.position.angle;\n      // var delta_angle = Math.atan2(Math.sin(x-y), Math.cos(x-y)); log(`delta_angle: ${delta_angle}`)\n\n\n      var direction = this.target.position.copy().sub(this.position);\n\n\n      var x = direction.angle, y = this.rotation;\n      var delta_angle = Math.atan2(Math.sin(x-y), Math.cos(x-y)); // log(`delta_angle: ${delta_angle}`)\n\n      // var delta_rotation = direction.angle - this.rotation; log(Math.degrees(delta_rotation));\n      if(delta_angle > this.MAX_TURN_SPEED * dt) delta_angle = this.MAX_TURN_SPEED * dt;\n      if(delta_angle <-this.MAX_TURN_SPEED * dt) delta_angle = -this.MAX_TURN_SPEED * dt;\n      this.velocity.angle = this.rotation + delta_angle;\n    }\n\n    this.position.add(this.velocity.mul_(dt));\n    this.rotation = this.velocity.angle;\n\n    if((this.life_counter += dt) > this.LIFESPAN) {\n      this.exploding = true;\n    }\n  }\n\n  explode() {\n    this.exploding = true;\n    // ENV.game.removeSub(this.id);\n  }\n}\n\nMissile.stats = {\n  radius: 12,\n  SPEED: 220, //px/s\n  hp: 16,\n  MAX_TURN_SPEED: (Math.PI / 2), // radians/s\n\n  VISION_RANGE: 400,\n  EXPLOSION_RANGE: 30, // 200\n\n  LIFESPAN: 2.6 //s\n}\n"]}