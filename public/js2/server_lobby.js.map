{"version":3,"sources":["../js/server_lobby.js"],"names":["Timer","require","TIME","sec","mil","min","MAX_PLAYER_LIMIT","MIN_PLAYER_LIMIT","MAX_NUM_OF_TEAMS","GAME_DURATION","COUNTDOWN_DURATION","OVERTIME_DURATION","Array","prototype","sample","Math","floor","random","length","shuffle","sort","flipCoin","highestValuedIndex","highest","i","String","empty","trim","p","randomIntMinMax","max","Lobby","id","type","options","required_players","players","limit","max_players","max_teams","teams","numOfTeams","Set","ongoing","connected","colors","state","scores","overtime","timer","setupData","gameOverCallback","client","add","lobby","delete","ship_data","status","joined","size","set","userid","active","disconnects","push","msg","data","key","value","get","emit","obj","block","e","name","cleared","playerCleared","ready","forEach","player","send","capacity","team_capacity","callback","start","timeout","setupTeams","console","log","DeepSpaceGame","colorCombinations","map","counter","team","index","from","entry","tint","TINT","t","s","duration","timeLeft","freeTeamCountSetup","explicitTeamCountSetup","filter","arr","has","winningTeam","leadTeam","player_info","won","getTeam","flagHolder","setTimeout","undefined","finish","cancel","interval","setWinForPlayers","endCurrentGame","simplify","clearLastGame","client_id","test","_password","play_arr","c","str","spec_arr","id_","REF","indexOf","code","password","game_settings","player_capacity","mode","stock","users","spectators","unsus","a","b","GameTimer","time","startTime","Date","now","timout_id","clearTimeout","timeElapsed","Map","maps","spawn","x","y","assortment","c1","c2","typeDesc","ship","sub","stats","module","exports"],"mappings":"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","file":"server_lobby.js","sourcesContent":["\n\"use strict\";\n\nlet Timer = require('./timer.js');\n\nlet TIME = {sec: function(mil) {return mil * 1000}, min: function(mil) {return this.sec(mil) * 60}};\n\nconst MAX_PLAYER_LIMIT = 8;\nconst MIN_PLAYER_LIMIT = 2;\nconst MAX_NUM_OF_TEAMS = 4;\nconst GAME_DURATION = TIME.min(5); // 5 min 180000 3 min\nconst COUNTDOWN_DURATION = TIME.sec(3); // 3 sec\nconst OVERTIME_DURATION = TIME.sec(30);\n\n\nArray.prototype.sample = function() { return this[Math.floor(Math.random() * this.length)] };\nArray.prototype.shuffle = function() { return this.sort(() => Math.flipCoin() )};\nArray.prototype.highestValuedIndex = function() { let highest = 0; for(let i = 0; i < this.length; i++) { if(this[i] > this[highest]) highest = i; if(typeof this[i] != 'undefined' && typeof this[highest] == 'undefined') highest = i; } return highest; };\nString.prototype.empty = function() { return this.trim() == \"\"};\nMath.flipCoin = (p = 0.5) => Math.random() < p;\nMath.randomIntMinMax = (min, max) => Math.floor((Math.random()*(max - min)) + min);\n\nclass Lobby {\n  constructor(id, type, options = {}) {\n    this.id = id;\n    this.type = type;\n    this.required_players = options.players || MIN_PLAYER_LIMIT;\n    this.limit = options.max_players || options.players || MAX_PLAYER_LIMIT; // max_players_allowed\n    // this.limit = pCount || NUM_OF_PLAYERS;\n    this.max_teams = options.teams || MAX_NUM_OF_TEAMS;\n    this.numOfTeams = options.teams;\n    this.players = new Set();\n    this.ongoing = false;\n\n    this.connected = new Set();\n\n    this.colors;\n    // this.colors = DeepSpaceGame.colorCombinations.get(this.numOfTeams).sample().shuffle().map(e => DeepSpaceGame.colors[e])\n\n    this.state = {scores: [], overtime: false};\n    this.timer = new Timer(GAME_DURATION + COUNTDOWN_DURATION);\n    this.setupData;\n\n    this.gameOverCallback;\n  }\n  get full() {return !(this.players.size < this.limit) }\n\n\n\n\n  connect(client) {\n    this.connected.add(client);\n    client.lobby = this;\n  }\n\n  disconnect(client) {\n    this.connected.delete(client);\n    delete client.lobby;\n  }\n\n  join(client, ship_data) {\n    let status = \"\"; //\n  }\n\n\n\n\n\n\n\n\n\n\n\n  join(client) {\n    var joined = false;\n    if(this.players.size < this.limit && !this.ongoing) {\n      this.players.set(client.userid, client);\n      client.active = true;\n      joined = true;\n    }\n    this.connected.set(client.userid, client);\n    client.lobby = this;\n    return joined;\n  }\n\n  remove(client) {\n    this.players.delete(client.userid);\n    this.connected.delete(client.userid);\n\n    if(client.active && this.ongoing)\n      this.setupData.disconnects.push(client.userid);\n\n    delete client.lobby;\n    client.active = false;\n  }\n  emit(msg, data) {\n    for (let [key, value] of this.connected)\n      this.connected.get(key).emit(msg, data);\n  }\n\n  broadcast(msg, data, client) {\n    for (let [key, value] of this.connected)\n      if(key != client.userid)\n        this.connected.get(key).emit(msg, data);\n  }\n\n  // to remove circular dependencies and minimize bandwidth consumption,\n  // only select data is sent over.\n  simplify() {\n    var obj = {};\n    var block = (e) => {\n      return { name: e.name, cleared: this.playerCleared(e), ready: !!e.ready }\n    };\n    this.players.forEach((player)=>{\n      obj[player.userid] = block(player)\n    });\n    let send = { type: this.type, players: obj, capacity: this.limit, team_capacity: this.max_teams };\n    // if(this.type == 'private') send.team_capacity = this.max_teams;\n    return send;\n  }\n\n  start(callback) {\n    if(!this.setupData) {\n      this.gameOverCallback = callback;\n      this.ongoing = true;\n      this.timer.start(() => { this.timeout() });\n      var numOfTeams = this.setupTeams(); console.log(numOfTeams);\n      var colors = DeepSpaceGame.colorCombinations.get(numOfTeams).sample().shuffle().map(e => DeepSpaceGame.colors[e]);\n      var players = [], counter = 0;\n      var block = (id, p, i) => {\n        // p.team = i%numOfTeams;\n        return { name: p.name, team: p.team, index: i, id: id, type: p.type }\n      };\n      Array.from(this.players).shuffle().forEach(entry => {\n        let [id, player] = entry;\n        players.push(block(id, player, counter++));\n      });\n      this.setupData = {\n        teams: numOfTeams,\n        colors: colors,\n        players: players,\n        state: this.state,\n        disconnects: [],\n        tint: TINT.shuffle()\n      };\n\n      for (let [id, player] of this.players) player.ready = false;\n      for (let i = 0; i < numOfTeams; i++) this.state.scores.push({t:i, s:100});\n    }\n    this.setupData.duration = this.timer.timeLeft - COUNTDOWN_DURATION;\n    return this.setupData;\n  }\n\n  setupTeams() {\n    // private matches distribute teams freely\n    if(this.type == 'practice') this.max_teams = 1; // TODO: fix.. not good\n    return (this.type == 'private') ? this.freeTeamCountSetup() : this.explicitTeamCountSetup();\n  }\n\n  explicitTeamCountSetup() {\n    Array.from(this.players).shuffle().forEach((entry, i) => {\n      let [, player] = entry;\n      player.team = i % this.max_teams;\n    });\n    return this.max_teams;\n  }\n\n  freeTeamCountSetup() {\n    let teams = [];\n    for (let i = 0; i < this.max_teams; i++) teams.push([]);\n    // first players that have explicitly chosen a team get assigned to it (if valid)\n    for (let [, player] of this.players) {\n      if(player.team < this.max_teams && player.team >= 0) {\n        teams[player.team].push(player);\n      } else {\n        player.team = -1;\n      }\n    }\n\n    // then empty teams are removed\n    teams = teams.filter(arr => arr.length != 0); // console.log(teams.map(arr => arr.length)); console.log(teams.map(arr => arr.map(player => player.name)));\n\n    // and every player without a team gets its own team\n    for (let [, player] of this.players)\n      if(player.team == -1)\n        teams.push([player]);\n\n    // players are given their final (and now organized) team number\n    teams.forEach( (team, i) => {\n      for(let player of team)\n        player.team = i;\n    });\n\n    return teams.length;\n  }\n\n  get ready() {\n    for (let [id, player] of this.players) { // console.log(`${player.userid} : ${player.ready}`);\n      if(!player.ready) return false;}\n    return true;\n  }\n\n  playerCleared(player) {\n    return !(!player.type || player.name.empty())\n  }\n\n  get sustainable() {\n    return this.players.size >= this.required_players;\n  }\n\n  get unsustainable() {\n    var unsus = this.players.size < (this.limit == 1 ? 1 : 2 ); // console.log(`unsustainable: ${unsus}`);\n    if(unsus) return true;\n    return false;\n  }\n\n  active(userid) {\n    return this.players.has(userid);\n  }\n\n  setWinForPlayers(winningTeam) { if(this.type != 'public') return;\n    // if no winning team index is presented, one is deducted using the current scores\n    // if(typeof winningTeam === 'undefined') {\n    //   if(this.state.scores.length != 0) {\n    //     winningTeam = this.state.scores.shuffle().sort((a,b) => a.s-b.s)[0].t;\n    //   } else {\n    //     winningTeam = Math.floor(Math.random()*this.setupData.teams);\n    //     `no scores were registered!!`.yellow();\n    //   }\n    // }\n    winningTeam = winningTeam || this.state.leadTeam;\n    this.setupData.players.forEach((player_info)=>{\n      var client = this.players.get(player_info.id);\n      if(client && (player_info.team == winningTeam)) client.won = true;\n    });\n  }\n\n  timeout() {\n    this.emit('request progress');\n    console.log(`flagholder team ${this.getTeam(this.state.flagHolder)} v.s. lead team ${this.state.leadTeam}`)\n    setTimeout(()=>{\n      if(this.state.overtime || this.state.flagHolder === undefined || this.getTeam(this.state.flagHolder) === this.state.leadTeam) {\n        this.ongoing = false;\n        this.finish();\n      } else {\n        this.state.overtime = true;\n        this.emit('overtime');\n        this.timer.cancel();\n        this.timer.interval = OVERTIME_DURATION;\n        this.timer.start(() => { this.timeout() });\n      }\n    }, 1000);\n  }\n\n  finish() {\n    this.setWinForPlayers();\n    this.emit('game over');\n    this.endCurrentGame();\n    this.emit('lobby state', this.simplify());\n  }\n\n  endCurrentGame() {\n    this.clearLastGame();\n    if(this.gameOverCallback) {this.gameOverCallback(); delete this.gameOverCallback;}\n    // this.pickupNewPlayers();\n  }\n\n  clearLastGame() {\n    this.ongoing = false;\n    this.setupData = null;\n    this.state.flagHolder = undefined;\n    this.state.leadTeam = undefined;\n    this.state.scores = [];\n    this.state.overtime = false;\n    this.timer.cancel();\n    this.timer.interval = GAME_DURATION + COUNTDOWN_DURATION;\n  }\n\n  get game_lead_team() {\n    return this.state.scores.shuffle().sort((a,b) => a.s-b.s)[0].t;\n  }\n\n  getTeam(client_id) {\n    for(let player of this.setupData.players)\n      if(player.id == client_id)\n        return player.team;\n  }\n\n\n\n  // PASSWORD\n  // format: /\\d{4}\\\n\n  setPassword(p) {\n    // validation: 4 digits\n    if(/\\d{4}/.test(p)) {\n      this._password = p;\n      return true;\n    }\n    return false;\n  }\n\n  clearPassword() { delete this._password }\n\n  testPassword(p) {\n    return this._password === p;\n  }\n\n  get locked() { return typeof this._password !== 'undefined' }\n\n\n  map() {\n    // normalization\n    // player -> { name, rank, team, ready, ship, slots [] }\n    const play_arr = Array.from(this.players).map(c => c.name).filter(str => str);\n    // spectator -> name\n    const spec_arr = Array.from(this.connected).map(c => c.id_).filter(str => str);\n\n    const type = REF.lobby.type.indexOf(this.type);\n\n    return {\n      type,\n      code: this.id,\n      password: this._password,\n      game_settings: {\n        map: null,\n        player_capacity: null,\n        mode: null,\n        stock: null\n      },\n      users: {\n        players: [\n          // {name, rank, team, ready, ship, slots []}\n        ],\n        spectators: spec_arr\n      }\n    };\n  }\n\n}\n\nclass GameTimer {\n  constructor(time = 0) {\n    this.duration = time;\n  }\n  start(block) {\n    this.startTime = Date.now();\n    this.timout_id = setTimeout(()=>{block()}, this.duration)\n  }\n  stop() {\n    clearTimeout(this.timout_id);\n  }\n  get timeElapsed() { return Date.now() - this.startTime }\n  get timeLeft() { return this.duration - this.timeElapsed }\n}\n\n// GAME PREF to be sent at start\nvar DeepSpaceGame = {};\n\nDeepSpaceGame.colors = [\n  '#FF4081', // 0 pink\n  '#FF5252', // 1 red\n  '#FFEA00', // 2 yellow\n  '#00E676', // 3 green\n  '#00B0FF', // 4 blue\n  '#BB33FF', // 5 purple AA00FF old\n  '#ECEFF1', // 6 white\n  '#90A4AE', // 7 light\n  '#37474F', // 8 dark\n  '#263238'  // 9 black\n];\n\nDeepSpaceGame.colorCombinations = new Map([\n  [1, [[0], [1], [2], [3], [4], [5]]],\n  [2, [\n    [1, 4], // red, blue\n    [1, 2], // red, yellow\n    [5, 2], // purple, yellow\n    [2, 4], // yellow, blue\n    [2, 0], // yellow, pink\n    [0, 4], // pink, blue\n    [4, 3]  // blue, green\n  ]],\n  [3,[\n    [1, 3, 4], // red, green, blue\n    [2, 3, 4], // yellow, green, blue\n    [0, 2, 4]  // pink, yellow, blue\n  ]],\n  [4,[\n    [1, 2, 3, 4], // red, yellow, green, blue\n    [0, 2, 3, 4] // pink, yellow, green, blue\n  ]]]\n);\n\nDeepSpaceGame.maps = [\n  {\n    name: \"The Event Horizon\",\n    spawn: [\n      [{x: 10, y: 10}, {x: 20, y: 20}],\n      [{x: 758, y: 1014}, {x: 748, y: 1004}]\n    ]\n  }\n];\n\nvar TINT = {\n  assortment: [\n    ['#0000ff', '#ff0000'],\n    ['#0000ff', '#aedc39'],\n    ['#0048ff', '#cc00ff']\n  ],\n\n  shuffle() {\n    let [c1, c2] = TINT.assortment.sample();\n    return [Math.randomIntMinMax(15, 75), c1, c2];\n  }\n\n};\n\nconst REF = {\n  lobby: {\n    type: ['public', 'private', 'practice'],\n    typeDesc: [\n      'This is a private lobby. Players present have complete control over game settings',\n      'This is a private lobby. Players present have complete control over game settings',\n    ]\n  },\n\n  ship: {\n    type: ['standard', 'rate', 'speed', 'defense', 'damage'],\n    typeDesc: [\n      'a tune with the world and itself, this is the balanced ship',\n      'this ship produces a stream of light bullets to trap and confuse',\n      'run your way out of any situation with the speed ship',\n      'take more than just a hit with the defense ship',\n      'this ship is feared across the reach of space, use it wisely'\n    ],\n    sub: ['attractor', 'heat seeker', 'repulsors', 'stealth', 'block bomb'],\n    stats: [\n      ['HEALTH', '0.6', '0.6', '0.2', '1.0', '0.7'],\n      ['SPEED', '0.6', '0.6', '0.9', '0.4', '0.4'],\n      ['ATTACK', '0.5', '0.4', '0.3', '0.5', '1.0'],\n      ['RANGE', '0.5', '0.5', '0.3', '0.7', '0.4'],\n    ]\n\n  }\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodule.exports = Lobby;\n"]}