{"version":3,"sources":["../js/network2.js"],"names":["GameNetworkAdapter","game","socket","activated","sendSenderID","incomingMessages","listenersMap","Map","activate","addListenerList","list","msg","addListener","listener","a","exec","set","on","removeListenerList","removeListener","get","data","sendSender","senderID","ENV","user","id","emit","shipData","players","ship","apply","override","adjustShipHP","createBullet","destroyBullet","createBlock","adjustBlockHP","setBlockTeam","destroyBlock","createSub","destroySub","disconnectPlayer","deathOccurrence","captureFlag","dropFlag","flagProgress","winningTeam","score","LOBBY","disableGame","setTimeout","showResults","send_local_progress","spectate","team_number","player","team","number","team_score","scores","flag","holderID","lobby","takeOvertime","DeepSpaceGame","runningInstance","in_game_over_ready","TIME","sec","userid","g","NetworkHelper","arr","stack","p","input","shipModel","export","update","Math","uuid","creator","owner","position","shoot_position","angle","shoot_angle","ATTACK_SPREAD","random","radius","ATTACK_RADIUS","hp","ATTACK_HP","lifespan","ATTACK_LIFESPAN","velocity","speed","ATTACK_SPEED","bulletData","startBullet","bulletID","removeBullet","playerID","localIDMatches","damage","out_msg_ship_kill","takerID","giverID","msgShipKill","send_data","blockData","front_weapon_position","BLOCK_SPREAD","BLOCK_HP_CAPACITY","Block","stats","MAX_RADIUS","randomIntMinMax","MIN_SPEED","MAX_SPEED","in_block_create","startBlock","blockID","in_block_destroy","endBlock","in_block_damage","block","model","blocks","in_block_change","sender","changeBlock","subData","type","SUB_TYPE","in_sub_create","startSub","subID","in_sub_destroy","endSub","pickupFlag","console","warn","overtime","out_game_over","disabled"],"mappings":"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","file":"network2.js","sourcesContent":["\n/* New */\n\n\nclass GameNetworkAdapter {\n\n\n  constructor(game, socket) {\n\n    // Adapter works off own socket\n    this.game = game;\n    this.socket = socket;\n    this.activated = false;\n    this.sendSenderID = false;\n\n    this.incomingMessages = [\n      'shipUpdated', 'shipOverridden', 'shipHPAdjusted',\n      'bulletCreated', 'bulletDestroyed',\n      'blockCreated', 'blockHPAdjusted', 'blockTeamSet', 'blockDestroyed',\n      'subCreated', 'subDestroyed',\n      'deathOccurrence',\n      'flagCaptured', 'flagDropped', 'flagProgress',\n      'playerDisconnected'\n    ];\n    this.listenersMap = new Map();\n\n    this.activate();\n    // this.listen();\n  }\n\n  activate() { this.activated = true }\n  deactivate() { this.activated = false }\n\n  listen() {\n    this.addListenerList(this.incomingMessages);\n  }\n\n  addListenerList(list) {\n    for(let msg of list) this.addListener(msg);\n  }\n\n  addListener(msg) {\n    const listener = (a) => this.activated ? this.exec(msg, a) : 0;\n\n    this.listenersMap.set(msg, listener);\n    this.socket.on(msg, listener);\n  }\n\n  exec(msg, a) {\n    this[msg](a)\n  }\n\n  stopListening() {\n    this.removeListenerList(this.incomingMessages);\n  }\n\n  removeListenerList(list) {\n    for(let msg of list) this.removeListener(msg);\n  }\n\n  removeListener(msg) {\n    const listener = this.listenersMap.get(msg);\n    if(listener) this.socket.removeListener(msg, listener);\n  }\n\n  emit(msg, data, sendSender = this.sendSenderID) {\n    if(sendSender) data.senderID = ENV.user.id;\n    this.socket.emit(msg, data)\n    // this.socket.emit(msg, [data, ENV.user.id])\n  }\n\n  // game functions\n  // ships\n  sendShipUpdate(data) {\n    this.emit('shipUpdated', { shipData: data }, true);\n  }\n\n  shipUpdated(data) {\n    this.game.players.get(data.senderID).ship.apply(data.shipData);\n  }\n\n  sendShipOverride(data) {\n    this.emit('shipOverridden', { shipData: data }, true);\n  }\n\n  shipOverridden(data) {\n    this.game.players.get(data.senderID).ship.override(data.shipData);\n  }\n\n  sendAdjustShipHP(data) {\n    this.emit('shipHPAdjusted', data);\n  }\n\n  shipHPAdjusted(data) {\n    this.game.adjustShipHP(data)\n  }\n\n  // bullets\n  sendCreateBullet(data) {\n    this.emit('bulletCreated', data);\n  }\n\n  bulletCreated(data) {\n    this.game.createBullet(data);\n  }\n\n  sendDestroyBullet(id) {\n    this.emit('bulletDestroyed', id);\n  }\n\n  bulletDestroyed(id) {\n    this.game.destroyBullet(id);\n  }\n\n  // blocks\n  sendCreateBlock(data) {\n    this.emit('blockCreated', data);\n  }\n\n  blockCreated(data) {\n    this.game.createBlock(data);\n  }\n\n  sendAdjustBlockHP(data) {\n    this.emit('blockHPAdjusted', data);\n  }\n\n  blockHPAdjusted(data) {\n    this.game.adjustBlockHP(data);\n  }\n\n  sendSetBlockTeam(data) {\n    this.emit('blockTeamSet', data);\n  }\n\n  blockTeamSet(data) {\n    this.game.setBlockTeam(data);\n  }\n\n  sendDestroyBlock(id) {\n    this.emit('blockDestroyed', id)\n  }\n\n  blockDestroyed(id) {\n    this.game.destroyBlock(id);\n  }\n\n  // subs\n  sendCreateSub(data) {\n    this.emit('subCreated', data)\n  }\n\n  subCreated(data) {\n    this.game.createSub(data);\n  }\n\n  sendDestroySub(id) {\n    this.emit('subDestroyed', id)\n  }\n\n  subDestroyed(data) {\n    this.game.destroySub(data);\n  }\n\n  playerDisconnected(id) {\n    this.game.disconnectPlayer(id)\n  }\n\n  // announcements\n  // TODO rethink stats update\n  sendDeathOccurrence(data) {\n    this.emit('deathOccurrence', data)\n  }\n\n  deathOccurrence(data) {\n    this.game.deathOccurrence(data);\n  }\n\n\n\n  // mode (ctf)\n\n  sendCaptureFlag(id) {\n    this.emit('flagCaptured', id)\n  }\n\n  flagCaptured(id) {\n    this.game.captureFlag(id)\n  }\n\n  sendDropFlag() {\n    this.emit('flagDropped')\n  }\n\n  flagDropped() {\n    this.game.dropFlag()\n  }\n\n  sendFlagProgress(data) {\n    this.emit('flagProgress', data)\n  }\n\n  flagProgress(data) {\n    this.game.flagProgress(data)\n  }\n\n\n\n\n\n\n  // WorkInProgress\n\n  end_with_winner(data) {\n    let {winningTeam, score} = data;\n    LOBBY.disableGame();\n    setTimeout(() => LOBBY.showResults(), 3000);\n  }\n\n  end_game() {\n    LOBBY.disableGame();\n    setTimeout(() => LOBBY.showResults(), 3000);\n  }\n\n  request_local_progress() {\n    this.send_local_progress();\n  }\n\n  send_local_progress() {\n    if(!ENV.spectate) {\n      let game = ENV.game, team_number = game.player.team.number, team_score = game.game.scores[team_number];\n      if(ENV.game.game.flag.holderID == ENV[\"id\"]) ENV.lobby.socket.emit('flag progress', { senderID: ENV[\"id\"], team: team_number, score: team_score });\n    }\n  }\n\n  go_overtime() {\n    ENV.game.takeOvertime();\n  }\n\n\n  progress(team, score) { ENV.lobby.socket.emit('flag progress', { senderID: ENV[\"id\"], team: team, score: score }) }\n\n  out_game_over(winningTeam) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.lobby.socket.emit('game over', { senderID: ENV[\"id\"], winningTeam: winningTeam });\n  }\n  in_game_over(data) { if(!DeepSpaceGame.runningInstance) return;\n    LOBBY.disableGame();\n    setTimeout(this.in_game_over_ready, 3000);\n  }\n  in_game_over_ready() { if(!DeepSpaceGame.runningInstance) return;\n    LOBBY.showResults();\n  }\n\n  in_game_overtime() { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.takeOvertime();\n    setTimeout(LOBBY.disableGame, TIME.sec(30));\n  }\n\n  // disconnect players\n  in_disconnect_player(userid) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.disconnectPlayer(userid);\n  }\n\n}\n\n\n/* OLD */\n\n\nvar g;\nclass NetworkHelper {\n\n  static out_input_stack(arr) {\n    socket.emit('input stack', { senderID: ENV.id, stack: arr });\n  }\n\n  static in_input_stack(data) {\n    let p = ENV.game.players.get(data.senderID);\n    if(p) p.input = data.stack;\n  }\n\n  static out_ship_update(data) { if(!DeepSpaceGame.runningInstance) return;\n    socket.emit('ship update', { senderID: ENV[\"id\"], shipData: data });\n  }\n  static in_ship_update(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.players.get(data.senderID).ship.apply(data.shipData);\n  }\n  static out_ship_override(data) { if(!DeepSpaceGame.runningInstance) return;\n    socket.emit('ship override', { senderID: ENV[\"id\"], shipData: data });\n  }\n  static in_ship_override(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.players.get(data.senderID).ship.override(data.shipData);\n  }\n  static sendShip(shipModel) { if(!DeepSpaceGame.runningInstance) return;\n    // if(Math.flipCoin(0.8)) return;\n    socket.emit('ship update', { senderID: ENV[\"id\"], shipData: shipModel.export() });\n  }\n  static setShip(data) { if(!DeepSpaceGame.runningInstance) return;\n    var shipModel = data.shipData;\n    ENV.game.players.get(data.senderID).ship.update(shipModel);\n  }\n\n  static bullet_create(ship) { if(!DeepSpaceGame.runningInstance) return;\n    // let angle = options.shoot_simple ? ship.angle : ship.shoot_angle,\n    //     shoot_position = options.shoot_simple ? ship.front_weapon_position : ship.shoot_position;\n    let id = Math.uuid(),\n      data = {\n        id: id,\n        creator: ship.owner.id,\n        team: ship.owner.team.number,\n        position: ship.shoot_position,\n        angle: ship.shoot_angle + (ship.ATTACK_SPREAD / 2) * ((Math.random()*2) - 1),\n        radius: ship.ATTACK_RADIUS,\n        hp: ship.ATTACK_HP,\n        lifespan: ship.ATTACK_LIFESPAN,\n        velocity: ship.velocity,\n        speed: ship.ATTACK_SPEED\n      };\n    socket.emit('bullet create', { senderID: ENV[\"id\"], bulletData: data});\n    ENV.game.startBullet(data);\n    return id;\n  }\n  // static out_bullet_create(ship) { if(!DeepSpaceGame.runningInstance) return;\n  //   var id = Math.uuid();\n  //   socket.emit('bullet create', { senderID: ENV[\"id\"], bulletData: {\n  //     id: id,\n  //     team: ship.owner.team.number,\n  //     position: ship.front_weapon_position,\n  //     angle: ship.angle + (ship.ATTACK_SPREAD / 2) * ((Math.random()*2) - 1),\n  //     hp: ship.ATTACK,\n  //     lifespan: ship.ATTACK_LIFESPAN\n  //   }});\n  //   return id;\n  // }\n  static in_bullet_create(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.startBullet(data.bulletData);\n  }\n  static bullet_destroy(bulletID) { if(!DeepSpaceGame.runningInstance) return;\n    socket.emit('bullet destroy', { senderID: ENV[\"id\"], bulletID: bulletID });\n    ENV.game.removeBullet(bulletID);\n  }\n  // static out_bullet_destroy(bulletID) { if(!DeepSpaceGame.runningInstance) return;\n  //   socket.emit('bullet destroy', { senderID: ENV[\"id\"], bulletID: bulletID });\n  // }\n  static in_bullet_destroy(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.removeBullet(data.bulletID);\n  }\n\n  // ask server(other players) first for effect\n  // TODO break up as: ask_to_damage, perform_damage. in/out as needed\n  static out_ship_damage(playerID, hp) { if(!DeepSpaceGame.runningInstance) return;\n    socket.emit('ship damage', { senderID: ENV[\"id\"], playerID: playerID, hp: hp});\n  }\n  static in_ship_damage(data) { if(!DeepSpaceGame.runningInstance) return;\n    if(localIDMatches(data.playerID)) {\n      var ship = ENV.game.players.get(data.playerID).ship;\n      if(ship.damage(data.hp)) NetworkHelper.out_msg_ship_kill(ship.owner.id, data.senderID);\n    }\n  }\n\n  static out_msg_ship_kill(takerID, giverID) { if(!DeepSpaceGame.runningInstance) return;\n    socket.emit('msg ship kill', { senderID: ENV[\"id\"], takerID: takerID, giverID: giverID});\n  }\n\n  static in_msg_ship_kill(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.msgShipKill(data.takerID, data.giverID);\n  }\n\n\n  static block_create(ship) { if(!DeepSpaceGame.runningInstance) return;\n    var id = Math.uuid();\n    var send_data = { senderID: ENV[\"id\"], blockData: {\n      id: id,\n      team: ship.owner.team.number,\n      position: ship.front_weapon_position,\n      angle: (ship.angle) + ((ship.BLOCK_SPREAD / 2) * ((Math.random()*2) - 1)),\n      hp: ship.BLOCK_HP_CAPACITY,\n      // radius: Math.randomIntMinMax(Block.stats.MIN_RADIUS, Block.stats.MAX_RADIUS)\n      radius: Block.stats.MAX_RADIUS,\n      speed: Math.randomIntMinMax(Block.stats.MIN_SPEED, Block.stats.MAX_SPEED)\n    }};\n    socket.emit('block create', send_data);\n    NetworkHelper.in_block_create(send_data);\n    return id;\n  }\n  static in_block_create(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.startBlock(data.blockData);\n  }\n  static block_destroy(blockID) { if(!DeepSpaceGame.runningInstance) return;\n    var send_data = { senderID: ENV[\"id\"], blockID: blockID };\n    socket.emit('block destroy', send_data);\n    NetworkHelper.in_block_destroy(send_data);\n  }\n  static in_block_destroy(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.endBlock(data.blockID);\n  }\n  static block_damage(blockID, hp) { if(!DeepSpaceGame.runningInstance) return;\n    var send_data = { senderID: ENV[\"id\"], blockID: blockID, hp: hp};\n    socket.emit('block damage', send_data);\n    NetworkHelper.in_block_damage(send_data);\n  }\n  static in_block_damage(data) { if(!DeepSpaceGame.runningInstance) return;\n    var block;\n    if(block = ENV.game.model.blocks.get(data.blockID)) block.damage(data.hp);\n  }\n  static block_change(blockID) { if(!DeepSpaceGame.runningInstance) return;\n    var send_data = { senderID: ENV[\"id\"], blockID: blockID};\n    socket.emit('block change', send_data);\n    NetworkHelper.in_block_change(send_data);\n\n    // var block, sender;\n    // if(block = ENV.game.model.blocks.get(blockID)) if(sender = ENV.game.players.get(ENV[\"id\"])) ENV.game.changeBlock(block.id, sender.team.number);\n  }\n  static in_block_change(data) { if(!DeepSpaceGame.runningInstance) return;\n    var block, sender;\n    if(block = ENV.game.model.blocks.get(data.blockID)) if(sender = ENV.game.players.get(data.senderID)) ENV.game.changeBlock(block.id, sender.team.number);\n  }\n\n  // static out_pulse_create(ship) { if(!DeepSpaceGame.runningInstance) return;\n  //   var id = Math.uuid();\n  //   socket.emit('pulse create', { senderID: ENV[\"id\"], pulseData: {\n  //     id: id,\n  //     team: ship.owner.team.number,\n  //     position: ship.front_weapon_position,\n  //     angle: ship.angle\n  //   }});\n  //   return id;\n  // }\n\n  static sub_create(ship) { if(!DeepSpaceGame.runningInstance) return;\n    var id = Math.uuid();\n    var send_data = { senderID: ENV[\"id\"], subData: {\n      id: id,\n      type: ship.SUB_TYPE,\n      team: ship.owner.team.number,\n      player: ENV[\"id\"],\n      position: ship.front_weapon_position,\n      angle: ship.angle\n    }};\n    socket.emit('sub create', send_data);\n    NetworkHelper.in_sub_create(send_data);\n    return id;\n  }\n  static in_sub_create(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.startSub(data.subData);\n  }\n  static sub_destroy(subID) { if(!DeepSpaceGame.runningInstance) return;\n    var send_data = { senderID: ENV[\"id\"], subID: subID };\n    socket.emit('sub destroy', send_data);\n    NetworkHelper.in_sub_destroy(send_data);\n  }\n  static out_only_sub_destroy(subID) { if(!DeepSpaceGame.runningInstance) return;\n    var send_data = { senderID: ENV[\"id\"], subID: subID };\n    socket.emit('sub destroy', send_data);\n  }\n  static in_sub_destroy(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.endSub(data.subID);\n  }\n\n  // ctf\n  static out_flag_pickup(playerID) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.lobby.socket.emit('flag pickup', { senderID: ENV[\"id\"], playerID: playerID });\n  }\n  static in_flag_pickup(data) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.pickupFlag(data.playerID);\n  }\n  static out_flag_drop() { if(!DeepSpaceGame.runningInstance) return;\n    if(ENV.spectate) { console.warn(`illegal spectator command`); return; }\n    ENV.lobby.socket.emit('flag drop', { senderID: ENV[\"id\"] });\n  }\n  static in_flag_drop(data) { if(!DeepSpaceGame.runningInstance) return;\n    if(!ENV.spectate) {\n      let game = ENV.game, team_number = game.player.team.number, team_score = game.game.scores[team_number];\n      if(ENV.game.game.flag.holderID == ENV[\"id\"]) {\n        if(false && ENV.game.game.overtime) { // always false\n          NetworkHelper.out_game_over(team_number);\n        } else {\n          ENV.lobby.socket.emit('flag progress confirm', { senderID: ENV[\"id\"], team: team_number, score: team_score });\n        }\n      }\n    }\n    if(!ENV.game.game.disabled) ENV.game.dropFlag();\n\n  }\n\n  /*\n   * --- Game Management ---\n   *\n   * end_with_winner (IN)\n   *   - ends the game with given winner and score\n   *\n   * progress\n   * :: request_local_progress (IN)\n   *   - server requests progress. (usually responded with NetworkHelper.send_local_progress)\n   * :: send_local_progress (OUT)\n   *   - sends local player's team's progress(team, score)\n   *\n   * go_overtime (IN)\n   *   - tells the game to switch into overtime\n   *\n   */\n\n  static end_with_winner(data) {\n    let {winningTeam, score} = data;\n    LOBBY.disableGame();\n    setTimeout(() => LOBBY.showResults(), 3000);\n  }\n\n  static end_game() {\n    LOBBY.disableGame();\n    setTimeout(() => LOBBY.showResults(), 3000);\n  }\n\n  static request_local_progress() {\n    NetworkHelper.send_local_progress();\n  }\n\n  static send_local_progress() {\n    if(!ENV.spectate) {\n      let game = ENV.game, team_number = game.player.team.number, team_score = game.game.scores[team_number];\n      if(ENV.game.game.flag.holderID == ENV[\"id\"]) ENV.lobby.socket.emit('flag progress', { senderID: ENV[\"id\"], team: team_number, score: team_score });\n    }\n  }\n\n  static go_overtime() {\n    ENV.game.takeOvertime();\n  }\n\n\n  static progress(team, score) { ENV.lobby.socket.emit('flag progress', { senderID: ENV[\"id\"], team: team, score: score }) }\n\n  static out_game_over(winningTeam) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.lobby.socket.emit('game over', { senderID: ENV[\"id\"], winningTeam: winningTeam });\n  }\n  static in_game_over(data) { if(!DeepSpaceGame.runningInstance) return;\n    LOBBY.disableGame();\n    setTimeout(NetworkHelper.in_game_over_ready, 3000);\n  }\n  static in_game_over_ready() { if(!DeepSpaceGame.runningInstance) return;\n    LOBBY.showResults();\n  }\n\n  static in_game_overtime() { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.takeOvertime();\n    setTimeout(LOBBY.disableGame, TIME.sec(30));\n  }\n\n  // disconnect players\n  static in_disconnect_player(userid) { if(!DeepSpaceGame.runningInstance) return;\n    ENV.game.disconnectPlayer(userid);\n  }\n\n\n  /*static add() { // static no longer works as network helper now holds state\n   NetworkHelper.messages.push(new Array(...arguments));\n   }\n\n   static release() { // static no longer works as network helper now holds state\n   socket.emit('combined', NetworkHelper.messages); NetworkHelper.messages = [];\n   }*/\n\n}\n// NetworkHelper.messages = [];"]}