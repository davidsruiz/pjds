{"version":3,"sources":["../js/deepspace.js"],"names":["DeepSpaceGame","data","network","interpret","setup","loop","timer","start","timerExpire","spectate","ENV","isHost","host","mapInfo","maps","options","map","gameMode","mode","game","language","Timer","duration","TIME","sec","TINT","tint","load","colors","e","log","setupData","setupPhysics","setupModel","setupView","setupListeners","setupLoop","setupReferences","setupTeams","setupPlayers","setupShips","setupObjectPools","setupGame","setupMap","teams","teamCount","length","times","i","push","Team","setupSpawnCamps","forEach","team","spawn_camp","position","V2D","new","spawn","number","radius","players","Map","playerIndex","id","name","type","createPlayer","ships","player","ship","localIDMatches","Ship","isMain","main","BasicShip","model","bullets","blocks","subs","disabled","ended","overtime","scores","Array","centerX","width","centerY","height","flag","Flag","collision_groups","physics","FLAG","setCollisionDivisions","fill","max","Physics","distance","x","y","lead","undefined","info","cX","cY","initial_impermeables","radii","Set","impermeables","bodies","radius_size_group","list","slice","shift","add","copies","obj","imp","IMPERMEABLES","setupPalette","configureCreateJS","setupCamera","setupCanvas","createViews","canvas","$","document","body","clientWidth","clientHeight","scale","Math","sqrt","stage","createjs","Stage","snapToPixel","HDPSupport","HDPScale","window","devicePixelRatio","getAttribute","setAttribute","round","style","scaleX","scaleY","view","grid","createLayers","createBackgroundViews","createGameModeSpecificViewsAction","createSpawnCampViews","createShipViews","createPoolViews","createOverlayViews","layer","background","Container","action","overlay","back","front","addChild","canvasBackground","Shape","mapBackground","graphics","beginFill","drawRect","cache","background_width","background_height","hypotenuse","sqr","regX","regY","map_background","caches","block_fill","r","s","set","cacheCanvas","Bitmap","get","block","pos","group","camp","color","spawn_camp_fill","alpha","our_ship","our_team","owner","container","hollow","filled","text","Text","textAlign","innerRadius","outerRadius","meter","energyMeter","shadow","energyMeterShadow","offset","meter_shadow","score","imagined_width","toString","Shadow","createOverlayMinimapViews","message","kill_message","modes","flag_radius","flag_shadow","overlay_model","overlay_view","mini","minimap","rotation","degrees","spawnRotation","padd","circle_fill","flag_view","this_player","this_team","graphicsCaches","blv","setChildIndex","v","delete","removeChild","camera","Camera","activePlayerIndex","activePlayers","p","updateCameraFocus","focus","inputHandlers","receiver","keyHandler","keyCode","addEventListener","inputStack","input","changed","keymap","eventCode","row","code","is","has","gamepad","updateGamepadInput","navigator","getGamepads","deadZone","buttonMap","axes","buttons","pressed","bindings","activation","_","contains","raw_acc_data","applied_acc_data","threshold","bias","storage","calibration","split","Number","mobile","DeviceMotionEvent","ondevicemotion","accelerationIncludingGravity","updateMotion","orientation","raw_x","raw_y","invertControls","left","querySelector","joystick","joystick_deadzone_radius","right","right_hammer","Hammer","on","deltaX","deltaY","a","angle","hammertime","taps","direction","DIRECTION_LEFT","ev","wait","setupCollisionSystem","assignCollisionPatterns","setupReferenceGroups","block_size","world_size","rows","ceil","cols","divisions","division_index","division_coordinates","floor","collision_checks","SHIPS","Symbol","OUR_SHIP","OUR_SHIPS","ENEMY_SHIPS","BULLETS","MY_BULLETS","OUR_BULLETS","ENEMY_BULLETS","BLOCKS","OUR_BLOCKS","ENEMY_BLOCKS","OUR_PROJ_SUBS","SPAWN_CAMPS","OUR_SPAWN_CAMP","ENEMY_SPAWN_CAMPS","REFUGE","OUR_REFUGE","Object","keys","physics_body","clearCollisionDivisions","check_x","unit_offset_array","check_y","division_x","division_y","d","checks","groups","bullet","damageShip","hp","creator","removeBullet","damageBlock","idle","canPickupFlag","assumeFlag","sub","explode","removeSub","block_a","block_b","overlap","removeBlock","refuge","bounce","charging","refGroups","enemyBlocks","enemySubs","animate","FPS","n","getAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","setupDT","last_time","Date","getTime","dt","now","setupShortcutsToCommonCalls","setupFinishCollisionAssignment","setupGraphicsCaches","enemyTeams","filter","enemyPlayers","reduce","concat","spawn_c","setupCommonGraphicsCachePool","gc","Bullet","stats","MAX_RADIUS","particle","unlocked","locked","enemy","Block","border","block_border","c","COLOR","mix","updateDT","update","over","updateInput","updateModel","checkForCollisions","updateGame","updateView","updateShips","broadcastShip","updateBullets","updateBlocks","updateSubs","x2","y2","prop","releaseFlag","canSub","addSub","canBlock","reachedBlockLimit","oldestBlockID","addBlock","direction_v","relative_shoot_angle","PI","acceleration","LINEAR_ACCELERATION_LIMIT","angular_acceleration","ANGULAR_ACCELERATION_LIMIT","canShoot","addBullet","velocity","sendShipUpdate","export_update","sendShipOverride","export_override","b","qualified","snapToGrid","createOverlayMinimapBlockViewFor","RANGE","force","copy","INTENSITY_FUNCTION","exploding","EXPLOSION_RANGE","EXPLOSION_DAMAGE_FUNCTION","destroySub","target","VISION_RANGE","stealth","changeBlock","div","a_type","b_type","check","body_a","body_b","doTouch","holderID","last_known_position","percent","low_score","current_score","sendFlagProgress","alert","localizationStrings","alerts","updateShipViews","updateBulletViews","updateBlockViews","updateSubViews","updateCamera","updateBackground","updateMap","updateGameViews","updateMinimapView","isVisible","visible","showing","shipIsVisible","visibility","flipCoin","ship_view","health","image","updateEnergyMeterView","updateNameViews","meterView","shadowView","energy","textView","views","createBulletView","destroyBulletView","createBlockView","isForeign","destroyBlockView","map_width","map_height","half_window_width","half_window_height","half_background_width","half_background_height","backgroundPositionVector","centerOffset","radians","setAngleOffset","GRID","calculateTeamScoreAppearance","updateFlagView","indexOf","bestScore","each","not_visible","newPosition","plane","mul","padding","resetInput","deinitListeners","cancel","LOBBY","disconnect","results","disableInteraction","toID","fromID","adjustShipHP","sendAdjustShipHP","damage","processDeath","deathOccurrence","sendDeathOccurrence","t","g","deaths","kills","alert_kill","animateFocus","generateBulletData","createBullet","sendCreateBullet","didShoot","uuid","shoot_position","shoot_angle","shot_RNG","ATTACK_RADIUS","ATTACK_HP","lifespan","ATTACK_LIFESPAN","speed","ATTACK_SPEED","destroyBullet","sendDestroyBullet","generateBlockData","createBlock","sendCreateBlock","didBlock","front_weapon_position","BLOCK_SPREAD","random","BLOCK_HP_CAPACITY","randomIntMinMax","MIN_SPEED","MAX_SPEED","bl","adjustBlockHP","sendAdjustBlockHP","setBlockTeam","sendSetBlockTeam","oldTeam","destroyBlock","sendDestroyBlock","destroyOverlayMinimapBlockViewFor","generateSubData","createSub","sendCreateSub","didSub","SUB_TYPE","Attractor","Repulsor","BlockBomb","StealthCloak","Missile","pv","sendDestroySub","captureFlag","sendCaptureFlag","didPickupFlag","setFlag","us","dropFlag","sendDropFlag","clearFlag","reset","msg","clearTimeout","alertTimeout","trim","alertKillTimeout","takerID","giverID","bv","deinitCaches","deinitPhysics","deinitInput","deinitCamera","deinitView","deinitGame","deinitModel","runningInstance","handler","removeEventListener","removeAllChildren","clear","disconnected","deinit","size","Graphics","drawCircle","beginStroke","setStrokeStyle","moveTo","lineTo","block_center","attractor","repulsor","block_bomb","arcTo","missile","ring","arc","renderingParameters","enemyTakesFlag","en","teamTakesFlag","enemyDropsFlag","teamDropsFlag","yourKill","yourDeath","teamTakesLead","teamLosesLead","teamMemberDisconnects","spawn_structure","ctf","ring_radius","time_limit","FRAMES","mins"],"mappings":"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","file":"deepspace.js","sourcesContent":["// deep space js by david ruiz.\n\n\nclass DeepSpaceGame {\n\n  // at initialization we can assume the environment\n  // knows certain game parameters:\n  // - map\n  // - game mode\n  // - players: amount, names, ship types, indexes,\n  constructor(data, network) {\n    this.interpret(data, network);\n    this.setup();\n    // this.loop();\n  }\n\n  static create(data, network) {\n    if (DeepSpaceGame.runningInstance) DeepSpaceGame.runningInstance.deinit();\n    return DeepSpaceGame.runningInstance = new DeepSpaceGame(data, network);\n  }\n\n  start() {\n    this.loop();\n    this.timer.start(() => {\n      this.timerExpire()\n    });\n  }\n\n  interpret(data, network) {\n    // anything pertaining to game\n    // object itself gets set\n    this.spectate = ENV.spectate;\n    this.isHost = data.host;\n    this.mapInfo = DeepSpaceGame.maps[data.options.map];\n    this.gameMode = data.options.mode;\n    this.game = {}\n    this.language = 'en';\n    this.timer = new Timer(data.duration - TIME.sec(1.5));\n\n    this.network = network;\n    this.network.game = this;\n\n\n    // SoundHelper.start(); // new\n    // this.soundHelper = SoundHelper.start(); // olc\n\n    try {\n      // if (TINT) TINT.load(...data.colors[1])\n      if (TINT) {\n        if(this.mapInfo.tint) { TINT.load(...this.mapInfo.tint) }\n        else { TINT.load(...data.colors[1]) }\n      }\n    } catch (e) {\n      log('tint load failed')\n    }\n\n    // everything else:\n    this.setupData = data;\n  }\n\n  setup() {\n    this.setupPhysics();\n    this.setupModel();\n    this.setupView();\n    this.setupListeners();\n    this.setupLoop();\n    this.setupReferences();\n\n    // if (this.spectate) this.actualize();\n  }\n\n  setupModel() {\n    this.setupTeams();\n    this.setupPlayers();\n    this.setupShips();\n    this.setupObjectPools();\n\n    this.setupGame();\n    this.setupMap();\n  }\n\n  setupTeams() {\n    this.teams = [];\n    let teamCount = this.setupData.teams.length;\n    teamCount.times((i) => {\n      this.teams.push(new Team(this, i))\n    });\n\n    this.setupSpawnCamps();\n  }\n\n  setupSpawnCamps() {\n    this.teams.forEach(team => {\n      team.spawn_camp = {\n        position: V2D.new(this.mapInfo.spawn[team.game.teams.length - 1][team.number]),\n        radius: 64,\n        team: team.number\n      }\n    });\n  }\n\n  setupPlayers() {\n    this.players = new Map();\n    this.teams.forEach((team, i) => {\n      this.setupData.teams[i].forEach((playerIndex)=>{\n        var [id, name, , , , type] = this.setupData.players[playerIndex];\n        team.createPlayer(id, name, type);\n      });\n    });\n  }\n\n  setupShips() {\n    this.ships = [];\n    this.players.forEach((player) => {\n      var ship;\n      if (localIDMatches(player.id) && !this.spectate) {\n        ship = new Ship(player);\n        ship.isMain = true;\n        this.ships.main = ship;\n      } else {\n        ship = new BasicShip(player);\n      }\n      this.ships.push(ship);\n      player.ship = ship;\n    });\n  }\n\n  setupObjectPools() {\n    var model = {};\n    model.bullets = new Map();\n    model.blocks = new Map();\n    model.subs = new Map();\n\n    this.model = model;\n  }\n\n  setupGame() {\n    this.game = {};\n    this.game.disabled = false; // interaction disabled\n    this.game.ended = false; // game over happened\n    this.game.overtime = false; // game overtime happened\n\n    this.game.scores = new Array(this.teams.length);\n\n    // this.timer = DeepSpaceGame.modes[this.gameMode];\n    switch (this.gameMode) {\n      case 0: // ctf\n\n        // flag whatevers\n        var centerX = this.mapInfo.width / 2;\n        var centerY = this.mapInfo.height / 2;\n        let flag = new Flag(new V2D(centerX, centerY));\n        flag.collision_groups = [this.physics.collision_groups.FLAG];\n        this.setCollisionDivisions(flag);\n        this.game.flag = flag;\n\n        // actual game stats\n        this.game.scores.fill(100);\n        this.game.max = Physics.distance(this.teams[0].spawn_camp.position, {x: centerX, y: centerY});\n        this.game.lead = undefined; // team in the lead\n\n        break;\n\n      case 1:\n\n        this.game.scores.fill(0);\n\n        break;\n    }\n  }\n\n  setupMap() {\n    let map = this.model.map = {},\n      info = this.mapInfo;\n\n    let cX = info.width / 2,\n      cY = info.height / 2;\n\n\n    // IMPERMEABLES\n    let initial_impermeables = [], radii = new Set();\n    for (let radius_size_group of info.impermeables.bodies) {\n      let list = radius_size_group.slice(),\n        radius = list.shift();\n      for (let [x, y] of list) {\n        initial_impermeables.push({\n          radius: radius,\n          position: {x, y}\n        })\n      }\n      radii.add(radius);\n    }\n\n    map.impermeables = [];\n    map.impermeables.radii = radii;\n    // in the future use the 'copies' variable on impermeables\n    // and make it odd symmetry\n    map.impermeables.push(...initial_impermeables)\n    if (info.impermeables.copies >= 2) {\n\n      map.impermeables.push(...(initial_impermeables.map(obj => {\n        return {\n          radius: obj.radius,\n          position: {x: info.width - obj.position.x, y: info.width - obj.position.y}\n        }\n      })));\n\n      if (info.impermeables.copies == 4) {\n\n        map.impermeables.push(...(initial_impermeables.map(obj => {\n          return {\n            radius: obj.radius,\n            position: {x: info.width - obj.position.y, y: obj.position.x}\n          }\n        })));\n\n        map.impermeables.push(...(initial_impermeables.map(obj => {\n          return {\n            radius: obj.radius,\n            position: {x: obj.position.y, y: info.width - obj.position.x}\n          }\n        })));\n\n      }\n\n    }\n\n    for (let imp of map.impermeables) {\n      imp.collision_groups = [this.physics.collision_groups.IMPERMEABLES]\n      this.setCollisionDivisions(imp);\n    }\n\n  }\n\n  setupView() {\n    this.setupPalette();\n    this.configureCreateJS();\n    this.setupCamera();\n  }\n\n  setupPalette() {\n    this.colors = this.setupData.colors;\n  }\n\n  configureCreateJS() {\n    this.setupCanvas();\n    // populate stage\n    this.createViews();\n  }\n\n  setupCanvas() { // TODO: (revise)\n    var canvas = $('#canvas')[0];\n    canvas.width = document.body.clientWidth;\n    canvas.height = document.body.clientHeight;\n    // if (canvas.width > 1024) canvas.width = 1024;\n    // if (canvas.height > 768) canvas.height = 768;\n    \n    this.scale = Math.sqrt(canvas.width * canvas.height) / Math.sqrt(1024 * 768);\n    // this.scale ;\n\n    var stage = new createjs.Stage();\n    stage.canvas = canvas;\n    stage.snapToPixel = true;\n    // gui.add(stage, 'snapToPixel');\n\n    this.stage = stage;\n\n    this.HDPSupport();\n  }\n\n  HDPSupport() {\n    this.HDPScale = 1;\n    if (window.devicePixelRatio) {\n      const stage = this.stage;\n      const canvas = stage.canvas;\n\n      // grab the width and height from canvas\n      var height = canvas.getAttribute('height');\n      var width = canvas.getAttribute('width');\n      // reset the canvas width and height with window.devicePixelRatio applied\n      canvas.setAttribute('width', Math.round(width * window.devicePixelRatio));\n      canvas.setAttribute('height', Math.round( height * window.devicePixelRatio));\n      // force the canvas back to the original size using css\n      canvas.style.width = width+\"px\";\n      canvas.style.height = height+\"px\";\n      // set CreateJS to render scaled\n      stage.scaleX = stage.scaleY = window.devicePixelRatio;\n      this.HDPScale = 1/window.devicePixelRatio\n    }\n  }\n\n  createViews() {\n    this.view = {\n      grid: {width: 48, height: 48},\n    };\n    this.window = {\n      width: this.stage.canvas.width * this.HDPScale,\n      height: this.stage.canvas.height * this.HDPScale,\n    };\n\n    this.createLayers();\n    this.createBackgroundViews();\n    this.createGameModeSpecificViewsAction();\n    this.createSpawnCampViews()\n    this.createShipViews();\n    this.createPoolViews();\n    this.createOverlayViews();\n  }\n\n  snapToGrid(position) {\n    position.x = Math.round(position.x / this.view.grid.width) * this.view.grid.width\n    position.y = Math.round(position.y / this.view.grid.height) * this.view.grid.height\n  }\n\n  createLayers() {\n    var layer = {}\n\n    layer.background = new createjs.Container();\n    layer.action = new createjs.Container();\n    layer.overlay = new createjs.Container();\n\n    layer.action.back = new createjs.Container();\n    layer.action.front = new createjs.Container();\n    layer.action.addChild(layer.action.back);\n    layer.action.addChild(layer.action.front);\n\n    layer.action.scaleX = layer.action.scaleY = this.scale;\n\n    this.stage.addChild(layer.background);\n    this.stage.addChild(layer.action);\n    this.stage.addChild(layer.overlay);\n\n    this.view.layer = layer;\n  }\n\n  createBackgroundViews() {\n    // var canvas = this.stage.canvas, background = new createjs.Shape();\n    // // background.graphics.beginFill('#37474F').drawRect(0, 0, canvas.width, canvas.height);\n    // // background.cache(0, 0, canvas.width, canvas.height);\n    // // this.view.layer.background.addChild(background);\n    // //\n    // // background = new createjs.Shape();\n    // background.graphics.beginFill('#455A64').drawRect(0, 0, canvas.width, canvas.height);\n    // background.cache(0, 0, canvas.width, canvas.height);\n    // this.view.layer.background.map_background = background;\n    // this.view.layer.background.addChild(background);\n\n\n    var canvas = this.stage.canvas, canvasBackground = new createjs.Shape(), mapBackground = new createjs.Shape();\n    canvasBackground.graphics.beginFill('#37474F').drawRect(0, 0, this.window.width, this.window.height);\n    canvasBackground.cache(0, 0, canvas.width, canvas.height);\n    this.view.layer.background.addChild(canvasBackground);\n\n    const background_width = this.window.width * 2\n    const background_height = this.window.width * 2\n    const hypotenuse = Math.sqrt(Math.sqr(this.window.width) + Math.sqr(this.window.height)) / this.scale;\n    mapBackground.graphics.beginFill('#455A64').drawRect(0, 0, hypotenuse, hypotenuse);\n    mapBackground.cache(0, 0, hypotenuse, hypotenuse);\n    mapBackground.regX = hypotenuse/2;\n    mapBackground.regY = hypotenuse/2;\n    this.view.layer.background.map_background = mapBackground;\n    this.view.layer.action.back.addChild(mapBackground);\n\n  }\n\n  createGameModeSpecificViewsAction() {\n    /*switch(this.gameMode) {\n     case \"ctf\":\n     // ring and flag\n\n     var centerX = this.mapInfo.width / 2;\n     var centerY = this.mapInfo.height / 2;\n\n     var r = DeepSpaceGame.modes[\"ctf\"].ring_radius, s = r * 1.2;\n     var ring = new createjs.Shape(\n     DeepSpaceGame.graphics.ring(r)\n     );\n     ring.cache(-s, -s, s*2, s*2);\n\n     // var r = DeepSpaceGame.modes[\"ctf\"].flag_radius, s = r * 1.2;\n     // var flag = new createjs.Shape(\n     //   DeepSpaceGame.graphics.flag(DeepSpaceGame.modes[\"ctf\"].flag_radius)\n     // );\n     // flag.shadow = DeepSpaceGame.graphics.flag_shadow();\n     // flag.cache(-s, -s, s*2, s*2);\n     //\n     ring.x = centerX; ring.y = centerY;\n     // flag.x = centerX; flag.y = centerY;\n\n\n     this.view.layer.action.back.addChild(ring);\n     // this.view.layer.action.back.addChild(flag);\n\n     // this.view.flag = flag;\n\n     // actual game things\n\n\n     break;\n     }*/\n\n    // create caches\n    var caches = new Map();\n    this.model.map.impermeables.radii.forEach(r => {\n      var view = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r));\n      var s = r * 1.2;\n      view.cache(-s, -s, s * 2, s * 2);\n\n      caches.set(r, view.cacheCanvas);\n    })\n\n    // create views\n    this.view.map = {impermeables: []}\n    this.model.map.impermeables.forEach(block => {\n      var view = new createjs.Bitmap(caches.get(block.radius)),\n        pos = block.position;\n      view.x = pos.x - block.radius * 1.2;\n      view.y = pos.y - block.radius * 1.2;\n      this.view.map.impermeables.push(view)\n      this.view.layer.action.front.addChild(view);\n    });\n\n  }\n\n  createSpawnCampViews() {\n\n    // this.view.teams = { spawn_camp: []}\n\n    // DeepSpaceGame.maps[0].spawn[this.owner.team.game.teams.length][this.owner.team.number]\n    var s = 64 + 3; // radius + border-half\n    this.teams.forEach((team, i) => {\n      var group = new createjs.Container(),\n        camp = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp(team.color)),\n        fill = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp_fill(team.color)),\n        pos = team.spawn_camp.position;\n      fill.alpha = 0.08;\n      group.x = pos.x;\n      group.y = pos.y;\n      group.addChild(fill);\n      group.addChild(camp);\n      group.cache(-s, -s, s * 2, s * 2);\n      team.spawn_camp.view = group;\n      this.view.layer.action.back.addChild(group);\n    });\n  }\n\n  createShipViews() {\n    let our_ship = this.ships.main, our_team;\n    if (our_ship) our_team = our_ship.owner.team;\n    this.ships.forEach((ship) => {\n      let container = new createjs.Container();\n      var hollow = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][0](ship.owner.team.color, ship.isMain ? 4 : 2)),\n        filled = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][1](ship.owner.team.color, ship.isMain ? 4 : 2)),\n        s = ship.radius * 1.2;\n      hollow.cache(-s, -s, s * 2, s * 2);\n      filled.cache(-s, -s, s * 2, s * 2);\n      var view = new createjs.Bitmap(hollow.cacheCanvas);\n      view.regX = view.regY = s;\n      view.hollow = hollow.cacheCanvas, view.filled = filled.cacheCanvas; // TODO cache ships with interchangable bitmap instead\n      container.ship = view;\n      container.addChild(view);\n\n      //text\n      if (ship.owner.team == our_team && ship != our_ship) {\n        var text = new createjs.Text(ship.owner.name, \"14px Roboto\", our_team.color);\n        text.textAlign = \"center\";\n        // text.cache(-50, -30, 100, 60)\n        container.text = text;\n        container.addChild(text);\n      }\n\n      // if(ship == our_ship) {\n      //   let color = this.ships.main.owner.team.color,\n      //     view = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\n      //     shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\n      //     offset = { x: 22, y: -22 };\n      //\n      //   view.x = shadow.x = offset.x;\n      //   view.y = shadow.y = offset.y;\n      //\n      //   container.addChild(container.meter_shadow = view.shadow = shadow);\n      //   container.addChild(container.meter = view);\n      // }\n\n\n      this.view.layer.action.front.addChild(ship.view = container);\n    });\n\n    if (our_ship) {\n      let container = our_ship.view,\n        color = this.ships.main.owner.team.color,\n        innerRadius = 5 / this.scale,\n        outerRadius = 7 / this.scale,\n        meter = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1, this.scale)),\n        shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64', this.scale)),\n        offset = {x: 22, y: -22};\n\n      shadow.cache(-outerRadius, -outerRadius, outerRadius*2, outerRadius*2);\n\n      meter.x = shadow.x = offset.x;\n      meter.y = shadow.y = offset.y;\n\n      container.addChild(container.meter_shadow = meter.shadow = shadow);\n      container.addChild(container.meter = meter);\n    }\n  }\n\n  createPoolViews() {\n    this.view.bullets = new Map()\n    this.view.blocks = new Map()\n    this.view.subs = new Map()\n  }\n\n  // createParticleViews() {\n  //   this.ships.forEach((ship) => {\n  //     var view = ship.view;\n  //\n  //     DeepSpaceGame.renderingParameters.times(() => {\n  //       var particle = DeepSpaceGame.graphics.particle();\n  //       view.reserve.push(new createjs.Shape);\n  //     });\n  //\n  //     this.stage.addChild(ship.view = view);\n  //   });\n  // }\n\n  createOverlayViews() {\n    var overlay = {};\n\n    overlay.score = new createjs.Container();\n    overlay.score.team = [];\n    var imagined_width = 120;\n    this.teams.forEach((team, i) => {\n      var text = new createjs.Text(this.game.scores[i].toString(), \"48px Unica One\", team.color);\n      text.x = (i * imagined_width) + (imagined_width / 2);\n      text.textAlign = \"center\";\n      text.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n      overlay.score.addChild(text);\n      overlay.score.team.push(text);\n    });\n    overlay.score.x = (this.window.width / 2) - ((this.teams.length * imagined_width) / 2)\n    overlay.score.y = 12;\n\n    this.view.layer.overlay.addChild(overlay.score);\n\n\n\n    // energy meter\n    // if(!this.spectate) {\n    //   overlay.ship = {};\n    //   let color = this.ships.main.owner.team.color,\n    //       view = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\n    //       shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\n    //       centerX = this.window.width / 2,\n    //       centerY = this.window.height / 2,\n    //       offset = { x: 22, y: -22 };\n    //\n    //   view.x = shadow.x = centerX + offset.x;\n    //   view.y = shadow.y = centerY + offset.y;\n    //\n    //   this.view.layer.overlay.addChild(view.shadow = shadow);\n    //   this.view.layer.overlay.addChild(overlay.ship.energyMeter = view);\n    // }\n\n    // MINI MAP\n    if (!this.spectate) this.createOverlayMinimapViews(overlay, this.view.layer.overlay);\n\n\n\n    // var imagined_width = 512;\n    overlay.message = new createjs.Text(\"\", \"24px Roboto Condensed\");\n    overlay.message.textAlign = \"center\";\n    overlay.message.x = (this.window.width / 2);\n    overlay.message.y = 76;\n    overlay.message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n\n    this.view.layer.overlay.addChild(overlay.message);\n\n    // var imagined_width = 512;\n    overlay.kill_message = new createjs.Text(\"\", \"24px Roboto Condensed\");\n    overlay.kill_message.textAlign = \"center\";\n    overlay.kill_message.x = (this.window.width / 2);\n    overlay.kill_message.y = this.window.height - 76;\n    overlay.kill_message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n\n    this.view.layer.overlay.addChild(overlay.kill_message);\n\n    switch (this.gameMode) {\n      case 0: // ctf\n        // var centerX = this.mapInfo.width / 2;\n        // var centerY = this.mapInfo.height / 2;\n\n        var r = DeepSpaceGame.modes[\"ctf\"].flag_radius * this.scale, s = r * 1.2;\n        var flag = new createjs.Shape(\n          DeepSpaceGame.graphics.flag(r)\n        );\n        flag.shadow = DeepSpaceGame.graphics.flag_shadow();\n        flag.cache(-s, -s, s * 2, s * 2);\n\n        // flag.x = centerX; flag.y = centerY;\n\n        this.view.layer.overlay.addChild(flag);\n        this.view.flag = flag;\n\n        break;\n    }\n\n\n    this.view.overlay = overlay;\n  }\n\n  createOverlayMinimapViews(overlay_model, overlay_view) {\n\n    let mini = overlay_model.minimap = new createjs.Container();\n\n    mini.width = mini.height = 168;\n    mini.scale = mini.width / this.mapInfo.width;\n    mini.regX = mini.width/2;\n    mini.regY = mini.height/2;\n    mini.rotation = Math.degrees(-this.ships.main.spawnRotation) - 90;\n\n    let padd = this.window.width < 600 ? 0 : 32;\n    mini.x = (padd) + mini.width/2;\n    mini.y = this.window.height - (padd + mini.height) + mini.height/2\n\n    // background\n    let background = mini.background = new createjs.Shape();\n    background.graphics.beginFill('#263238').drawRect(0, 0, mini.width, mini.height);\n    background.cache(0, 0, mini.width, mini.height);\n    mini.addChild(background);\n\n    // map obstacles\n    var max = 128,\n      r = max * mini.scale,\n      block = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r)),\n      s = r * 1.2;\n    block.cache(-s, -s, s * 2, s * 2);\n    var cache = block.cacheCanvas;\n\n    this.model.map.impermeables.forEach(block => {\n      var scale = (block.radius * mini.scale) / r,\n        view = new createjs.Bitmap(cache),\n        pos = block.position;\n      view.scaleX = view.scaleY = scale;\n      view.x = (pos.x * mini.scale) - (scale * cache.width / 2);\n      view.y = (pos.y * mini.scale) - (scale * cache.height / 2);\n      mini.addChild(view);\n    });\n\n    // spawns\n    this.teams.forEach(team => {\n      let camp = team.spawn_camp,\n        radius = team == this.ships.main.owner.team ? 8 : 6,\n        // radius = camp.radius*mini.scale,\n        view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(team.color, 6)),\n        pos = camp.position;\n      view.x = pos.x * mini.scale;\n      view.y = pos.y * mini.scale;\n      var s = radius * 1.2;\n      view.cache(-s, -s, s * 2, s * 2);\n      mini.addChild(view);\n    });\n\n    // flag\n    if(this.gameMode == 0) {\n      let flag_view = mini.flag = new createjs.Shape(DeepSpaceGame.graphics.circle_fill('#ECEFF1', 6))\n      mini.addChild(flag_view);\n    }\n\n    // ships .. hmmm.. intel >.>\n    // (only same team for now)\n    let this_player = this.ships.main.owner, this_team = this_player.team\n    mini.players = [];\n    this_team.players.forEach(player => {\n      let view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(this_team.color, 4));\n      view.alpha = player == this_player ? 1 : 0.6;\n      mini.players.push(view);\n      mini.addChild(view);\n    });\n\n    // and also eventually blocks\n    mini.blocks = new Map();\n\n\n    overlay_view.addChild(mini);\n  }\n\n  createOverlayMinimapBlockViewFor(block) {\n    let cache = DeepSpaceGame.graphicsCaches.minimap.blocks[block.team],\n      blv = new createjs.Bitmap(cache),\n      mini = this.view.overlay.minimap,\n      scale = mini.scale;\n\n    // blv.alpha = 0.2\n    blv.x = block.position.x * scale;\n    blv.y = block.position.y * scale;\n\n    blv.regX = blv.regY = (cache.width / 2);\n\n    mini.addChild(blv);\n    mini.setChildIndex(blv, 1)\n    mini.blocks.set(block.id, blv);\n\n    // flag always on top\n    // mini.setChildIndex(mini.flag, mini.numChildren-1)\n  }\n\n  destroyOverlayMinimapBlockViewFor(id) {\n    if (!this.spectate) {\n      var v = this.view.overlay.minimap.blocks.get(id);\n      if (v) {\n        this.view.overlay.minimap.blocks.delete(id);\n        this.view.overlay.minimap.removeChild(v);\n      }\n    }\n  }\n\n  setupCamera() {\n    this.view.layer.action.width = this.mapInfo.width;\n    this.view.layer.action.height = this.mapInfo.height;\n    this.camera = new Camera(this.stage.canvas, this.view.layer.action, this.scale, this.HDPScale);\n\n    if (this.spectate) {\n      this.activePlayerIndex = 0;\n      // this.playerShipViews = new Map();\n      // this.setupData.players.forEach((p, i)=>{\n      //   this.playerShipViews.set(i, this.players.get(p.id).ship.view);\n      // });\n      this.activePlayers = this.setupData.players.map(p => this.players.get(p[0]));\n      this.updateCameraFocus();\n    } else {\n      this.camera.focus = this.ships.main.view;\n    }\n\n    this.camera.width = this.window.width;\n    this.camera.height = this.window.height;\n  }\n\n  setupListeners() { // (needs (even more) work)\n    this.inputHandlers = new Map();\n    var receiver = window;\n\n    if (this.spectate) {\n      var keyHandler = (e) => {\n        if (e.keyCode == 37) { // left: ◀︎\n          this.activePlayerIndex--;\n          if (this.activePlayerIndex < 0) this.activePlayerIndex = this.activePlayers.length - 1;\n        }\n        if (e.keyCode == 39) { // right: ▶︎\n          this.activePlayerIndex++;\n          if (this.activePlayerIndex >= this.activePlayers.length) this.activePlayerIndex = 0;\n        }\n        this.updateCameraFocus();\n      }\n      receiver.addEventListener('keydown', keyHandler); // onkeydown\n      this.inputHandlers.set('keydown', keyHandler);\n    } else {\n      // forward :  0 to 1\n      // turn    : -1 to 1\n      // shoot   : true or false\n      // block   : true or false\n      // sub : true or false\n\n      // var keypressWeight = 0.85;\n\n      // var inputStack = new Map([[\"forward\", 0], [\"turn\", 0], [\"shoot\", false], [\"block\", false], [\"sub\", false]]);\n      // var inputStack = new Map([[\"verticle\", 0], [\"horizontal\", 0], [\"shoot\", false], [\"block\", false], [\"sub\", false]]);\n      // var inputStack = new Map([[\"move_v_axis\", 0], [\"move_h_axis\", 0], [\"shoot_v_axis\", 0], [\"shoot_h_axis\", 0], [\"block\", false], [\"sub\", false]]);\n      // var inputStack = new Map([\n      //   [\"up\", 0], [\"dn\", 0], [\"lt\", 0], [\"rt\", 0],         // move direction\n      //   [\"up2\", 0], [\"dn2\", 0], [\"lt2\", 0], [\"rt2\", 0],     // attack direction\n      //   [\"block\", false], [\"sub\", false]                    // other\n      // ]);\n\n      // for(var [,player] of this.players) {\n      //   player.input = [];\n      // }\n      var inputStack = this.ships.main.owner.input = new Set();\n      inputStack.changed = false;\n\n      // KEYBOARD\n      // key mappings, have multiple ('values') so you can switch between key bindings\n      // the default values are true / false\n      var keymap = [\n        // up: ▲\n        [\"up\", [38]],\n        // down: ▼\n        [\"dn\", [40]],\n        // left: ◀︎\n        [\"lt\", [37]],\n        // right: ▶︎\n        [\"rt\", [39]],\n        // up: w\n        [\"up2\", [87]],\n        // down: s\n        [\"dn2\", [83]],\n        // left: a\n        [\"lt2\", [65]],\n        // right: d\n        [\"rt2\", [68]],\n        // block: space, v\n        [\"block\", [32, 86]],\n        // sub: e\n        [\"sub\", [69]]\n      ];\n\n      // var values = [\n      //   // up: ▲\n      //   [\"up\", [38], true, false],\n      //   // down: ▼\n      //   [\"dn\", [40], true, false],\n      //   // left: ◀︎\n      //   [\"lt\", [37], true, false],\n      //   // right: ▶︎\n      //   [\"rt\", [39], true, false],\n      //   // up: w\n      //   [\"up2\", [87], true, false],\n      //   // down: s\n      //   [\"dn2\", [83], true, false],\n      //   // left: a\n      //   [\"lt2\", [65], true, false],\n      //   // right: d\n      //   [\"rt2\", [68], true, false],\n      //   // block: space\n      //   [\"block\", [32], true, false],\n      //   // sub: e\n      //   [\"sub\", [69], true, false]\n      // ];\n\n      // var values = [\n      //   // up: ▲ , w\n      //   [\"forward\", [38, 87], keypressWeight, 0],\n      //   // right: ▶︎ , d\n      //   [\"turn\", [39, 68], keypressWeight, 0],\n      //   // left: ◀︎ , a\n      //   [\"turn\", [37, 65], -keypressWeight, 0],\n      //   // shoot: z , k\n      //   [\"shoot\", [90, 75], true, false],\n      //   // block: x , l\n      //   [\"block\", [88, 76], true, false],\n      //   // block: c , ;\n      //   [\"sub\", [67, 186], true, false]\n\n      // // up: ▲ , w\n      // [\"move_v_axis\", [38, 87], keypressWeight, 0],\n      // // down: ▼ , s\n      // [\"move_v_axis\", [40, 83], -keypressWeight, 0],\n      // // right: ▶︎ , d\n      // [\"move_h_axis\", [39, 68], keypressWeight, 0],\n      // // left: ◀︎ , a\n      // [\"move_h_axis\", [37, 65], -keypressWeight, 0],\n      // ];\n\n      let keyHandler = (e) => {\n        var type = e.type;\n\n        if (type == 'keyup' || type == 'keydown') {\n          var eventCode = e.keyCode;\n\n          keymap.forEach((row) => {\n            row[1].forEach((code) => {\n              if (code == eventCode) {\n\n                // row[0] e.g. 'up' or 'block'\n                // row[2] is value on keydown\n                // row[3] is value on keyup\n\n                if (!type.is('keyup')) {\n                  if (!inputStack.has(row[0])) {\n                    inputStack.add(row[0]);\n                    inputStack.changed = true;\n                  }\n                } else {\n                  inputStack.delete(row[0])\n                  inputStack.changed = true;\n                }\n\n                // inputStack.delete(row[0])\n                // if(keydown)\n                // if(!type.is('keyup')) inputStack.add(row[0]);\n\n                // NetworkHelper.out_input_stack(Array.from(inputStack));\n                // inputStack.changed = true;\n                // log(Array.from(inputStack));\n              }\n            });\n          });\n        }\n      };\n\n      receiver.addEventListener('keydown', keyHandler); // onkeydown\n      receiver.addEventListener('keyup', keyHandler); // onkeyup\n\n      this.inputHandlers.set('keydown', keyHandler);\n      this.inputHandlers.set('keyup', keyHandler);\n\n      // GAMEPAD\n      receiver.addEventListener(\"gamepadconnected\", (e) => this.gamepad = e.gamepad);\n      // this closure has access to the inputStack variable.. the alias for this.ships.main.owner.input\n      // .. thus it is left here .. please revise\n      this.updateGamepadInput = (!navigator.getGamepads) ? () => {\n        } : () => {\n          var gamepad = navigator.getGamepads()[0];\n          if (!gamepad) return;\n\n          /*var val, deadZone;\n\n          // UP\n          deadZone = 0.0;\n          val = gamepad.axes[3];\n          val = (val + 1) / 2; // adjusted weird (-1 to 1 back trigger) axis seup\n          val = (val > deadZone) ? (val - deadZone) / (1 - deadZone) : 0;\n          inputStack.set(\"forward\", val);\n\n          // LEFT and RIGHT\n          deadZone = 0.15;\n          val = gamepad.axes[0];\n          val = (val < -deadZone || val > deadZone) ? (val - deadZone) / (1 - deadZone) : 0;\n          inputStack.set(\"turn\", val);\n\n          // FIRE\n          inputStack.set(\"shoot\", gamepad.buttons[3].pressed);\n\n          // BLOCK\n          inputStack.set(\"block\", gamepad.buttons[7].pressed);\n\n          // OTHER\n          inputStack.set(\"sub\", gamepad.buttons[0].pressed);*/\n\n\n          // NEW :)\n          const deadZone = 0.15;\n          const buttonMap = new Map([\n\n            ['up', [\n\n              // - y axis\n              gamepad.axes[1] < -deadZone,\n\n              // l trigger\n              gamepad.axes[3] > 0,\n\n              // d-pad north\n\n            ]],\n\n            ['dn', [\n\n              // + y axis\n              gamepad.axes[1] > deadZone,\n\n              // r trigger\n              gamepad.axes[4] > 0,\n\n            ]],\n\n            ['lt', [\n\n              // - x axis\n              gamepad.axes[0] < -deadZone,\n\n            ]],\n\n            ['rt', [\n\n              // - x axis\n              gamepad.axes[0] > deadZone,\n\n            ]],\n\n            ['up2', [\n\n              // - y axis 2\n              gamepad.axes[5] < -deadZone,\n\n            ]],\n\n            ['dn2', [\n\n              // + y axis 2\n              gamepad.axes[5] > deadZone,\n\n            ]],\n\n            ['lt2', [\n\n              // - x axis 2\n              gamepad.axes[2] < -deadZone,\n\n            ]],\n\n            ['rt2', [\n\n              // + x axis 2\n              gamepad.axes[2] > deadZone,\n\n            ]],\n\n            ['shoot', [\n\n              // buttons a & b\n              gamepad.buttons[0].pressed,\n              gamepad.buttons[1].pressed,\n\n            ]],\n\n            ['block', [\n\n              // r shoulder button\n              gamepad.buttons[7].pressed,\n\n            ]],\n\n            ['sub', [\n\n              // buttons x & y\n              gamepad.buttons[3].pressed,\n              gamepad.buttons[4].pressed,\n\n              // l shoulder button\n              gamepad.buttons[6].pressed,\n\n              // r joystick press\n              gamepad.buttons[14].pressed,\n\n            ]],\n\n          ]);\n\n          for(let [code, bindings] of buttonMap) {\n\n            const activation = _(bindings).contains(true);\n\n            if(activation) {\n\n              if(inputStack.has(code)) continue;\n\n              inputStack.add(code);\n              inputStack.changed = true;\n\n            } else {\n\n              if(!inputStack.has(code)) continue;\n\n              inputStack.delete(code);\n              inputStack.changed = true;\n\n            }\n\n          }\n\n\n        };\n\n      // MOBILE\n      let raw_acc_data = [0, 0], applied_acc_data = [0, 0]; // [x, y]\n      let threshold = 1, bias = [0, 0]; // deadzone\n      bias = ENV.storage.calibration = (ENV.storage.calibration) ? ENV.storage.calibration.split(\",\").map(Number) : [0, 0];\n      // let origin = [0, bias];\n      if (ENV.mobile && window.DeviceMotionEvent != undefined) {\n        window.ondevicemotion = function (e) {\n          raw_acc_data = [e.accelerationIncludingGravity.x, e.accelerationIncludingGravity.y];\n          // if ( e.rotationRate )  {\n          //   document.getElementById(\"rotationAlpha\").innerHTML = e.rotationRate.alpha;\n          //   document.getElementById(\"rotationBeta\").innerHTML = e.rotationRate.beta;\n          //   document.getElementById(\"rotationGamma\").innerHTML = e.rotationRate.gamma;\n          // }\n        }\n\n        inputStack.updateMotion = function () {\n          let orientation = window.orientation,\n            [raw_x, raw_y] = raw_acc_data, [x, y] = [raw_x, raw_y];\n\n          if (orientation === 90) {\n            x = -raw_y, y = raw_x\n          }\n          else if (orientation === -90) {\n            x = raw_y, y = -raw_x\n          }\n          else if (orientation === 180 || orientation === -180) {\n            x = -x, y = -y\n          }\n\n          applied_acc_data = [x, y];\n          x -= bias[0]; // bias towards player;\n          y -= bias[1];\n\n          if(ENV.options.input.invertControls) { x = -x; y = -y }\n\n          if (x > threshold) {\n            inputStack.add('rt')\n          } else {\n            inputStack.delete('rt')\n          }\n          if (x < -threshold) {\n            inputStack.add('lt')\n          } else {\n            inputStack.delete('lt')\n          }\n          if (y > threshold) {\n            inputStack.add('up')\n          } else {\n            inputStack.delete('up')\n          }\n          if (y < -threshold) {\n            inputStack.add('dn')\n          } else {\n            inputStack.delete('dn')\n          }\n\n        };\n      }\n\n      var left = document.querySelector('#touch_layer > .left');\n      left.addEventListener('touchstart', e => {\n        inputStack.add('block')\n      });\n      left.addEventListener('touchend', e => {\n        inputStack.delete('block')\n      });\n\n      let joystick = new V2D(), joystick_deadzone_radius = 30;\n      var right = document.querySelector('#touch_layer > .right');\n      right.addEventListener('touchstart', e => {\n        inputStack.add('shoot')\n      });\n      right.addEventListener('touchend', e => {\n        inputStack.delete('shoot');\n        inputStack.delete('up2');\n        inputStack.delete('dn2');\n        inputStack.delete('lt2');\n        inputStack.delete('rt2');\n      });\n      var right_hammer = new Hammer(right);\n      right_hammer.on('panmove', function (e) {\n        var v = new V2D(e.deltaX, e.deltaY), a = v.angle;\n        if (v.length > joystick_deadzone_radius) {\n          if (a < -0.39 && a > -2.74) {\n            inputStack.add('up2')\n          } else {\n            inputStack.delete('up2')\n          }\n          if (a > 0.39 && a < 2.74) {\n            inputStack.add('dn2')\n          } else {\n            inputStack.delete('dn2')\n          }\n          if (a > 1.96 || a < -1.96) {\n            inputStack.add('lt2')\n          } else {\n            inputStack.delete('lt2')\n          }\n          if (a > -1.18 && a < 1.18) {\n            inputStack.add('rt2')\n          } else {\n            inputStack.delete('rt2')\n          }\n        } else {\n\n        }\n        // console.log(e)\n      });\n\n      var hammertime = new Hammer(document.querySelector('#touch_layer'));\n      hammertime.get('tap').set({taps: 2})\n      hammertime.get('swipe').set({direction: Hammer.DIRECTION_LEFT})\n      hammertime.on('tap', function (ev) {\n        inputStack.add('sub');\n        ( () => inputStack.delete('sub') ).wait(200);\n      });\n      hammertime.on('swipe', function (e) {\n        // calibrate\n        bias = applied_acc_data;\n        ENV.storage.calibration = bias;\n      });\n\n\n    }\n\n  }\n\n  setupPhysics() {\n    this.setupCollisionSystem();\n    this.assignCollisionPatterns();\n    this.setupReferenceGroups();\n  }\n\n  setupCollisionSystem() {\n    let physics = this.physics = {};\n\n    physics.block_size = 512;\n    physics.world_size = {width: this.mapInfo.width, height: this.mapInfo.height};\n\n    let rows = Math.ceil(physics.world_size.width / physics.block_size),\n      cols = Math.ceil(physics.world_size.height / physics.block_size);\n\n    physics.divisions = [];\n    // rows.times(i => {\n    //   physics.divisions.push([]);\n    //   cols.times(() => {\n    //     physics.divisions[i].push(new Set())\n    //   })\n    // })\n\n    physics.division_index = function (x, y) {\n      return (y * cols) + x;\n    }\n\n    physics.division_coordinates = function (i) {\n      return [i % rows, Math.floor(i / cols)]\n    }\n\n    /* collision testing will be composed of the following:\n\n     within each division, all the tests will be performed\n     with the objects available\n\n     each division will contain all the collision groups within..\n     they will be populated accordingly so when the tests are run\n     tests between objects listed in the groups in the division\n     will be tested. */\n    physics.collision_checks = [];\n    physics.collision_groups = {\n      SHIPS: Symbol('SHIPS'),\n      OUR_SHIP: Symbol('OUR_SHIP'),\n      OUR_SHIPS: Symbol('OUR_SHIPS'),\n      ENEMY_SHIPS: Symbol('ENEMY_SHIPS'),\n\n      BULLETS: Symbol('BULLETS'),\n      MY_BULLETS: Symbol('MY_BULLETS'),\n      OUR_BULLETS: Symbol('OUR_BULLETS'),\n      ENEMY_BULLETS: Symbol('ENEMY_BULLETS'),\n\n      BLOCKS: Symbol('BLOCKS'),\n      OUR_BLOCKS: Symbol('OUR_BLOCKS'),\n      ENEMY_BLOCKS: Symbol('ENEMY_BLOCKS'),\n\n      OUR_PROJ_SUBS: Symbol('OUR_PROJ_SUBS'),\n\n      SPAWN_CAMPS: Symbol('SPAWN_CAMPS'),\n      OUR_SPAWN_CAMP: Symbol('OUR_SPAWN_CAMP'),\n      ENEMY_SPAWN_CAMPS: Symbol('ENEMY_SPAWN_CAMPS'),\n\n      REFUGE: Symbol('REFUGE'), // block or camp\n      OUR_REFUGE: Symbol('OUR_REFUGE'),\n\n      FLAG: Symbol('FLAG'),\n      IMPERMEABLES: Symbol('IMPERMEABLES')\n    };\n\n\n    (rows * cols).times(() => {\n      let obj = {};\n      for (let group of Object.keys(physics.collision_groups)) obj[physics.collision_groups[group]] = new Set();\n      physics.divisions.push(obj);\n    })\n\n    /*\n     END RESULT LOOKS SOMETHING LIKE:\n     [.. {...}, {SHIPS: [Set], OUR_BULLETS: Set [b, b, ..], ...}, {...}, ...]\n\n     */\n  }\n\n  setCollisionDivisions(physics_body) {\n    this.clearCollisionDivisions(physics_body)\n\n    let d = physics_body.divisions = new Set(),\n      r = physics_body.radius,\n      [x, y] = [physics_body.position.x, physics_body.position.y];\n\n    [[1, 0], [0, -1], [-1, 0], [0, 1]].forEach(unit_offset_array => {\n      let check_x = x + (r * unit_offset_array[0]),\n        check_y = y + (r * unit_offset_array[1]);\n\n      let division_x = Math.floor(check_x / this.physics.block_size),\n        division_y = Math.floor(check_y / this.physics.block_size),\n        division_index = this.physics.division_index(division_x, division_y);\n\n      if (this.physics.divisions[division_index]) d.add(division_index);\n    });\n\n    for (let division_index of d)\n      for (let group of physics_body.collision_groups)\n        this.physics.divisions[division_index][group].add(physics_body);\n  }\n\n  clearCollisionDivisions(physics_body) {\n    if (physics_body.divisions) {\n      for (let i of physics_body.divisions)\n        for (let group of physics_body.collision_groups)\n          this.physics.divisions[i][group].delete(physics_body);\n    }\n  }\n\n  assignCollisionPatterns() {\n    let checks = this.physics.collision_checks,\n      groups = this.physics.collision_groups;\n\n\n    if (!this.spectate) {\n\n      // MY BULLET <-> ENEMY SHIPS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_SHIPS,\n        (bullet, ship) => {\n          if (!bullet.disabled && !ship.disabled) {\n            this.damageShip(ship.owner.id, bullet.hp, bullet.creator)\n            this.removeBullet(bullet.id)\n          }\n        }]\n      );\n\n      // MY BULLET <-> ENEMY BLOCKS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_BLOCKS,\n        (bullet, block) => {\n          if (!bullet.disabled && !block.disabled) {\n            this.damageBlock(block.id, bullet.hp)\n            if (bullet.hp < block.hp) this.removeBullet(bullet.id);\n          }\n        }]\n      );\n\n      // MY BULLET <-> ENEMY SPAWN_CAMPS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_SPAWN_CAMPS,\n        (bullet, spawn_camp) => {\n          if (!bullet.disabled) {\n            this.removeBullet(bullet.id);\n          }\n        }]\n      );\n\n      // OUR BULLET <-> IMPERMEABLES\n      // checks.push([\n      //   groups.OUR_BULLETS,\n      //   groups.IMPERMEABLES,\n      //   (bullet, imp) => {\n      //     if(!bullet.disabled) {\n      //       NetworkHelper.bullet_destroy(bullet.id);\n      //     }\n      //   }]\n      // );\n\n      // // OUR SHIP <-> OUR REFUGE\n      // checks.push([\n      //   groups.OUR_SHIP,\n      //   groups.OUR_REFUGE,\n      //   (ship, refuge) => {\n      //     if(!ship.disabled) ship.charging = true;\n      //   }]\n      // );\n\n      // OUR SHIP <-> FLAG\n      checks.push([\n        groups.OUR_SHIP,\n        groups.FLAG,\n        (ship, flag) => {\n          if (!ship.disabled && flag.idle)\n            if(ship.canPickupFlag())\n              this.assumeFlag(ship);\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY BLOCKS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_BLOCKS,\n        (sub, block) => {\n          if (!sub.disabled && !block.disabled) {\n            switch (sub.type) {\n              case 'attractor':\n              case 'repulsor':\n                // NetworkHelper.sub_destroy(sub.id);\n                // NetworkHelper.block_destroy(block.id);\n                break;\n              case 'block_bomb':\n              case 'missile':\n                sub.explode();\n                break;\n            }\n          }\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY SHIPS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_SHIPS,\n        (sub, ship) => {\n          if (!sub.disabled && !ship.disabled) {\n            if (sub.type == 'missile') {\n              this.damageShip(ship.owner.id, sub.hp, sub.player);\n              this.removeSub(sub.id)\n            }\n          }\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY SPAWN_CAMPS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_SPAWN_CAMPS,\n        (sub, spawn_camp) => {\n          if (!sub.disabled) this.removeSub(sub.id);\n        }]\n      );\n\n      // OUR BLOCKS <-> OUR BLOCKS\n      checks.push([\n        groups.OUR_BLOCKS,\n        groups.OUR_BLOCKS,\n        (block_a, block_b) => {\n          if (block_a != block_b && !block_a.disabled && !block_b.disabled)\n            if (Physics.overlap(block_a, block_b) > 0.8) // 0.8\n              this.removeBlock(block_a.id);\n        }]\n      );\n\n    }\n\n    // SHIPS <-> WALL OR CAMP (REFUGE)\n    checks.push([\n      groups.SHIPS,\n      groups.REFUGE,\n      (ship, refuge) => {\n        if (!ship.disabled) {\n          if (ship.owner.team.number != refuge.team) {\n            Physics.bounce(ship, refuge);\n          } else {\n            ship.charging = true;\n          }\n        }\n      }]\n    );\n\n    // SHIPS <-> IMPERMEABLES\n    checks.push([\n      groups.SHIPS,\n      groups.IMPERMEABLES,\n      (ship, imp) => {\n        if (!ship.disabled) {\n          Physics.bounce(ship, imp);\n        }\n      }]\n    );\n\n    // BULLETS <-> IMPERMEABLES\n    checks.push([\n      groups.BULLETS,\n      groups.IMPERMEABLES,\n      (bullet, imp) => {\n        if (!bullet.disabled) {\n          if (Physics.overlap(bullet, imp) < 0.1) {\n            Physics.bounce(bullet, imp);\n          } else {\n            this.removeBullet(bullet.id);\n          }\n        }\n      }]\n    );\n\n  }\n\n  setupReferenceGroups() {\n    var refGroups = {};\n\n    refGroups.enemyBlocks = new Set();\n    refGroups.enemySubs = new Set();\n\n    refGroups.animate = new Set();\n\n    // this.collisionGroups = groups;\n    this.refGroups = refGroups;\n  }\n\n  setupLoop() {\n    var FPS = n => 1000 / n;\n    window.getAnimationFrame =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        window.setTimeout(callback, FPS(60))\n      };\n\n    this.setupDT();\n  }\n\n  setupDT() {\n    this.last_time = (new Date()).getTime();\n\n    // the variable percentage of a second that has gone by since the last frame\n    // usually expressed: 0.016 when running 60 fps\n    this.dt = 0;\n  }\n\n  updateDT() {\n    let now = (new Date()).getTime();\n    this.dt = (now - this.last_time) / 1000;\n    this.last_time = now;\n  }\n\n  setupReferences() {\n    this.setupShortcutsToCommonCalls();\n    this.setupFinishCollisionAssignment();\n    this.setupGraphicsCaches();\n  }\n\n  setupShortcutsToCommonCalls() {\n    if (!this.spectate) {\n      // model references\n      this.enemyTeams = this.teams.filter(team => team.number != this.ships.main.owner.team.number);\n      this.enemyPlayers = this.enemyTeams.reduce((list, team) => list.concat(team.players), []);\n\n      this.player = this.ships.main.owner;\n      this.team = this.player.team;\n    }\n  }\n\n  setupFinishCollisionAssignment() {\n    /*\n     this method is run near end of the setup since things like ships and players\n     and teams and everything else is assigned and references can be made to the\n     local players team and such..\n     */\n\n    // spawn camps\n    this.teams.forEach(team => {\n      let spawn_c = team.spawn_camp;\n      spawn_c.collision_groups = [this.physics.collision_groups.SPAWN_CAMPS, this.physics.collision_groups.REFUGE] // TODO COLLISION OR PHYSICS CLASS PROTOCOLS\n      if (team == this.team) {\n        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_SPAWN_CAMP);\n        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_REFUGE);\n      } else {\n        spawn_c.collision_groups.push(this.physics.collision_groups.ENEMY_SPAWN_CAMPS);\n      }\n      this.setCollisionDivisions(spawn_c);\n    });\n\n    // ships\n    this.ships.forEach(ship => {\n      ship.collision_groups = [this.physics.collision_groups.SHIPS];\n      if (ship == this.ships.main) ship.collision_groups.push(this.physics.collision_groups.OUR_SHIP);\n      ship.collision_groups.push((ship.owner.team == this.team) ? this.physics.collision_groups.OUR_SHIPS : this.physics.collision_groups.ENEMY_SHIPS)\n    });\n  }\n\n  setupGraphicsCaches() {\n    // TODO: deinit graphics caches\n\n    // cache background\n    // this.view.layer.background.cache(0, 0, this.mapInfo.width, this.mapInfo.height);\n\n    // create single cache for common objects\n    this.setupCommonGraphicsCachePool();\n  }\n\n\n  setupCommonGraphicsCachePool() {\n    let gc = DeepSpaceGame.graphicsCaches = {};\n\n    // bullets\n    gc.bullets = [];\n    this.teams.forEach(team => {\n\n      // always caching the largest version\n      let radius = Bullet.stats.MAX_RADIUS;\n\n      let v = new createjs.Shape(\n        DeepSpaceGame.graphics.particle(this.teams[team.number].color, radius)\n      );\n\n      var s = radius * 1.2;\n      v.cache(-s, -s, s * 2, s * 2);\n\n      gc.bullets[team.number] = v.cacheCanvas;\n    });\n\n    // blocks\n    gc.blocks = {\n      unlocked: [],\n      locked: [],\n      enemy: []\n    };\n    this.teams.forEach(team => {\n\n      // always caching the largest version\n      let radius = Block.stats.MAX_RADIUS;\n\n\n      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(this.teams[team.number].color, radius)),\n        border = new createjs.Shape(DeepSpaceGame.graphics.block_border(this.teams[team.number].color, radius));\n\n      var s = radius * 1.2;\n      let c;\n\n      // enemy\n      c = new createjs.Container();\n      fill.alpha = 0.24;\n      c.addChild(fill);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.enemy[team.number] = c.cacheCanvas;\n\n      // unlocked\n      // fill.alpha = 0.16;\n      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius))\n      c = new createjs.Container();\n      c.addChild(fill);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.unlocked[team.number] = c.cacheCanvas;\n\n      // locked\n      // fill.alpha = 1;\n      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#455A64', 40), radius))\n      c = new createjs.Container();\n      c.addChild(fill);\n      // c.addChild(border);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.locked[team.number] = c.cacheCanvas;\n    });\n\n    // minimap\n    if (this.spectate) return; // TODO make minimap accesible to all even spectators\n    gc.minimap = {blocks: []};\n    this.teams.forEach(team => {\n      // '#37474F'\n      let radius = Block.stats.MAX_RADIUS * this.view.overlay.minimap.scale;\n\n      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius));\n\n      var s = radius * 1.2;\n      // fill.alpha = 0.16;\n      fill.cache(-s, -s, s * 2, s * 2);\n      gc.minimap.blocks[team.number] = fill.cacheCanvas;\n    });\n    // (()=>{\n    //   let radius = 128 * this.view.overlay.minimap.scale;\n    //\n    //   let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(, radius));\n    //\n    //   var s = radius * 1.2;\n    //   // fill.alpha = 0.16;\n    //   fill.cache(-s, -s, s*2, s*2);\n    //   gc.minimap.blocks[team.number] = fill.cacheCanvas;\n    //\n    //   gc.minimap.impermeables = ;\n    // })\n  }\n\n  actualize() {\n    // bring an outside game up to speed\n    // DEPRECIATED :: .. no client can join match after start\n\n    // scores\n    // this.setupData.state.scores.forEach((entry) => {\n    //   this.game.scores[entry.t] = entry.s\n    // });\n    this.setupData.teams.forEach((team, i) => {\n      this.game.scores[i] = 100\n    });\n\n    // flag\n    // var holder;\n    // setTimeout(() => {\n    //   if (holder = this.setupData.state.flagHolder) this.pickupFlag(holder);\n    // }, 100);\n\n    // disconnects\n    // this.setupData.disconnects.forEach(id => this.disconnectPlayer(id))\n\n  }\n\n\n  loop() {\n    // stats.begin();\n    this.updateDT();\n    this.update();\n    this.log();\n    // stats.end();\n\n    // NetworkHelper.release();\n\n    getAnimationFrame(() => this.game.ended ? true : this.loop())\n  }\n\n  update() {\n    // this function duty is as follows:\n    // to update all the moving parts pertaining to the current/local user.\n    // any collisions should be sent back to the server to sync the changes.\n    var over = this.game.disabled;\n    if (!over) this.updateInput();\n    this.updateModel(); // TODO: improve performance\n    if (!over) this.checkForCollisions();\n    // if(this.isHost) this.generateMapEntities();\n\n    if (!over) this.updateGame();\n\n    this.updateView();\n  }\n\n  updateInput() {\n    if(!this.spectate) this.updateGamepadInput();\n    if (!this.spectate) if (this.player.input.updateMotion) this.player.input.updateMotion();\n  }\n\n  // updateGamepadInput() {}\n\n  updateModel() {\n    this.updateShips();\n    this.broadcastShip();\n\n    this.updateBullets();\n    this.updateBlocks();\n    this.updateSubs();\n  }\n\n  updateShips() {\n    for (var ship of this.ships) {\n\n      ship.update(this.dt);\n\n      if (ship == this.ships.main && !ship.disabled) {\n\n        var input = ship.owner.input,\n          x = 0, y = 0, x2 = 0, y2 = 0,\n          s = false;\n\n        for (var prop of input) {\n          switch (prop) {\n            case 'up':\n              y = 1;\n              // y = -1;\n              break;\n            case 'dn':\n              y = -1;\n              // y = 1;\n              break;\n            case 'lt':\n              x = -1;\n              break;\n            case 'rt':\n              x = 1;\n              break;\n            case 'up2':\n              y2 = -1;\n              break;\n            case 'dn2':\n              y2 = 1;\n              break;\n            case 'lt2':\n              x2 = -1;\n              break;\n            case 'rt2':\n              x2 = 1;\n              break;\n            case 'sub':\n              // if(!ship.flag) ship.sub();\n              if(ship.flag) {\n                this.releaseFlag()\n              } else {\n                if(ship.canSub())\n                  this.addSub(ship);\n              }\n              break;\n            case 'block':\n              if(ship.canBlock()) {\n                while(ship.reachedBlockLimit) this.removeBlock(ship.oldestBlockID())\n                this.addBlock(ship)\n              }\n              break;\n            case 'shoot':\n              s = true;\n              break;\n          }\n        }\n\n        // ship.acceleration.set({x, y})\n        // if (ship.acceleration.length) ship.acceleration.length = ship.LINEAR_ACCELERATION_LIMIT;\n        //\n        // // if(ship.acceleration.length) ship.angle = ship.acceleration.angle\n        // if (ship.velocity.length) ship.angle = ship.velocity.angle;\n\n        var direction_v = new V2D(x2, y2)\n        ship.relative_shoot_angle = direction_v.length ? direction_v.angle + (Math.PI/2) : 0;\n\n\n        // new ship controls\n        ship.acceleration = ship.LINEAR_ACCELERATION_LIMIT * y;\n        ship.angular_acceleration = ship.ANGULAR_ACCELERATION_LIMIT * x;\n\n\n        // if(direction_v.length) ship.shoot();\n\n\n        if (s || direction_v.length)\n          if (ship.canShoot())\n            this.addBullet(ship);\n      }\n\n      // validate new position TODO (revise)\n      let r = ship.radius + 8;\n      if (ship.position.x - r < 0) {\n        ship.position.x = r;\n        ship.velocity.x = 0\n      }\n      if (ship.position.y - r < 0) {\n        ship.position.y = r;\n        ship.velocity.y = 0\n      }\n      if (ship.position.x + r > this.mapInfo.width) {\n        ship.position.x = this.mapInfo.width - r;\n        ship.velocity.x = 0;\n      }\n      if (ship.position.y + r > this.mapInfo.height) {\n        ship.position.y = this.mapInfo.height - r;\n        ship.velocity.y = 0;\n      }\n\n      this.setCollisionDivisions(ship);\n\n      // if(ship.position.x < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.height))\n      // if(ship.position.y < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.width))\n      // if(ship.position.x > this.mapInfo.width) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.height))\n      // if(ship.position.y > this.mapInfo.height) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.width))\n\n      // if(ship.position.x < 0) ship.position.x = this.mapInfo.width;\n      // if(ship.position.y < 0) ship.position.y = this.mapInfo.height;\n      // if(ship.position.x > this.mapInfo.width) ship.position.x = 0;\n      // if(ship.position.y > this.mapInfo.height) ship.position.y = 0;\n    }\n  }\n\n  broadcastShip() {\n    var ship, input;\n    if ((ship = this.ships.main) && (input = ship.owner.input)) {\n      if (input.changed) {\n        // log(Array.from(input));\n        // NetworkHelper.out_input_stack(Array.from(input));\n        input.changed = false;\n      }\n\n      this.network.sendShipUpdate(ship.export_update());\n\n      if ((new Date()).getTime() % 60 < 2) this.network.sendShipOverride(ship.export_override());\n      if (ship.flag && ship.disabled) this.releaseFlag();\n      // if(ship.flag && ship.disabled && !this.game.flag.idle) NetworkHelper.out_flag_drop();\n    }\n  }\n\n  updateBullets() {\n    this.model.bullets.forEach(b => {\n      b.update(this.dt);\n      this.setCollisionDivisions(b)\n    });\n    // this.model.bullets.forEach(b => { b.update(); if(b.disabled) NetworkHelper.out_bullet_destroy(b.id) });\n  }\n\n  updateBlocks() { // needs needs work\n    this.model.blocks.forEach(b => {\n      if (b.locked) return;\n      if (b.qualified) {\n        this.snapToGrid(b.position);\n        b.scale = 1;\n        this.setCollisionDivisions(b);\n        if (!this.spectate) this.createOverlayMinimapBlockViewFor(b);\n        if (!this.spectate) if (b.team != this.team.number) this.refGroups.enemyBlocks.add(b); // TODO REVISE AFTER NEW COLLISION SYSTEM!!\n        b.locked = true;\n        b.qualified = false;\n      }\n      b.update(this.dt);\n      // if(b.disabled) NetworkHelper.out_block_destroy(b.id) // due to aging\n    });\n  }\n\n  updateSubs() {\n    this.model.subs.forEach(p => {\n      p.update(this.dt);\n      if (p.collision_groups) this.setCollisionDivisions(p);\n\n      switch (p.type) {\n        case 'attractor':\n        case 'repulsor':\n\n          // field effects TODO is games responsibility..? dt is passed to subs themseves..\n          var distance, direction;\n          this.model.bullets.forEach((b) => {\n            if (!b.disabled && p.team != b.team) {\n              if ((distance = Physics.distance(b.position, p.position)) < p.RANGE) {\n                var force = new V2D();\n                direction = p.position.copy();\n                direction.sub(b.position);\n                force.length = p.INTENSITY_FUNCTION(distance);\n                force.angle = direction.angle;\n                if (p.type == 'repulsor') force.angle = force.angle - Math.PI;\n                b.velocity.add(force);\n                b.velocity.length *= 0.94; // friction TODO\n              }\n            }\n          });\n\n          break;\n        case 'block_bomb':\n\n\n          if (p.exploding) {\n\n            // only the player who created it hands out damage to the blocks so it is done once\n            var ship;\n            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\n              var distance;\n              this.refGroups.enemyBlocks.forEach(block => {\n                if (block && !block.disabled) {\n                  if ((distance = Physics.distance(block.position, p.position)) < p.EXPLOSION_RANGE) {\n                    this.damageBlock(block.id, p.EXPLOSION_DAMAGE_FUNCTION(distance));\n                  }\n                }\n              });\n            }\n\n            // the player is the only one who must wait, the others have been notified to endSub\n            this.removeSub(p.id);\n          }\n\n          break;\n        case 'stealth_cloak':\n          if(p.disabled) ENV.game.destroySub(p.id);\n          break;\n        case 'missile':\n\n          // targeting\n          if (p.target && (Physics.distance(p.target.position, p.position) > p.VISION_RANGE || p.target.stealth)) p.target = null;\n          this.ships.forEach(ship => {\n            if (ship && !ship.disabled && !ship.stealth && ship.owner.team.number != p.team) {\n              if (!p.target && ((distance = Physics.distance(ship.position, p.position)) < p.VISION_RANGE)) {\n                p.target = ship;\n              }\n            }\n          });\n\n          // exploding\n          if (p.exploding) {\n\n            // only the player who created it hands out damage to the blocks so it is done once\n            var ship;\n            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\n              var distance;\n              this.refGroups.enemyBlocks.forEach(block => {\n                if (block && !block.disabled) {\n                  if ((distance = Physics.distance(block.position, p.position) - block.radius) < p.EXPLOSION_RANGE) {\n                    this.changeBlock(block.id, ship.owner.team.number)\n                    if(!this.spectate) this.ships.main.blocks.add(block.id);\n                  }\n                }\n              });\n            }\n\n            // the player is the only one who must wait, the others have been notified to endSub\n            this.removeSub(p.id);\n          }\n\n          break;\n        default:\n          break;\n      }\n\n\n    });\n\n  }\n\n  checkForCollisions() {\n    // in theory, the user will only check\n    // collisions of those things which it\n    // created. though in practice, perhaps\n    // just it's attack moves. e.g. bullets\n\n    for (let div of this.physics.divisions) {\n      for (var [a_type, b_type, check] of this.physics.collision_checks)\n        for (let body_a of div[a_type])\n          for (let body_b of div[b_type])\n            if (Physics.doTouch(body_a, body_b))\n              check(body_a, body_b);\n    }\n\n  }\n\n  updateGame() {\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        var flag = this.game.flag;\n        if (!flag.idle) {\n          var player = this.players.get(flag.holderID),\n            p = player.ship.last_known_position,\n            camp = player.team.spawn_camp;\n          flag.position.x = p.x;\n          flag.position.y = p.y;\n\n          this.setCollisionDivisions(flag);\n\n          // real game stuff\n          var distance = Physics.distance(p, camp.position) - camp.radius,\n            percent = distance / this.game.max,\n            low_score = this.game.scores[player.team.number],\n            current_score = Math.round(percent * 100);\n\n          if (current_score < low_score && current_score >= 0) this.game.scores[player.team.number] = current_score;\n\n          if ((percent < 0) && player == this.player) this.network.sendFlagProgress([player.team.number, current_score])\n          // this.network.out_game_over(player.team.number);\n\n\n          // LEAD COMPARISON\n          // replace lead if none exists\n          if (!this.game.lead) this.game.lead = player.team;\n\n          // replace lead if record shows\n          if (current_score < this.game.scores[this.game.lead.number]) {\n\n            if (!this.spectate) {\n              // if you are replacing\n              if (player.team == this.team) {\n                let c = this.team.color;\n                this.alert(\n                  DeepSpaceGame.localizationStrings.alerts['teamTakesLead'][this.language]()\n                  , c);\n                this.network.sendFlagProgress([player.team.number, current_score])\n                // if (this.game.overtime) this.network.out_game_over(this.team.number);\n              }\n              // if you are being replaced\n              else if (this.game.lead == this.team) {\n                let c = player.team.color;\n                this.alert(\n                  DeepSpaceGame.localizationStrings.alerts['teamLosesLead'][this.language]()\n                  , c);\n              }\n            }\n\n            this.game.lead = player.team;\n          }\n\n\n        }\n\n        break;\n\n      case 1:\n\n\n\n        break;\n\n    } // end switch\n\n\n  }\n\n  updateView() {\n    this.updateShipViews();\n    this.updateBulletViews();\n    this.updateBlockViews();\n    this.updateSubViews();\n\n    this.updateCamera();\n    this.updateBackground();\n    this.updateMap();\n    // this.updateTINT();\n    // this.updateGrid();\n\n    this.updateGameViews();\n\n    if (!this.spectate) this.updateMinimapView()\n\n    this.stage.update(); // render changes!!\n  }\n\n  updateShipViews() {\n    this.ships.forEach((ship) => {\n\n      const isVisible = ( ship.view.visible = this.camera.showing(ship) );\n      const shipIsVisible = ( ship.view.visible = this.camera.showing(ship) );\n\n      if (ship.view.visible = this.camera.showing(ship) || ship.view == this.camera.focus) {\n\n        let visibility = 1;\n        if(ship.disabled) {\n          visibility = 0;\n        } else {\n          if(this.game.flag && this.game.flag.holderID === ship.owner.id) {\n            visibility = 1;\n          } else {\n            if(ship.owner.team != this.team && ship.charging) {\n              visibility = 0;\n            } else if(ship.stealth) {\n              if (ship.owner.team == this.team) {\n                visibility = Math.flipCoin(0.2) ? 0 : 0.4;\n              } else {\n                visibility = 0;\n              }\n            }\n          }\n        }\n\n        let ship_view = ship.view.ship;\n        ship_view.alpha = ship.health * visibility;\n        ship_view.rotation = Math.degrees(ship.angle);\n\n        ship.view.x = ship.position.x;\n        ship.view.y = ship.position.y;\n\n        // ship.view.graphics.clear();\n        ship_view.image = ((ship.flag) ? ship_view.filled : ship_view.hollow);\n      }\n\n    });\n    this.updateEnergyMeterView();\n    this.updateNameViews();\n  }\n\n  updateEnergyMeterView() {\n    if (this.spectate) return;\n\n    let ship = this.player.ship,\n      meterView = ship.view.meter,\n      shadowView = meterView.shadow,\n      percent = ship.energy / 100,\n      offset = V2D.new({angle: ship.angle + (Math.PI/4), length: 30 / this.scale});\n    meterView.graphics = DeepSpaceGame.graphics.energyMeter(this.team.color, percent, this.scale);\n    meterView.alpha = shadowView.alpha = ship.disabled ? 0 : 1;\n    meterView.x = shadowView.x = offset.x\n    meterView.y = shadowView.y = offset.y\n    meterView.rotation = shadowView.rotation = Math.degrees(ship.angle + Math.PI/2)\n  }\n\n  updateNameViews() {\n    if (this.spectate) return;\n\n    let our_ship = this.ships.main, our_team;\n    if (our_ship) our_team = our_ship.owner.team;\n\n    this.ships.forEach((ship) => {\n      if (ship.owner.team == our_team && ship != our_ship) {\n        let textView = ship.view.text,\n            offset = V2D.new({angle: our_ship.angle, length: 30});\n        textView.x = offset.x\n        textView.y = offset.y\n        textView.rotation = Math.degrees(our_ship.angle + Math.PI/2)\n      }\n    });\n\n  }\n\n  updateBulletViews() {\n    var views = this.view.bullets;\n    this.model.bullets.forEach(b => {\n      let v = views.get(b.id);\n      if(this.camera.showing(b)) {\n        if(!v) v = this.createBulletView(b)\n        v.x = b.position.x;\n        v.y = b.position.y;\n      } else {\n        if(v) this.destroyBulletView(b.id);\n      }\n    });\n  }\n\n  updateBlockViews() {\n    var views = this.view.blocks;\n    this.model.blocks.forEach(b => {\n      var v = views.get(b.id);\n\n      if(this.camera.showing(b)) {\n        if(!v) v = this.createBlockView(b)\n        v.alpha = (b.health * 0.9 + 0.1);\n        v.x = b.position.x;\n        v.y = b.position.y;\n        v.scaleX = v.scaleY = (b.radius / Block.stats.MAX_RADIUS) * b.scale;\n        if (b.qualified) {\n          let type = b.isForeign ? 'enemy' : 'locked';\n          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\n        }\n      } else {\n        if(v) this.destroyBlockView(b.id);\n      }\n\n    });\n  }\n\n  updateSubViews() {\n    var views = this.view.subs;\n    this.model.subs.forEach(s => {\n      var v = views.get(s.id);\n      if (v && (v.visible = this.camera.showing(s))) {\n        v.x = s.position.x;\n        v.y = s.position.y;\n        v.rotation = Math.degrees(s.rotation);\n      }\n    });\n  }\n\n  updateCamera() {\n    this.camera.update();\n    // if(camera.position)\n  }\n\n  updateBackground() {\n    \n    const background = this.view.layer.background.map_background;\n    const map_width = this.mapInfo.width;\n    const map_height = this.mapInfo.height;\n    const half_window_width = this.window.width/2;\n    const half_window_height = this.window.height/2;\n    const half_background_width = background.cacheCanvas.width / 2;\n    const half_background_height = background.cacheCanvas.height / 2;\n    let backgroundPositionVector = V2D.new(this.camera.focus);\n    const centerOffset = V2D.new({x: this.camera.offset.x - half_window_width, y: this.camera.offset.y - half_window_height});\n\n    centerOffset.div(this.scale)\n    centerOffset.angle = Math.radians(this.camera.focus.ship.rotation);\n    backgroundPositionVector.add(centerOffset);\n\n    // edges\n    if (backgroundPositionVector.x < half_background_width) backgroundPositionVector.x = half_background_width;\n    if (backgroundPositionVector.y < half_background_height) backgroundPositionVector.y = half_background_height;\n\n\n    if (backgroundPositionVector.x > map_width - half_background_width) backgroundPositionVector.x = map_width - half_background_width;\n    if (backgroundPositionVector.y > map_height - half_background_height) backgroundPositionVector.y = map_height - half_background_height;\n\n\n    background.x = backgroundPositionVector.x;\n    background.y = backgroundPositionVector.y;\n\n    background.rotation = - 90;\n\n\n\n\n    // let background = this.view.layer.background.map_background,\n    //     full_map_width = this.mapInfo.width,\n    //     full_map_height = this.mapInfo.height,\n    //     {x, y} = this.camera.focus,\n    //     half_window_width = this.window.width/2,\n    //     half_window_height = this.window.height/2;\n    //\n    // if(x < half_window_width) background.x = half_window_width - x;\n    // if(x > (full_map_width - half_window_width)) background.x = full_map_width - half_window_width - x;\n    //\n    // if(y < half_window_height) background.y = half_window_height - y;\n    // if(y > (full_map_height - half_window_height)) background.y = full_map_height - half_window_height - y;\n  }\n\n  updateMap() {\n    this.teams.forEach(team => {\n      team.spawn_camp.view.visible = this.camera.showing(team.spawn_camp);\n    })\n\n    this.model.map.impermeables.forEach((imp, i) => {\n      this.view.map.impermeables[i].visible = this.camera.showing(imp);\n    });\n\n  }\n\n  updateTINT() {\n    try {\n      if (TINT) TINT.setAngleOffset(-this.camera.focus.ship.rotation)\n    } catch (e) {\n      log('tint load failed')\n    }\n  }\n\n  updateGrid() {\n    var focus = this.camera.focus;\n    if (focus) GRID.offset(-focus.x, -focus.y)\n  }\n\n  updateGameViews() {\n\n    const list = this.calculateTeamScoreAppearance();\n\n    this.view.overlay.score.team.forEach((text, i) => {\n      text.text = this.game.scores[i];\n      // text.scaleX = text.scaleY = (this.teams[i] == this.game.lead ? 1 : 0.86);\n\n      if(this.gameMode == 0) // todo FIX --     export logic to another function to know which is larger\n        text.scaleX = text.scaleY = (list[i] ? 1 : 0.86);\n    })\n\n    if(this.gameMode == 0)\n      this.updateFlagView();\n\n  }\n\n  calculateTeamScoreAppearance() {\n\n    const list = [];\n\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        for(let team of this.teams)\n          list.push(team.players.map(p => p.id).indexOf(this.game.flag.holderID) != -1)\n\n        break;\n\n      case 1: // territory\n\n        const bestScore = _(this.game.scores).max();\n        _(this.game.scores).each(score => list.push(score == bestScore))\n\n        break;\n\n    }\n\n    return list;\n  }\n\n  updateFlagView() {\n    var v = this.view.flag, flag = this.game.flag;\n\n    var not_visible = false;\n    let newPosition = new V2D(flag.position.x - this.camera.plane.regX, flag.position.y - this.camera.plane.regY)\n    newPosition.angle -= Math.radians(this.camera.focus.ship.rotation + 90)\n    newPosition.mul(this.scale)\n    newPosition.add({x: this.camera.plane.x, y: this.camera.plane.y})\n    v.x = newPosition.x;\n    v.y = newPosition.y;\n    var padding = (flag.radius * 2)\n    if (v.x < padding) {\n      v.x = padding;\n      not_visible = true;\n    }\n    if (v.x > this.window.width - padding) {\n      v.x = this.window.width - padding;\n      not_visible = true;\n    }\n    if (v.y < padding) {\n      v.y = padding;\n      not_visible = true;\n    }\n    if (v.y > this.window.height - padding) {\n      v.y = this.window.height - padding;\n      not_visible = true;\n    }\n\n    v.alpha = not_visible ? 0.3 : (flag.idle ? 1 : 0);\n\n\n    // var v = this.view.flag, flag = this.game.flag;\n    //\n    // var not_visible = false;\n    // v.x = flag.position.x + this.camera.plane.x;\n    // v.y = flag.position.y + this.camera.plane.y;\n    // var padding = (flag.radius * 2)\n    // if(v.x < padding) { v.x = padding; not_visible = true; }\n    // if(v.x > this.window.width - padding) { v.x = this.window.width - padding; not_visible = true; }\n    // if(v.y < padding) { v.y = padding; not_visible = true; }\n    // if(v.y > this.window.height - padding) { v.y = this.window.height - padding; not_visible = true; }\n    //\n    // v.alpha = not_visible ? 0.1 : (flag.idle ? 1 : 0);\n  }\n\n  updateMinimapView() {\n    let mini = this.view.overlay.minimap;\n\n    // ships\n    this.team.players.forEach((player, i) => {\n      mini.players[i].x = player.ship.position.x * mini.scale;\n      mini.players[i].y = player.ship.position.y * mini.scale;\n    })\n\n\n    // flag\n    if(this.gameMode == 0) {\n      let flag = this.game.flag;\n      mini.flag.x = flag.position.x * mini.scale;\n      mini.flag.y = flag.position.y * mini.scale;\n    }\n\n  }\n\n  updateCameraFocus() {\n    this.camera.focus = this.activePlayers[this.activePlayerIndex].ship.view;\n  }\n\n  log() {\n    // var input = this.ships.main.owner.input;\n    // var ship = this.ships.main;\n    // $('#log').text(`forward: ${input.get('forward')}, turn: ${input.get('turn')}, shoot: ${input.get('shoot')}, block: ${input.get('block')}, `)\n//     $('#log').text(\n// `    x: ${ship.position.x.round(2)}\n//     y: ${ship.position.y.round(2)}\n// angle: ${ship.angle.round(2)}`\n//     );\n\n    // FPS\n    // this.last = this.last || [];\n    // this.last.push(1/this.dt)\n    // if(this.last.length > 10) this.last.shift();\n    // $('#log').text(`fps ${Math.round(this.last.average())}`);\n  }\n\n\n  // end vs stop: end happens when the local game appears to conclude; interaction with the game is stopped\n  // and the state might even be obstructed from view though the simluation continues;\n\n  disableInteraction() {\n    this.game.disabled = true;\n    if (this.player) this.resetInput();\n    this.deinitListeners();\n    this.timer.cancel();\n  }\n\n  endSimulation() {\n    this.game.ended = true;\n    // SoundHelper.stop();\n  }\n\n  timerExpire() {\n\n    // let server know TODO this should not lie here like this..\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        const team = this.player.team.number;\n        const score = this.game.scores[team];\n        this.network.sendFlagProgress([team, score]);\n\n        break;\n\n    }\n\n    // LOBBY.disableGame();\n\n    // disconnect if no server response after 6s\n    setTimeout(() => {\n      if (!(this.game.ended || this.game.overtime)) LOBBY.disconnect();\n    }, 6000);\n  }\n\n  takeOvertime() {\n    this.game.overtime = true;\n\n    // disconnect if no server response after 40s\n    setTimeout(() => {\n      if (!(this.game.ended)) LOBBY.disconnect();\n    }, TIME.sec(40)); // OVERTIME DURATION.. todo\n  }\n\n\n  end(results) {\n\n    // this.setScoreToResults(results);\n\n    this.game.ended = true;\n    this.disableInteraction();\n  }\n\n  setScoreToResults(results) {\n    // this.game.scores = results;\n  }\n\n  // *** NEW NETWORK STRUCTURE *** //\n\n  // ** SHIP ** //\n\n  damageShip(toID, hp, fromID) {\n\n    // interpret damage data\n    const data = [toID, hp, fromID];\n\n    // adjust locally (if possible)\n    this.adjustShipHP(data)\n\n    // send through network\n    this.network.sendAdjustShipHP(data);\n\n  }\n\n  adjustShipHP([toID, hp, fromID]) {\n\n    // health on a player can only be adjusted by own player\n    if(toID !== this.player.id) return;\n\n    // damage and send death if neccessary\n    if(this.player.ship.damage(hp))\n      this.processDeath([toID, fromID]);\n\n }\n\n  processDeath(data) {\n\n    // announce locally\n    this.deathOccurrence(data)\n\n    // send through network\n    this.network.sendDeathOccurrence(data);\n\n  }\n\n  deathOccurrence([toID, fromID]) {\n\n    const t = this.players.get(toID)\n    const g = this.players.get(fromID);\n\n    if (t) t.score.deaths++;\n    if (g) g.score.kills++;\n\n    if (this.spectate) return;\n    if (toID == this.player.id) {\n      const player = this.players.get(fromID);\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\n          player.name\n        )\n      );\n      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\n      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\n    } else if (fromID == this.player.id) {\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\n          this.players.get(toID).name\n        )\n      );\n    }\n\n  }\n\n  // ** PROJECTILES ** //\n\n  // * BULLETS * //\n\n  addBullet(ship) {\n    \n    // interpretation ship data for bullet creation\n    const data = this.generateBulletData(ship)\n\n    // actually create bullet object\n    this.createBullet(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateBullet(data)\n\n    // notify ship\n    ship.didShoot(data.id)\n\n  }\n\n  generateBulletData(ship) {\n\n    return ({\n      id: Math.uuid(),\n      creator: ship.owner.id,\n      team: ship.owner.team.number,\n      position: ship.shoot_position,\n      angle: ship.shoot_angle + ship.shot_RNG,\n      radius: ship.ATTACK_RADIUS,\n      hp: ship.ATTACK_HP,\n      lifespan: ship.ATTACK_LIFESPAN,\n      velocity: ship.velocity,\n      speed: ship.ATTACK_SPEED\n    });\n\n  }\n\n  createBullet(data) {\n\n    const b = new Bullet(data);\n\n    // set model map\n    this.model.bullets.set(b.id, b);\n\n    // collision groups\n    b.collision_groups = [this.physics.collision_groups.BULLETS];\n    b.collision_groups.push(this.teams[b.team] == this.team ? this.physics.collision_groups.OUR_BULLETS : this.physics.collision_groups.ENEMY_BULLETS);\n    if (!this.spectate && b.creator == this.player.id) b.collision_groups.push(this.physics.collision_groups.MY_BULLETS);\n\n  }\n\n  removeBullet(id) {\n\n    // remove local copy\n    this.destroyBullet(id)\n\n    // annouce bullet demise\n    this.network.sendDestroyBullet(id)\n\n  }\n\n  destroyBullet(id) {\n\n    var b = this.model.bullets.get(id);\n    if (!b) return;\n\n    this.clearCollisionDivisions(b);\n\n    this.model.bullets.delete(id);\n    if (!this.spectate) this.ships.main.bullets.delete(id);\n\n    // erase the view for it.\n    this.destroyBulletView(id);\n\n  }\n\n  // * BLOCKS * //\n\n  addBlock(ship) {\n\n    // interpretation ship data for block creation\n    const data = this.generateBlockData(ship)\n\n    // actually create block object\n    this.createBlock(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateBlock(data)\n\n    // notify ship\n    ship.didBlock(data.id)\n\n  }\n\n  generateBlockData(ship) {\n    return ({\n      id: Math.uuid(),\n      creator: ship.owner.id,\n      team: ship.owner.team.number,\n      position: ship.front_weapon_position,\n      angle: (ship.angle) + ((ship.BLOCK_SPREAD / 2) * ((Math.random()*2) - 1)),\n      hp: ship.BLOCK_HP_CAPACITY,\n      // radius: Math.randomIntMinMax(Block.stats.MIN_RADIUS, Block.stats.MAX_RADIUS)\n      radius: Block.stats.MAX_RADIUS,\n      speed: Math.randomIntMinMax(Block.stats.MIN_SPEED, Block.stats.MAX_SPEED)\n    });\n\n  }\n\n  createBlock(data) {\n\n    var bl = new Block(data);\n\n    // misc..?\n    bl.isForeign = this.spectate || bl.team != this.team.number;\n\n    // set model map\n    this.model.blocks.set(bl.id, bl);\n\n    // collision groups\n    bl.collision_groups = [this.physics.collision_groups.REFUGE]\n    if (this.teams[bl.team] != this.team) {\n      bl.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\n    } else {\n      bl.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\n      bl.collision_groups.push(this.physics.collision_groups.OUR_BLOCKS)\n    }\n\n    // notify game\n    if(this.gameMode == 1) this.game.scores[data.team]++;\n\n  }\n\n  damageBlock(id, hp) {\n\n    // interpret damage data\n    const data = [id, hp];\n\n    // adjust locally\n    this.adjustBlockHP(data)\n\n    // send through network\n    this.network.sendAdjustBlockHP(data);\n\n  }\n\n  adjustBlockHP([id, hp]) {\n    const block = ENV.game.model.blocks.get(id);\n    if(block) block.damage(hp);\n  }\n\n  changeBlock(id, team) {\n\n    // interpret change data\n    const data = [id, team];\n\n    // adjust locally\n    this.setBlockTeam(data)\n    \n    // send through network\n    this.network.sendSetBlockTeam(data);\n\n  }\n\n  setBlockTeam([id, team]) {\n    // retrieve and store block\n    var b = this.model.blocks.get(id);\n    if (!b) return false;\n\n    // begin change if locked\n    if (b.locked) {\n\n      // skip if change is unnecessary\n      if (b.team != team) {\n\n        const oldTeam = b.team;\n\n        // assign new team\n        b.team = team;\n\n        // if not spectating add or remove from ref group\n        if (!this.spectate) {\n          if (b.team != this.team.number) {\n            this.refGroups.enemyBlocks.add(b);\n          } else {\n            this.refGroups.enemyBlocks.delete(b);\n          }\n        }\n\n        //\n        if (!this.spectate) {\n\n          this.ships.main.blocks.delete(id);\n\n        }\n\n        // replace and delete old view\n        var v = this.view.blocks.get(id);\n        if (v) {\n          let type = this.refGroups.enemyBlocks.has(b) ? 'enemy' : (b.locked ? 'locked' : 'unlocked');\n          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\n          // v.updateCache();\n        }\n\n        // collision groups\n        this.clearCollisionDivisions(b);\n        b.collision_groups = [this.physics.collision_groups.REFUGE]\n        if (this.teams[b.team] != this.team) {\n          b.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\n        } else {\n          b.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\n        }\n        this.setCollisionDivisions(b);\n\n        // notify game\n        if(this.gameMode == 1) {\n          this.game.scores[oldTeam]--;\n          this.game.scores[team]++;\n        }\n\n        \n      } // end if(b.team != team)\n    } // end if(!b.locked)\n\n\n  }\n\n  removeBlock(id) {\n\n    // remove local copy\n    this.destroyBlock(id)\n\n    // annouce blocks demise\n    this.network.sendDestroyBlock(id)\n\n  }\n\n  destroyBlock(id) {\n    var b = this.model.blocks.get(id);\n    if (!b) return false;\n\n    this.clearCollisionDivisions(b);\n\n    this.model.blocks.delete(id);\n    if (!this.spectate) this.ships.main.blocks.delete(id);\n\n    if (b.locked) this.refGroups.enemyBlocks.delete(b);\n\n    // erase the view for it.\n    this.destroyBlockView(id);\n    this.destroyOverlayMinimapBlockViewFor(id);\n\n    // notify game\n    if(this.gameMode == 1) this.game.scores[b.team]--;\n\n    return true;\n  }\n\n  // * SUBS * //\n\n  addSub(ship) {\n\n    // interpretation ship data for sub creation\n    const data = this.generateSubData(ship)\n\n    // actually create block object\n    this.createSub(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateSub(data)\n\n    // notify ship\n    ship.didSub(data.id)\n\n  }\n\n  generateSubData(ship) {\n    return ({\n      id: Math.uuid(),\n      type: ship.SUB_TYPE,\n      team: ship.owner.team.number,\n      player: ship.owner.id,\n      position: ship.front_weapon_position,\n      angle: ship.angle\n    });\n  }\n\n  createSub(data) {\n    var p;\n    switch (data.type) {\n      case 'attractor':\n        p = new Attractor(data)\n        break;\n      case 'repulsor':\n        p = new Repulsor(data)\n        break;\n      case 'block_bomb':\n        p = new BlockBomb(data)\n        break;\n      case 'stealth_cloak':\n        p = new StealthCloak(data)\n        break;\n      case 'missile':\n        p = new Missile(data)\n        break;\n      default:\n        break;\n    }\n\n    // create a view for it.\n    if (data.type != 'stealth_cloak') {\n      let graphics = DeepSpaceGame.graphics[data.type](this.teams[p.team].color);\n      var pv = new createjs.Shape(graphics);\n      pv.cache(-12, -12, 24, 24);\n      this.view.layer.action.back.addChild(pv);\n\n      this.view.subs.set(p.id, pv);\n\n      // if(this.camera.showing(p)) SoundHelper.fireSub(); // no sound for stealth\n\n      p.collision_groups = (this.teams[p.team] == this.team) ? [this.physics.collision_groups.OUR_PROJ_SUBS] : [];\n    }\n\n    this.model.subs.set(p.id, p);\n\n    if (!this.spectate) if (p.team != this.ships.main.owner.team.number) this.refGroups.enemySubs.add(p.id);\n\n    return p;\n  }\n\n  removeSub(id) {\n\n    // remove local copy\n    this.destroySub(id)\n\n    // annouce blocks demise\n    this.network.sendDestroySub(id)\n\n  }\n\n  destroySub(id) {\n    var p = this.model.subs.get(id);\n    if (!p) return false;\n\n    this.clearCollisionDivisions(p);\n\n    this.model.subs.delete(id);\n    if (!this.spectate) this.ships.main.subs.delete(id);\n\n    this.refGroups.enemySubs.delete(p.id);\n\n    // erase the view for it.\n    if (p.type != 'stealth_cloak') {\n      var v = this.view.subs.get(id);\n      if (v) {\n        this.view.subs.delete(id);\n        this.view.layer.action.back.removeChild(v);\n      }\n    }\n    return true;\n  }\n\n  // * GAME * //\n\n  // CTF //\n\n  assumeFlag(ship) {\n\n    // interpret for flag capture\n    const id = ship.owner.id\n\n    // capture flag locally\n    this.captureFlag(id)\n\n    // let other clients know\n    this.network.sendCaptureFlag(id)\n\n    // notify ship\n    ship.didPickupFlag()\n\n  }\n\n  captureFlag(id) {\n\n    // set flag and ship state\n    const player = this.players.get(id);\n    this.game.flag.holderID = id;\n    if(this.players.get(id)) this.players.get(id).ship.setFlag(this.game.flag);\n\n    // alert\n    var c = player.team.color, us = player.team == this.team;\n    // var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\n    this.alert(\n      DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\n        DeepSpaceGame.localizationStrings.colors[c][this.language]\n      )\n      , c);\n\n    // sound\n    // us ? SoundHelper.teamYay() : SoundHelper.teamNay();\n\n    // this.updateFlagView();\n\n  }\n\n  releaseFlag() {\n\n    // capture flag locally\n    this.dropFlag()\n\n    // let other clients know\n    this.network.sendDropFlag()\n\n    // let server know\n    const team = this.player.team.number;\n    const score = this.game.scores[team];\n    this.network.sendFlagProgress([team, score]);\n\n  }\n\n  dropFlag() {\n\n    var id, flag = this.game.flag, ship = null;\n\n    if (id = flag.holderID) {\n      var player = this.players.get(flag.holderID)\n      if (ship = player.ship)\n        ship.clearFlag();\n\n      flag.reset();\n\n      var c = player.team.color, us = player.team == this.team;\n      var color = undefined;//us || this.spectate ? undefined : this.team.color;\n      this.alert(\n        DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\n          DeepSpaceGame.localizationStrings.colors[c][this.language]\n        )\n        , color);\n\n      // this.updateFlagView();\n    }\n\n  }\n\n  flagProgress([team, score]) {\n\n    // update local registry w/ server score\n    this.game.scores[team] = score;\n\n  }\n\n\n\n\n  // pickupFlag(playerID) { // flag activation needs to go through here\n  //   var flag = this.game.flag, ship = null;\n  //   // if(!flag.idle) NetworkHelper.out_flag_drop();\n  //   flag.holderID = playerID;\n  //\n  //   var player = this.players.get(flag.holderID);\n  //\n  //\n  //   if (ship = player.ship) {\n  //     ship.setFlag(flag);\n  //     if(this.game.overtime)\n  //       if(ship.owner.team == this.game.lead)\n  //         if(ship.owner.team == this.team)\n  //           this.network.out_game_over(this.team.number);\n  //   }\n  //\n  //\n  //\n  //   var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\n  //   this.alert(\n  //     DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\n  //       DeepSpaceGame.localizationStrings.colors[c][this.language]\n  //     )\n  //     , c);\n  //\n  //   // sound\n  //   us ? SoundHelper.teamYay() : SoundHelper.teamNay();\n  //\n  //   // this.updateFlagView();\n  // }\n\n  // dropFlag() {\n  //   var id, flag = this.game.flag, ship = null;\n  //   if (id = flag.holderID) {\n  //     var player = this.players.get(flag.holderID)\n  //     if (ship = player.ship)\n  //       ship.clearFlag();\n  //\n  //     flag.reset();\n  //\n  //     var c = player.team.color, us = player.team == this.team;\n  //     this.alert(\n  //       DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\n  //         DeepSpaceGame.localizationStrings.colors[c][this.language]\n  //       )\n  //       , us || this.spectate ? undefined : this.team.color);\n  //\n  //     // this.updateFlagView();\n  //   }\n  //\n  // }\n\n  \n\n  alert(msg, color = \"#ECEFF1\") {\n    clearTimeout(this.alertTimeout)\n    var v = this.view.overlay.message;\n    v.text = msg;\n    v.color = color;\n    if (msg.trim() !== '') this.alertTimeout = setTimeout(() => {\n      this.alert(\"\")\n    }, 4000)\n  }\n\n  alert_kill(msg, color = \"#ECEFF1\") {\n    clearTimeout(this.alertKillTimeout)\n    var v = this.view.overlay.kill_message;\n    v.text = msg;\n    v.color = color;\n    if (msg.trim() !== '') this.alertKillTimeout = setTimeout(() => {\n      this.alert_kill(\"\")\n    }, 4000)\n  }\n\n\n  msgShipKill(takerID, giverID) {//alert(`takerID ${takerID}, giverID ${giverID},`)\n    var t = this.players.get(takerID), g = this.players.get(giverID);\n    if (t) t.score.deaths++;\n    if (g) g.score.kills++;\n\n    if (this.spectate) return;\n    if (takerID == this.player.id) {\n      const player = this.players.get(giverID);\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\n          player.name\n        )\n      );\n      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\n      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\n    } else if (giverID == this.player.id) {\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\n          this.players.get(takerID).name\n        )\n      );\n    }\n  }\n\n\n\n  /* NEW DYNAMIC GRAPHICS */\n  // Size has grown. It is now ineffective to keep copies\n  // of views for all map objects and choose to render\n  // based on visibility. Views will be created and\n  // destroyed dynamically. This will hopefully have\n  // great performance benefits 09/17/17\n\n  createBulletView(b) {\n\n    const cache = DeepSpaceGame.graphicsCaches.bullets[b.team];\n    const bv = new createjs.Bitmap(cache);\n    bv.scaleX = bv.scaleY = b.radius / Bullet.stats.MAX_RADIUS;\n    bv.regX = bv.regY = (cache.width / 2);\n    this.view.layer.action.back.addChild(bv);\n\n    // set view map\n    this.view.bullets.set(b.id, bv);\n\n    return bv\n\n  }\n\n  destroyBulletView(id) {\n\n    const v = this.view.bullets.get(id);\n    if (v) {\n      this.view.bullets.delete(id);\n      this.view.layer.action.back.removeChild(v);\n    }\n\n  }\n\n  createBlockView(bl) {\n    \n    // a block can either look fluid or locked\n    // these being either ours or theirs\n\n    // create a view for it.\n    let type = 'unlocked';\n    if(bl.locked || bl.qualified) type = bl.isForeign ? 'enemy' : 'locked';\n    let cache = DeepSpaceGame.graphicsCaches.blocks[type][bl.team];\n    var blv = new createjs.Bitmap(cache);\n    blv.scaleX = blv.scaleY = bl.radius / Block.stats.MAX_RADIUS;\n    blv.regX = blv.regY = (cache.width / 2);\n    this.view.layer.action.back.addChild(blv);\n\n    // set view map\n    this.view.blocks.set(bl.id, blv);\n\n    return blv\n\n  }\n\n  destroyBlockView(id) {\n\n    const v = this.view.blocks.get(id);\n    if (v) {\n      this.view.blocks.delete(id);\n      this.view.layer.action.back.removeChild(v);\n    }\n\n  }\n\n  /* DEINITIALIZATION */\n\n  deinit() {\n    // it must go in reverse order\n    // as children of root objects will\n    // need to know what to get removed from\n    this.deinitCaches();\n    this.deinitPhysics();\n    this.deinitInput();\n    this.deinitListeners();\n    this.deinitCamera();\n    this.deinitView();\n    this.deinitGame();\n    this.deinitModel();\n\n    delete DeepSpaceGame.runningInstance;\n  }\n\n  deinitCaches() {\n    delete this.enemyTeams;\n    delete this.enemyPlayers;\n    delete this.player;\n    delete this.team;\n\n    delete DeepSpaceGame.graphicsCaches;\n  }\n\n  deinitPhysics() {\n    delete this.refGroups;\n  }\n\n  deinitInput() {\n    var main = this.ships.main;\n    if (main) delete main.owner.input;\n  }\n\n  deinitListeners() {\n    for (let [, handler] of this.inputHandlers) {\n      window.removeEventListener('keydown', handler); // onkeydown\n      window.removeEventListener('keyup', handler); // onkeyup\n    }\n  }\n\n  deinitCamera() {\n    delete this.camera;\n  }\n\n  deinitView() {\n    delete this.view;\n    delete this.window;\n    this.stage.removeAllChildren();\n    delete this.stage;\n    delete this.colors;\n  }\n\n  deinitGame() {\n    delete this.game;\n  }\n\n  deinitModel() {\n    delete this.ships;\n    delete this.players;\n    delete this.teams;\n  }\n\n  reset() {\n\n  }\n\n  resetInput() {\n    var input;\n    if (this.player) if (input = this.player.input) input.clear();\n  }\n\n  disconnectPlayer(id) {\n    var player = this.players.get(id);\n    if (player) {\n      player.disconnected = true;\n      player.ship.disabled = true;\n      if (this.spectate) this.activePlayers.delete(player);\n      \n      // alert team members\n      if (!this.spectate) {\n        if(player.team === this.team) this.alert(\n          DeepSpaceGame.localizationStrings.alerts['teamMemberDisconnects'][this.language](\n            player.name\n          )\n        )\n      }\n    } else {\n      log(`ERR in disconnectPlayer :: id(${id}) not found`)\n    }\n  }\n\n}\n\nDeepSpaceGame.graphics = {\n  circle_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n\n  spawn_camp: (color) => new createjs.Graphics().beginStroke(color).setStrokeStyle(6).drawCircle(0, 0, 64),\n  spawn_camp_fill: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 64),\n  // spawn_camp: () => new createjs.Graphics().beginStroke(\"#37474F\").setStrokeStyle(4).drawCircle(0, 0, 64),\n  ship: [\n    // 0 \"standard\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\n\n    // 1 \"rate\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8)],\n\n    // 2 \"speed\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\n\n    // 3 \"defense\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4)],\n\n    // 4 \"damage\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8)],\n\n  ],\n  particle: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(4).drawCircle(0, 0, size),\n  // bullet: (color) => DeepSpaceGame.graphics.particle(color)\n  // block: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n  block_border: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(2).drawCircle(0, 0, size),\n  block_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n  block_center: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 2),\n\n  attractor: color => new createjs.Graphics().beginFill(color).moveTo(2, 2).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, 2).lineTo(-8, 2).lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\n  repulsor: color => new createjs.Graphics().beginFill(color).moveTo(2, -8).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, -8).lineTo(2, -8),//.lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\n  block_bomb: color => new createjs.Graphics().beginFill(color).moveTo(-10, 0).arcTo(-10, -10, 0, -10, 10).lineTo(0, 10).arcTo(-9, 9, -10, 0, 10),\n  missile: color => new createjs.Graphics().beginFill(color).moveTo(6, 0).lineTo(-6, -6).lineTo(-6, 6).lineTo(6, 0),\n\n\n  ring: r => new createjs.Graphics().beginStroke(\"#ECEFF1\").setStrokeStyle(16).drawCircle(0, 0, r),\n  flag: r => new createjs.Graphics().beginFill(\"#ECEFF1\").drawCircle(0, 0, r),\n  flag_shadow: () => new createjs.Shadow(\"#ECEFF1\", 0, 0, 10),\n\n  energyMeter: (color, percent, scale, radius = 5) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius/scale, (-Math.PI / 2), (2 * Math.PI * percent) - (Math.PI / 2)),\n  energyMeterShadow: (color, scale, radius = 7) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius/scale, 0, 2 * Math.PI)\n};\n\nDeepSpaceGame.renderingParameters = {\n  'bulletCount': 100,\n  'shipThrustParticleCount': 80\n}\n\nDeepSpaceGame.localizationStrings = {\n  alerts: {\n    enemyTakesFlag: {\n      en: (color) => `The ${color} team has the moon!`\n    },\n    teamTakesFlag: {\n      en: () => `We have the moon!`\n    },\n    enemyDropsFlag: {\n      en: (color) => `The ${color} team dropped the moon!`\n    },\n    teamDropsFlag: {\n      en: () => `We dropped the moon!`\n    },\n    yourKill: {\n      en: (name) => `you got ${name}`\n    },\n    yourDeath: {\n      en: (name) => `${name} got you!`\n    },\n    teamTakesLead: {\n      en: () => `We took the lead!`\n    },\n    teamLosesLead: {\n      en: () => `We lost the lead!`\n    },\n    teamMemberDisconnects: {\n      en: (name) => `Your teammate ${name} has disconnected`\n    }\n  },\n  colors: {\n    '#FF4081': {\n      en: `pink`\n    },\n    '#FF5252': {\n      en: `red`\n    },\n    '#FFEA00': {\n      en: `yellow`\n    },\n    '#00E676': {\n      en: `green`\n    },\n    '#00B0FF': {\n      en: `blue`\n    },\n    '#BB33FF': {\n      en: `purple`\n    },\n    '#ECEFF1': {\n      en: `white`\n    },\n    '#90A4AE': {\n      en: `light`\n    },\n    '#37474F': {\n      en: `dark`\n    },\n    '#263238': {\n      en: `black`\n    },\n\n\n    '#FFA33F': {\n      en: `orange`\n    }, // 10 orange\n    '#82E600': {\n      en: `lime`\n    }, // 11 grass\n    '#00FFE2': {\n      en: `aqua`\n    }, // 12 aqua\n    '#F93FFF': {\n      en: `magenta`\n    }, // 13 magenta\n  }\n}\n\n// DeepSpaceGame.colorNames = [\n//   '#FF4081': `pink`,\n//   '#FF5252': `red`,\n//   '#FFEA00': `yellow`,\n//   '#00E676': `green`,\n//   '#00B0FF': `blue`,\n//   '#AA00FF': `purple`,\n//   '#ECEFF1': `white`,\n//   '#90A4AE': `light`,\n//   '#37474F': `dark`,\n//   '#263238': `black`\n// ];\n\n// DeepSpaceGame.colorNames = [\n//   '#FF4081', // 0 pink\n//   '#FF5252', // 1 red\n//   '#FFEA00', // 2 yellow\n//   '#00E676', // 3 green\n//   '#00B0FF', // 4 blue\n//   '#AA00FF', // 5 purple\n//   '#ECEFF1', // 6 white\n//   '#90A4AE', // 7 light\n//   '#37474F', // 8 dark\n//   '#263238'  // 9 black\n// ];\n//\n// DeepSpaceGame.colorCombinations = new Map([2, [\n//   [1, 4], // red, blue\n//   [1, 2], // red, yellow\n//   [5, 2], // purple, yellow\n//   [2, 4], // yellow, blue\n//   [2, 0], // yellow, pink\n//   [0, 4], // pink, blue\n//   [4, 3]  // blue, green\n// ]],\n// [3,[\n//\n// ]]\n// );\n\nDeepSpaceGame.colors = [\n  '#FF4081', // 0 pink\n  '#FF5252', // 1 red\n  '#FFEA00', // 2 yellow\n  '#00E676', // 3 green\n  '#00B0FF', // 4 blue\n  '#BB33FF', // 5 purple AA00FF old\n  '#ECEFF1', // 6 white\n  '#90A4AE', // 7 light\n  '#37474F', // 8 dark\n  '#263238', // 9 black\n\n  // added colors\n  '#FFA33F', // 10 orange\n  '#82E600', // 11 grass\n  '#00FFE2', // 12 aqua\n  '#F93FFF', // 13 bubble gum\n];\n\nDeepSpaceGame.maps = [\n  {\n    name: \"The Event Horizon\",\n    width: 1920, height: 1920,\n    // width: 1024, height: 1024,\n    spawn: [\n      [{x: 30, y: 30}, {x: 30, y: 60}, {x: 60, y: 60}, {x: 60, y: 30}],\n      [{x: 450, y: 290}, {x: 450, y: 260}],\n      [{x: 450, y: 290}, {x: 450, y: 260}]\n    ]\n  }\n];\n\nDeepSpaceGame.maps = [\n  { // 0\n    name: \"Wide Sky\",\n    width: 3072 * 1, height: 3072 * 1,\n    teams: [2],\n\n    spawn: [\n      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\n\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n    ],\n    impermeables: {\n      copies: 4,\n      bodies: [\n        [32, // radius\n          [ 1192, 382 ],\n          [ 716, 414 ],\n          [ 1496, 87 ],\n          [ 1668, 441 ],\n          [ 1670, 849 ],\n          [ 869, 1320 ],\n          [ 276, 1270 ],\n          [ 1380, 681 ],\n          [ 344, 1228 ],\n          [ 632, 1022 ],\n          [ 427, 1256 ],\n          [ 728, 1150 ],\n          [ 140, 1096 ],\n          [ 76, 1146 ],\n          [ 716, 1064 ]\n        ],\n        [48,\n          [ 1332, 585 ],\n          [ 1021, 265 ],\n          [ 1224, 1006 ],\n          [ 520, 1308 ],\n          [ 812, 1006 ],\n          [ 536, 974 ]\n        ],\n        [64,\n          [ 408, 942 ],\n          [ 856, 878 ],\n          [ 684, 537 ],\n          [ 1160, 274 ],\n          [ 957, 761 ],\n          [ 840, 1210 ]\n        ],\n        [96,\n          [ 491, 169 ],\n          [ 860, 601 ],\n          [ 1338, 409 ]\n        ],\n        [128,\n          [1540, 569],\n        ]\n      ]\n    }\n  },\n  { // 0\n    name: \"Nautical\",\n    width: 3072 * 1, height: 3072 * 1,\n    teams: [2],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\n\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}]\n    ],\n    impermeables: {\n      copies: 4,\n      bodies: [\n        [32, // radius\n          [325, 764],\n          [989, 98],\n          [746, 898],\n          [1054, 1308],\n          [1179, 1260],\n          [1514, 1308],\n          [993, 1356],\n          [534, 1308],\n          [1546, 194],\n          [1488, 130],\n          [173, 1028],\n          [173, 892],\n          [470, 880],\n          [325, 764],\n          [667, 892]\n        ],\n        [48,\n          [1218, 274],\n          [1242, 786],\n          [618, 1260],\n          [1139, 1340],\n          [238, 960],\n          [794, 818]\n        ],\n        [64,\n          [1084, 475],\n          [422, 322],\n          [914, 784],\n          [1654, 546],\n          [1279, 1219],\n          [1423, 1228]\n        ],\n        [96,\n          [298, 539],\n          [967, 610]\n        ],\n        [128,\n          [831, 411]\n        ]\n      ]\n    }\n  },\n  /*{ // 1\n    name: \"Liftor\",\n    width: 1920, height: 1920,\n    teams: [2],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}]\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [929, 76],\n          [582, 128],\n          [696, 176],\n          [811, 226],\n          [173, 892],\n          [173, 1028]\n        ],\n        [48,\n          [1218, 274],\n          [1242, 786],\n          [238, 960]\n        ],\n        [64,\n          [1654, 546],\n          [637, 578]\n        ]\n      ]\n    }\n  },*/\n  {\n    name: \"Nebula\",\n    width: 3072, height: 3072,\n    teams: [2],\n    tint: [180, '#FFFFFF', '#000000', ],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [\n        {x: 1791, y: 160, rotation: Math.PI/2},\n        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\n      ],\n      [\n        {x: 1791, y: 160, rotation: Math.PI/2},\n        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\n      ],\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [ 456, 549 ],\n          [ 692, 1238 ],\n          [ 787, 1367 ],\n          [ 2013, 176 ],\n          [ 1199, 1175 ],\n          [ 555, 1731 ],\n          [ 1276, 1143 ],\n          [ 1507, 192 ],\n          [ 1587, 224 ],\n          [ 1443, 391 ],\n          [ 3030, 697 ],\n          [ 2609, 847 ],\n          [ 1727, 920 ],\n          [ 1911, 643 ],\n          [ 898, 1303 ],\n          [ 1078, 1358 ],\n          [ 1503, 1341 ],\n          [ 1575, 1316 ],\n          [ 1639, 1358 ],\n          [ 2798, 859 ]\n        ],\n        [48,\n          [898,1207],[510,1183],[1110,1206],[1343,1214],[1459,274],[2888,863]\n        ],\n        [64,\n          [1372,1079],[1631,845],[946,1422],[1515,86],[1007,1278],[341,660],[2166,1047],[541,1348],[421,1271],[1395,160],[992,847],[566,537],[2449,560],[2936,751],[2699,909],[2077,86],[1497,811],[2417,697],[2737,258]\n        ],\n        [96,\n          [231,304],[330,485],[1355,911],[276,822],[820,879],[1853,845],[2045,920],[2221,1213],[2277,592]\n        ],\n        [128,\n          [2609,421],[385,1037],[641,724],[1267,334],[1215,613],[427,1519],[2149,278],[2289,857]\n        ]\n      ]\n    }\n  },\n  {\n    name: \"Clockwise\",\n    width: 2048, height: 2048,\n    teams: [2],\n    tint: [180, '#207272', '#000000', ],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [\n        {x: 1023, y: 119, rotation: Math.PI/2},\n        {x: 2048 - 1023, y: 2048 - 119, rotation: -Math.PI/2},\n      ],\n      [\n        {x: 1023, y: 119, rotation: Math.PI/2},\n        {x: 2048 - 1023, y: 2048 - 119, rotation: -Math.PI/2},\n      ],\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [557,1059],[509,1367],[1000,876],[1077,844],[678,1420],[1897,192],[1977,224],[1162,344],[589,173],[1613,398],[1367,299],[1439,274],[1485,211]\n        ],\n        [48,\n          [589,77],[481,1009],[587,1415],[911,907],[1144,915],[941,372],[745,1491]\n        ],\n        [64,\n          [278,205],[541,748],[635,276],[1865,86],[507,521],[826,661],[370,1091],[420,1312],[317,1219],[1056,320],[1266,332],[497,883],[1549,302]\n        ],\n        [96,\n          [806,292],[656,617],[118,662]\n        ],\n      ]\n    }\n  },\n];\n\nDeepSpaceGame.spawn_structure = [\n  [{x: 0, y: 0}], // 1 player\n  [{x: 18, y: 0}, {x: -18, y: 0}], // 2\n  [{x: 26, y: 0}, {x: -13, y: 22}, {x: -13, y: -22}], // 3\n  [{x: 34, y: 0}, {x: 0, y: 34}, {x: -34, y: 0}, {x: 0, y: -34}], //4\n  [{x: 34, y: 0}, {x: 10, y: 32}, {x: -28, y: 20}, {x: -28, y: -20}, {x: 10, y: -32}], // 5\n  [{x: 34, y: 0}, {x: 17, y: 30}, {x: -17, y: 30}, {x: -34, y: 0}, {x: -17, y: -30}, {x: 17, y: -30}] // 6\n]\n\nDeepSpaceGame.modes = {\n  ctf: { // capture the flag\n    ring_radius: 720,\n    flag_radius: 18,\n    time_limit: FRAMES.mins(3)\n  }\n};\n"]}