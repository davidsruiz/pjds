{"version":3,"sources":["../js/deepspace.js"],"names":["DeepSpaceGame","data","network","interpret","setup","loop","timer","start","timerExpire","spectate","ENV","isHost","host","mapInfo","maps","options","map","gameMode","mode","game","language","Timer","duration","TIME","sec","TINT","tint","load","colors","e","log","setupData","setupPhysics","setupModel","setupView","setupListeners","setupLoop","setupReferences","setupTeams","setupPlayers","setupShips","setupBubbles","setupObjectPools","setupGame","setupMap","teams","teamCount","length","times","i","push","Team","setupSpawnCamps","forEach","team","spawn_camp","position","V2D","new","spawn","number","radius","players","Map","playerIndex","id","name","type","createPlayer","ships","player","ship","localIDMatches","Ship","isMain","main","BasicShip","our_ship","owner","target","bubbleClass","Bubble","SimpleBubble","bubble","bubbleCore","BubbleCore","model","bullets","blocks","subs","disabled","ended","overtime","scores","Array","centerX","width","centerY","height","flag","Flag","collision_groups","physics","FLAG","setCollisionDivisions","fill","max","Physics","distance","x","y","lead","undefined","info","cX","cY","initial_impermeables","radii","Set","impermeables","bodies","radius_size_group","list","slice","shift","add","copies","obj","imp","IMPERMEABLES","setupPalette","configureCreateJS","configureProton","setupCamera","setupCanvas","createViews","canvas","$","document","body","clientWidth","clientHeight","scale","Math","sqrt","stage","createjs","StageGL","snapToPixel","HDPSupport","HDPScale","window","devicePixelRatio","getAttribute","setAttribute","round","style","scaleX","scaleY","view","grid","createLayers","createBackgroundViews","createGameModeSpecificViewsAction","createSpawnCampViews","createBubbleViews","createShipViews","createPoolViews","createOverlayViews","layer","background","Container","action","overlay","back","front","addChild","canvasBackground","Shape","mapBackground","graphics","beginFill","drawRect","cache","background_width","background_height","hypotenuse","sqr","regX","regY","map_background","caches","block_fill","r","s","set","cacheCanvas","Bitmap","get","block","pos","group","camp","color","spawn_camp_fill","alpha","maxRadius","stats","OUTER_RADIUS","innerCircleScale","INNER_RADIUS","bubbles","teamColor","container","handle","RADIUS","circle_fill","fullRange","growingCircle","growingCircleEdge","circle_edge","c1","c2","c3","fullRangeBitmap","growingCircleBitmap","growingCircleEdgeBitmap","views","our_team","hollow","filled","text","Text","textAlign","innerRadius","outerRadius","meter","energyMeter","shadow","energyMeterShadow","offset","meter_shadow","score","imagined_width","toString","Shadow","createOverlayMinimapViews","message","kill_message","modes","flag_radius","flag_shadow","overlay_model","overlay_view","mini","minimap","relativeScale","rotation","degrees","spawnRotation","padd","this_player","maxR","playerBubbles","bubbleContainer","bubbleEdge","bubbleFill","flag_view","this_team","miniShipRadii","graphicsCaches","blv","setChildIndex","v","delete","removeChild","bitmapOfColor","particle","proton","Proton","renderer","Renderer","emitters","imageTargets","death","ImageTarget","stars","starTeams","util","hasInitializer","emitter","initializer","initializes","indexOf","local","Emitter","bitmap","rate","Rate","addInitialize","Life","force","V","Span","addBehaviour","Scale","Alpha","emit","addEmitter","starEmitter","zone","P","CircleZone","camera","Camera","activePlayerIndex","activePlayers","p","updateCameraFocus","focus","inputHandlers","receiver","keyHandler","keyCode","addEventListener","inputs","input","acceleration","angularAcceleration","angularVelocity","shoot","shootAngle","sub","keyboard","KeyboardInput","keyboardStack","InputStack","stack","keymap","item","mappings","keycode","addItemWhen","button","ontrue","removeItemWhen","onfalse","on","flattenStack","buttonWeight","x2","y2","items","value","noValue","directionV","angle","flatten","gamepad","GamepadInput","deadzone","diff","axis","onlessthan","n","onmorethan","mobile","MobileInput","left","querySelector","rightTop","rightBottom","deadzone1","max1","diff1","maxExtended","createButton","createVerticalAxis","raw_acc_data","applied_acc_data","threshold","bias","minThreshhold","maxThreshhold","thresholdSpan","storage","calibration","split","Number","DeviceMotionEvent","ondevicemotion","accelerationIncludingGravity","updateMotion","orientation","raw_x","raw_y","invertControls","setupCollisionSystem","assignCollisionPatterns","setupReferenceGroups","block_size","world_size","rows","ceil","cols","divisions","division_index","division_coordinates","floor","collision_checks","SHIPS","Symbol","OUR_SHIP","OUR_SHIPS","ENEMY_SHIPS","BULLETS","MY_BULLETS","OUR_BULLETS","ENEMY_BULLETS","BLOCKS","OUR_BLOCKS","ENEMY_BLOCKS","BUBBLES","MY_BUBBLE","MY_BUBBLE_CORE","OUR_BUBBLES","ENEMY_BUBBLES","OUR_PROJ_SUBS","SPAWN_CAMPS","OUR_SPAWN_CAMP","ENEMY_SPAWN_CAMPS","REFUGE","OUR_REFUGE","Object","keys","physics_body","clearCollisionDivisions","check_x","unit_offset_array","check_y","division_x","division_y","d","checks","groups","bullet","damageShip","hp","creator","removeBullet","damageBlock","bulletA","bulletB","used","locked","complete","damageBubble","idle","canPickupFlag","assumeFlag","core","ready","resetDropCooldownCounter","canPickupBubble","growing","explode","removeSub","block_a","block_b","overlap","removeBlock","refuge","charging","bounce","bubbleA","bubbleB","refGroups","enemyBlocks","enemySubs","animate","FPS","getAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","setupDT","last_time","Date","getTime","dt","now","setupShortcutsToCommonCalls","setupFinishCollisionAssignment","setupGraphicsCaches","enemyTeams","filter","enemyPlayers","reduce","concat","spawn_c","setupCommonGraphicsCachePool","gc","Bullet","MAX_RADIUS","c","unlocked","enemy","Block","border","block_border","COLOR","mix","updateDT","update","over","updateInput","updateModel","checkForCollisions","updateGame","updateView","updateShips","broadcastShip","updateBullets","updateBlocks","updateSubs","updateBubble","LINEAR_ACCELERATION_LIMIT","angular_acceleration","ANGULAR_ACCELERATION_LIMIT","relative_shoot_angle","angular_velocity","ANGULAR_VELOCITY_LIMIT_MIN","canShoot","addBullet","canBlock","reachedBlockLimit","oldestBlockID","addBlock","releaseFlag","canSub","addSub","velocity","changed","sendShipUpdate","export_update","sendShipOverride","export_override","b","qualified","snapToGrid","createOverlayMinimapBlockViewFor","direction","RANGE","copy","INTENSITY_FUNCTION","PI","exploding","has","disconnected","EXPLOSION_RANGE","EXPLOSION_DAMAGE_FUNCTION","destroySub","VISION_RANGE","stealth","changeBlock","div","a_type","b_type","check","body_a","body_b","doTouch","holderID","last_known_position","teamProgresses","progress","percent","_","memo","num","high_score","current_score","sendFlagProgress","alert","localizationStrings","alerts","updateShipViews","updateBubbleViews","updateBulletViews","updateBlockViews","updateSubViews","updateCamera","updateBackground","updateMap","updateGameViews","updateMinimapView","updateProton","isVisible","visible","showing","shipIsVisible","visibility","flipCoin","ship_view","health","image","updateEnergyMeterView","updateNameViews","meterView","shadowView","energy","updateCache","textView","bubbleViews","bubbleVisible","createBulletView","destroyBulletView","createBlockView","isForeign","destroyBlockView","map_width","map_height","half_window_width","half_window_height","half_background_width","half_background_height","backgroundPositionVector","centerOffset","radians","setAngleOffset","GRID","calculateTeamScoreAppearance","updateFlagView","bestScore","each","not_visible","newPosition","plane","mul","padding","timingFunction","BezierEasing","slowest","fastest","defaultMinAngle","defaultMaxAngle","removeInitialize","LINEAR_VELOCITY_LIMIT","LINEAR_VELOCITY_LIMIT_EXTENDED","amount","back_weapon_position","minAngle","maxAngle","timePan","a","numPan","thaPan","flagHolder","starTarget","teamStarTarget","resetInput","deinitListeners","cancel","LOBBY","disconnect","results","disableInteraction","toID","fromID","adjustShipHP","sendAdjustShipHP","damage","processDeath","deathOccurrence","sendDeathOccurrence","t","g","deaths","kills","alert_kill","animateFocus","adjustBubbleHP","sendAdjustBubbleHP","generateBulletData","createBullet","sendCreateBullet","didShoot","uuid","shoot_position","shoot_angle","shot_RNG","ATTACK_RADIUS","ATTACK_HP","lifespan","ATTACK_LIFESPAN","speed","ATTACK_SPEED","destroyBullet","sendDestroyBullet","generateBlockData","createBlock","sendCreateBlock","didBlock","front_weapon_position","BLOCK_SPREAD","random","BLOCK_HP_CAPACITY","randomIntMinMax","MIN_SPEED","MAX_SPEED","bl","adjustBlockHP","sendAdjustBlockHP","setBlockTeam","sendSetBlockTeam","oldTeam","destroyBlock","sendDestroyBlock","destroyOverlayMinimapBlockViewFor","generateSubData","createSub","sendCreateSub","didSub","SUB_TYPE","Attractor","Repulsor","BlockBomb","StealthCloak","Missile","pv","sendDestroySub","captureFlag","sendCaptureFlag","didPickupFlag","setFlag","us","dropFlag","sendDropFlag","console","clearFlag","reset","msg","clearTimeout","alertTimeout","trim","alertKillTimeout","takerID","giverID","bv","deinitCaches","deinitPhysics","deinitInput","deinitCamera","deinitView","deinitGame","deinitModel","runningInstance","handler","removeEventListener","removeAllChildren","clear","deinit","size","Graphics","drawCircle","thickness","beginStroke","setStrokeStyle","rect_fill","w","h","energy_bar_rect","moveTo","lineTo","block_center","attractor","repulsor","block_bomb","arcTo","missile","ring","arc","renderingParameters","enemyTakesFlag","en","teamTakesFlag","enemyDropsFlag","teamDropsFlag","yourKill","yourDeath","teamTakesLead","teamLosesLead","teamMemberDisconnects","spawn_structure","ctf","ring_radius","time_limit","FRAMES","mins"],"mappings":";;;;;;;;;;AAAA;;;IAGMA,a;;AAEJ;AACA;AACA;AACA;AACA;AACA,yBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AACzB,SAAKC,SAAL,CAAeF,IAAf,EAAqBC,OAArB;AACA,SAAKE,KAAL;AACA;AACD;;;;4BAOO;AAAA;;AACN,WAAKC,IAAL;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiB,YAAM;AACrB,cAAKC,WAAL;AACD,OAFD;AAGD;;;8BAESP,I,EAAMC,O,EAAS;AACvB;AACA;AACA,WAAKO,QAAL,GAAgBC,IAAID,QAApB;AACA,WAAKE,MAAL,GAAcV,KAAKW,IAAnB;AACA,WAAKC,OAAL,GAAeb,cAAcc,IAAd,CAAmBb,KAAKc,OAAL,CAAaC,GAAhC,CAAf;AACA,WAAKC,QAAL,GAAgBhB,KAAKc,OAAL,CAAaG,IAA7B;AACA,WAAKC,IAAL,GAAY,EAAZ;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKd,KAAL,GAAa,IAAIe,KAAJ,CAAUpB,KAAKqB,QAAL,GAAgBC,KAAKC,GAAL,CAAS,GAAT,CAA1B,CAAb;;AAEA,WAAKtB,OAAL,GAAeA,OAAf;AACA,WAAKA,OAAL,CAAaiB,IAAb,GAAoB,IAApB;;AAGA;AACA;;AAEA,UAAI;AACF;AACA,YAAIM,IAAJ,EAAU;AACR,cAAG,KAAKZ,OAAL,CAAaa,IAAhB,EAAsB;AAAA;;AAAE,2BAAKC,IAAL,iCAAa,KAAKd,OAAL,CAAaa,IAA1B;AAAiC,WAAzD,MACK;AAAA;;AAAE,4BAAKC,IAAL,kCAAa1B,KAAK2B,MAAL,CAAY,CAAZ,CAAb;AAA8B;AACtC;AACF,OAND,CAME,OAAOC,CAAP,EAAU;AACVC,YAAI,kBAAJ;AACD;;AAED;AACA,WAAKC,SAAL,GAAiB9B,IAAjB;AACD;;;4BAEO;AACN,WAAK+B,YAAL;AACA,WAAKC,UAAL;AACA,WAAKC,SAAL;AACA,WAAKC,cAAL;AACA,WAAKC,SAAL;AACA,WAAKC,eAAL;;AAEA;AACD;;;iCAEY;AACX,WAAKC,UAAL;AACA,WAAKC,YAAL;AACA,WAAKC,UAAL;AACA,WAAKC,YAAL;AACA,WAAKC,gBAAL;;AAEA,WAAKC,SAAL;AACA,WAAKC,QAAL;AACD;;;iCAEY;AAAA;;AACX,WAAKC,KAAL,GAAa,EAAb;AACA,UAAIC,YAAY,KAAKf,SAAL,CAAec,KAAf,CAAqBE,MAArC;AACAD,gBAAUE,KAAV,CAAgB,UAACC,CAAD,EAAO;AACrB,eAAKJ,KAAL,CAAWK,IAAX,CAAgB,IAAIC,IAAJ,CAAS,MAAT,EAAeF,CAAf,CAAhB;AACD,OAFD;;AAIA,WAAKG,eAAL;AACD;;;sCAEiB;AAAA;;AAChB,WAAKP,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzBC,aAAKC,UAAL,GAAkB;AAChBC,oBAAUC,IAAIC,GAAJ,CAAQ,OAAK7C,OAAL,CAAa8C,KAAb,CAAmBL,KAAKnC,IAAL,CAAU0B,KAAV,CAAgBE,MAAhB,GAAyB,CAA5C,EAA+CO,KAAKM,MAApD,CAAR,CADM;AAEhBC,kBAAQ,EAFQ;AAGhBP,gBAAMA,KAAKM;AAHK,SAAlB;AAKD,OAND;AAOD;;;mCAEc;AAAA;;AACb,WAAKE,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,WAAKlB,KAAL,CAAWQ,OAAX,CAAmB,UAACC,IAAD,EAAOL,CAAP,EAAa;AAC9B,eAAKlB,SAAL,CAAec,KAAf,CAAqBI,CAArB,EAAwBI,OAAxB,CAAgC,UAACW,WAAD,EAAe;AAAA,qDAChB,OAAKjC,SAAL,CAAe+B,OAAf,CAAuBE,WAAvB,CADgB;AAAA,cACxCC,EADwC;AAAA,cACpCC,IADoC;AAAA,cACxBC,IADwB;;AAE7Cb,eAAKc,YAAL,CAAkBH,EAAlB,EAAsBC,IAAtB,EAA4BC,IAA5B;AACD,SAHD;AAID,OALD;AAMD;;;iCAEY;AAAA;;AACX,WAAKE,KAAL,GAAa,EAAb;AACA,WAAKP,OAAL,CAAaT,OAAb,CAAqB,UAACiB,MAAD,EAAY;AAC/B,YAAIC,IAAJ;AACA,YAAIC,eAAeF,OAAOL,EAAtB,KAA6B,CAAC,OAAKxD,QAAvC,EAAiD;AAC/C8D,iBAAO,IAAIE,IAAJ,CAASH,MAAT,CAAP;AACAC,eAAKG,MAAL,GAAc,IAAd;AACA,iBAAKL,KAAL,CAAWM,IAAX,GAAkBJ,IAAlB;AACD,SAJD,MAIO;AACLA,iBAAO,IAAIK,SAAJ,CAAcN,MAAd,CAAP;AACD;AACD,eAAKD,KAAL,CAAWnB,IAAX,CAAgBqB,IAAhB;AACAD,eAAOC,IAAP,GAAcA,IAAd;AACD,OAXD;AAYD;;;mCAEc;AAAA;;AACb,WAAKF,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;AACzB,YAAMwB,WAAW,OAAKR,KAAL,CAAWM,IAAX,KAAoBJ,IAArC;AACA,YAAMtE,OAAO;AACXgE,cAAIM,KAAKO,KAAL,CAAWb,EADJ;AAEXX,gBAAMiB,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAFX;AAGXmB,kBAAQR;AAHG,SAAb;AAKA,YAAMS,cAAcH,WAAWI,MAAX,GAAoBC,YAAxC;AACAX,aAAKY,MAAL,GAAc,IAAIH,WAAJ,CAAgB/E,IAAhB,CAAd;AACA,YAAG4E,QAAH,EACEN,KAAKa,UAAL,GAAkB,IAAIC,UAAJ,CAAed,KAAKY,MAApB,CAAlB;AACH,OAXD;AAYD;;;uCAEkB;AACjB,UAAIG,QAAQ,EAAZ;AACAA,YAAMC,OAAN,GAAgB,IAAIxB,GAAJ,EAAhB;AACAuB,YAAME,MAAN,GAAe,IAAIzB,GAAJ,EAAf;AACAuB,YAAMG,IAAN,GAAa,IAAI1B,GAAJ,EAAb;;AAEA,WAAKuB,KAAL,GAAaA,KAAb;AACD;;;gCAEW;AACV,WAAKnE,IAAL,GAAY,EAAZ;AACA,WAAKA,IAAL,CAAUuE,QAAV,GAAqB,KAArB,CAFU,CAEkB;AAC5B,WAAKvE,IAAL,CAAUwE,KAAV,GAAkB,KAAlB,CAHU,CAGe;AACzB,WAAKxE,IAAL,CAAUyE,QAAV,GAAqB,KAArB,CAJU,CAIkB;;AAE5B,WAAKzE,IAAL,CAAU0E,MAAV,GAAmB,IAAIC,KAAJ,CAAU,KAAKjD,KAAL,CAAWE,MAArB,CAAnB;;AAEA;AACA,cAAQ,KAAK9B,QAAb;AACE,aAAK,CAAL;AAAQ;;AAEN;AACA,cAAI8E,UAAU,KAAKlF,OAAL,CAAamF,KAAb,GAAqB,CAAnC;AACA,cAAIC,UAAU,KAAKpF,OAAL,CAAaqF,MAAb,GAAsB,CAApC;AACA,cAAIC,OAAO,IAAIC,IAAJ,CAAS,IAAI3C,GAAJ,CAAQsC,OAAR,EAAiBE,OAAjB,CAAT,CAAX;AACAE,eAAKE,gBAAL,GAAwB,CAAC,KAAKC,OAAL,CAAaD,gBAAb,CAA8BE,IAA/B,CAAxB;AACA,eAAKC,qBAAL,CAA2BL,IAA3B;AACA,eAAKhF,IAAL,CAAUgF,IAAV,GAAiBA,IAAjB;;AAEA;AACA,eAAKhF,IAAL,CAAU0E,MAAV,CAAiBY,IAAjB,CAAsB,CAAtB;AACA,eAAKtF,IAAL,CAAUuF,GAAV,GAAgBC,QAAQC,QAAR,CAAiB,KAAK/D,KAAL,CAAW,CAAX,EAAcU,UAAd,CAAyBC,QAA1C,EAAoD,EAACqD,GAAGd,OAAJ,EAAae,GAAGb,OAAhB,EAApD,CAAhB;AACA,eAAK9E,IAAL,CAAU4F,IAAV,GAAiBC,SAAjB,CAbF,CAa8B;;AAE5B;AACA;AACA;;AAEA;;AAEF,aAAK,CAAL;;AAEE,eAAK7F,IAAL,CAAU0E,MAAV,CAAiBY,IAAjB,CAAsB,CAAtB;;AAEA;AA1BJ;AA4BD;;;+BAEU;AAAA;;AACT,UAAIzF,MAAM,KAAKsE,KAAL,CAAWtE,GAAX,GAAiB,EAA3B;AAAA,UACEiG,OAAO,KAAKpG,OADd;;AAGA,UAAIqG,KAAKD,KAAKjB,KAAL,GAAa,CAAtB;AAAA,UACEmB,KAAKF,KAAKf,MAAL,GAAc,CADrB;;AAIA;AACA,UAAIkB,uBAAuB,EAA3B;AAAA,UAA+BC,QAAQ,IAAIC,GAAJ,EAAvC;AATS;AAAA;AAAA;;AAAA;AAUT,6BAA8BL,KAAKM,YAAL,CAAkBC,MAAhD,8HAAwD;AAAA,cAA/CC,iBAA+C;;AACtD,cAAIC,OAAOD,kBAAkBE,KAAlB,EAAX;AAAA,cACE9D,SAAS6D,KAAKE,KAAL,EADX;AADsD;AAAA;AAAA;;AAAA;AAGtD,kCAAmBF,IAAnB,mIAAyB;AAAA;;AAAA;;AAAA,kBAAfb,CAAe;AAAA,kBAAZC,CAAY;;AACvBM,mCAAqBlE,IAArB,CAA0B;AACxBW,wBAAQA,MADgB;AAExBL,0BAAU,EAACqD,IAAD,EAAIC,IAAJ;AAFc,eAA1B;AAID;AARqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStDO,gBAAMQ,GAAN,CAAUhE,MAAV;AACD;AApBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBT7C,UAAIuG,YAAJ,GAAmB,EAAnB;AACAvG,UAAIuG,YAAJ,CAAiBF,KAAjB,GAAyBA,KAAzB;AACA;AACA;AACA,+BAAIE,YAAJ,EAAiBrE,IAAjB,0BAAyBkE,oBAAzB;AACA,UAAIH,KAAKM,YAAL,CAAkBO,MAAlB,IAA4B,CAAhC,EAAmC;AAAA;;AAEjC,kCAAIP,YAAJ,EAAiBrE,IAAjB,8CAA0BkE,qBAAqBpG,GAArB,CAAyB,eAAO;AACxD,iBAAO;AACL6C,oBAAQkE,IAAIlE,MADP;AAELL,sBAAU,EAACqD,GAAGI,KAAKjB,KAAL,GAAa+B,IAAIvE,QAAJ,CAAaqD,CAA9B,EAAiCC,GAAGG,KAAKjB,KAAL,GAAa+B,IAAIvE,QAAJ,CAAasD,CAA9D;AAFL,WAAP;AAID,SALyB,CAA1B;;AAOA,YAAIG,KAAKM,YAAL,CAAkBO,MAAlB,IAA4B,CAAhC,EAAmC;AAAA;;AAEjC,oCAAIP,YAAJ,EAAiBrE,IAAjB,8CAA0BkE,qBAAqBpG,GAArB,CAAyB,eAAO;AACxD,mBAAO;AACL6C,sBAAQkE,IAAIlE,MADP;AAELL,wBAAU,EAACqD,GAAGI,KAAKjB,KAAL,GAAa+B,IAAIvE,QAAJ,CAAasD,CAA9B,EAAiCA,GAAGiB,IAAIvE,QAAJ,CAAaqD,CAAjD;AAFL,aAAP;AAID,WALyB,CAA1B;;AAOA,oCAAIU,YAAJ,EAAiBrE,IAAjB,8CAA0BkE,qBAAqBpG,GAArB,CAAyB,eAAO;AACxD,mBAAO;AACL6C,sBAAQkE,IAAIlE,MADP;AAELL,wBAAU,EAACqD,GAAGkB,IAAIvE,QAAJ,CAAasD,CAAjB,EAAoBA,GAAGG,KAAKjB,KAAL,GAAa+B,IAAIvE,QAAJ,CAAaqD,CAAjD;AAFL,aAAP;AAID,WALyB,CAA1B;AAOD;AAEF;;AAtDQ;AAAA;AAAA;;AAAA;AAwDT,8BAAgB7F,IAAIuG,YAApB,mIAAkC;AAAA,cAAzBS,GAAyB;;AAChCA,cAAI3B,gBAAJ,GAAuB,CAAC,KAAKC,OAAL,CAAaD,gBAAb,CAA8B4B,YAA/B,CAAvB;AACA,eAAKzB,qBAAL,CAA2BwB,GAA3B;AACD;AA3DQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6DV;;;gCAEW;AACV,WAAKE,YAAL;AACA,WAAKC,iBAAL;AACA,WAAKC,eAAL;AACA,WAAKC,WAAL;AACD;;;mCAEc;AACb,WAAKzG,MAAL,GAAc,KAAKG,SAAL,CAAeH,MAA7B;AACD;;;wCAEmB;AAClB,WAAK0G,WAAL;AACA;AACA,WAAKC,WAAL;AACD;;;kCAEa;AAAE;AACd,UAAIC,SAASC,EAAE,SAAF,EAAa,CAAb,CAAb;AACAD,aAAOxC,KAAP,GAAe0C,SAASC,IAAT,CAAcC,WAA7B;AACAJ,aAAOtC,MAAP,GAAgBwC,SAASC,IAAT,CAAcE,YAA9B;AACA;AACA;;AAEA,WAAKC,KAAL,GAAaC,KAAKC,IAAL,CAAUR,OAAOxC,KAAP,GAAewC,OAAOtC,MAAhC,IAA0C6C,KAAKC,IAAL,CAAU,OAAO,GAAjB,CAAvD;AACA;;AAEA,UAAIC,QAAQ,IAAIC,SAASC,OAAb,CAAqBX,MAArB,CAAZ;AACA;AACAS,YAAMG,WAAN,GAAoB,IAApB;AACA;;AAEA,WAAKH,KAAL,GAAaA,KAAb;;AAEA,WAAKI,UAAL;AACD;;;iCAEY;AACX,WAAKC,QAAL,GAAgB,CAAhB,CAAmB,OADR,CACe;AAC1B,UAAIC,OAAOC,gBAAX,EAA6B;AAC3B,YAAMP,QAAQ,KAAKA,KAAnB;AACA,YAAMT,SAASS,MAAMT,MAArB;;AAEA;AACA,YAAItC,SAASsC,OAAOiB,YAAP,CAAoB,QAApB,CAAb;AACA,YAAIzD,QAAQwC,OAAOiB,YAAP,CAAoB,OAApB,CAAZ;AACA;AACAjB,eAAOkB,YAAP,CAAoB,OAApB,EAA6BX,KAAKY,KAAL,CAAW3D,QAAQuD,OAAOC,gBAA1B,CAA7B;AACAhB,eAAOkB,YAAP,CAAoB,QAApB,EAA8BX,KAAKY,KAAL,CAAYzD,SAASqD,OAAOC,gBAA5B,CAA9B;AACA;AACAhB,eAAOoB,KAAP,CAAa5D,KAAb,GAAqBA,QAAM,IAA3B;AACAwC,eAAOoB,KAAP,CAAa1D,MAAb,GAAsBA,SAAO,IAA7B;AACA;AACA+C,cAAMY,MAAN,GAAeZ,MAAMa,MAAN,GAAeP,OAAOC,gBAArC;AACA,aAAKF,QAAL,GAAgB,IAAEC,OAAOC,gBAAzB;AACD;AACF;;;kCAEa;AACZ,WAAKO,IAAL,GAAY;AACVC,cAAM,EAAChE,OAAO,GAAR,EAAaE,QAAQ,GAArB;AADI,OAAZ;AAGA,WAAKqD,MAAL,GAAc;AACZvD,eAAO,KAAKiD,KAAL,CAAWT,MAAX,CAAkBxC,KAAlB,GAA0B,KAAKsD,QAD1B;AAEZpD,gBAAQ,KAAK+C,KAAL,CAAWT,MAAX,CAAkBtC,MAAlB,GAA2B,KAAKoD;AAF5B,OAAd;;AAKA,WAAKW,YAAL;AACA,WAAKC,qBAAL;AACA,WAAKC,iCAAL;AACA,WAAKC,oBAAL;AACA,WAAKC,iBAAL;AACA,WAAKC,eAAL;AACA,WAAKC,eAAL;AACA,WAAKC,kBAAL;AACD;;;+BAEUhH,Q,EAAU;AACnBA,eAASqD,CAAT,GAAakC,KAAKY,KAAL,CAAWnG,SAASqD,CAAT,GAAa,KAAKkD,IAAL,CAAUC,IAAV,CAAehE,KAAvC,IAAgD,KAAK+D,IAAL,CAAUC,IAAV,CAAehE,KAA5E;AACAxC,eAASsD,CAAT,GAAaiC,KAAKY,KAAL,CAAWnG,SAASsD,CAAT,GAAa,KAAKiD,IAAL,CAAUC,IAAV,CAAe9D,MAAvC,IAAiD,KAAK6D,IAAL,CAAUC,IAAV,CAAe9D,MAA7E;AACD;;;mCAEc;AACb,UAAIuE,QAAQ,EAAZ;;AAEAA,YAAMC,UAAN,GAAmB,IAAIxB,SAASyB,SAAb,EAAnB;AACAF,YAAMG,MAAN,GAAe,IAAI1B,SAASyB,SAAb,EAAf;AACAF,YAAMI,OAAN,GAAgB,IAAI3B,SAASyB,SAAb,EAAhB;;AAEAF,YAAMG,MAAN,CAAaE,IAAb,GAAoB,IAAI5B,SAASyB,SAAb,EAApB;AACAF,YAAMG,MAAN,CAAaG,KAAb,GAAqB,IAAI7B,SAASyB,SAAb,EAArB;AACAF,YAAMG,MAAN,CAAaI,QAAb,CAAsBP,MAAMG,MAAN,CAAaE,IAAnC;AACAL,YAAMG,MAAN,CAAaI,QAAb,CAAsBP,MAAMG,MAAN,CAAaG,KAAnC;;AAEAN,YAAMG,MAAN,CAAaf,MAAb,GAAsBY,MAAMG,MAAN,CAAad,MAAb,GAAsB,KAAKhB,KAAjD;;AAEA,WAAKG,KAAL,CAAW+B,QAAX,CAAoBP,MAAMC,UAA1B;AACA,WAAKzB,KAAL,CAAW+B,QAAX,CAAoBP,MAAMG,MAA1B;AACA,WAAK3B,KAAL,CAAW+B,QAAX,CAAoBP,MAAMI,OAA1B;;AAEA,WAAKd,IAAL,CAAUU,KAAV,GAAkBA,KAAlB;AACD;;;4CAEuB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,UAAIjC,SAAS,KAAKS,KAAL,CAAWT,MAAxB;AAAA,UAAgCyC,mBAAmB,IAAI/B,SAASgC,KAAb,EAAnD;AAAA,UAAyEC,gBAAgB,IAAIjC,SAASgC,KAAb,EAAzF;AACAD,uBAAiBG,QAAjB,CAA0BC,SAA1B,CAAoC,SAApC,EAA+CC,QAA/C,CAAwD,CAAxD,EAA2D,CAA3D,EAA8D,KAAK/B,MAAL,CAAYvD,KAA1E,EAAiF,KAAKuD,MAAL,CAAYrD,MAA7F;AACA+E,uBAAiBM,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B/C,OAAOxC,KAApC,EAA2CwC,OAAOtC,MAAlD;AACA,WAAK6D,IAAL,CAAUU,KAAV,CAAgBC,UAAhB,CAA2BM,QAA3B,CAAoCC,gBAApC;;AAEA,UAAMO,mBAAmB,KAAKjC,MAAL,CAAYvD,KAAZ,GAAoB,CAA7C;AACA,UAAMyF,oBAAoB,KAAKlC,MAAL,CAAYvD,KAAZ,GAAoB,CAA9C;AACA,UAAM0F,aAAa3C,KAAKC,IAAL,CAAUD,KAAK4C,GAAL,CAAS,KAAKpC,MAAL,CAAYvD,KAArB,IAA8B+C,KAAK4C,GAAL,CAAS,KAAKpC,MAAL,CAAYrD,MAArB,CAAxC,IAAwE,KAAK4C,KAAhG;AACAqC,oBAAcC,QAAd,CAAuBC,SAAvB,CAAiC,SAAjC,EAA4CC,QAA5C,CAAqD,CAArD,EAAwD,CAAxD,EAA2DI,UAA3D,EAAuEA,UAAvE;AACAP,oBAAcI,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BG,UAA1B,EAAsCA,UAAtC;AACAP,oBAAcS,IAAd,GAAqBF,aAAW,CAAhC;AACAP,oBAAcU,IAAd,GAAqBH,aAAW,CAAhC;AACA,WAAK3B,IAAL,CAAUU,KAAV,CAAgBC,UAAhB,CAA2BoB,cAA3B,GAA4CX,aAA5C;AACA,WAAKpB,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqCG,aAArC;AAED;;;wDAEmC;AAAA;;AAClC;;AAmCA;AACA,UAAIY,SAAS,IAAIhI,GAAJ,EAAb;AACA,WAAKuB,KAAL,CAAWtE,GAAX,CAAeuG,YAAf,CAA4BF,KAA5B,CAAkChE,OAAlC,CAA0C,aAAK;AAC7C,YAAI0G,OAAO,IAAIb,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkC,SAAlC,EAA6CC,CAA7C,CAAnB,CAAX;AACA,YAAIC,IAAID,IAAI,GAAZ;AACAlC,aAAKwB,KAAL,CAAW,CAACW,CAAZ,EAAe,CAACA,CAAhB,EAAmBA,IAAI,CAAvB,EAA0BA,IAAI,CAA9B;;AAEAH,eAAOI,GAAP,CAAWF,CAAX,EAAclC,KAAKqC,WAAnB;AACD,OAND;;AAQA;AACA,WAAKrC,IAAL,CAAU/I,GAAV,GAAgB,EAACuG,cAAc,EAAf,EAAhB;AACA,WAAKjC,KAAL,CAAWtE,GAAX,CAAeuG,YAAf,CAA4BlE,OAA5B,CAAoC,iBAAS;AAC3C,YAAI0G,OAAO,IAAIb,SAASmD,MAAb,CAAoBN,OAAOO,GAAP,CAAWC,MAAM1I,MAAjB,CAApB,CAAX;AAAA,YACE2I,MAAMD,MAAM/I,QADd;AAEAuG,aAAKlD,CAAL,GAAS2F,IAAI3F,CAAJ,GAAQ0F,MAAM1I,MAAN,GAAe,GAAhC;AACAkG,aAAKjD,CAAL,GAAS0F,IAAI1F,CAAJ,GAAQyF,MAAM1I,MAAN,GAAe,GAAhC;AACA,eAAKkG,IAAL,CAAU/I,GAAV,CAAcuG,YAAd,CAA2BrE,IAA3B,CAAgC6G,IAAhC;AACA,eAAKA,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBG,KAAvB,CAA6BC,QAA7B,CAAsCjB,IAAtC;AACD,OAPD;AASD;;;2CAEsB;AAAA;;AAErB;;AAEA;AACA,UAAImC,IAAI,KAAK,CAAb,CALqB,CAKL;AAChB,WAAKrJ,KAAL,CAAWQ,OAAX,CAAmB,UAACC,IAAD,EAAOL,CAAP,EAAa;AAC9B,YAAIwJ,QAAQ,IAAIvD,SAASyB,SAAb,EAAZ;AAAA,YACE+B,OAAO,IAAIxD,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuB7H,UAAvB,CAAkCD,KAAKqJ,KAAvC,CAAnB,CADT;AAAA,YAEElG,OAAO,IAAIyC,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBwB,eAAvB,CAAuCtJ,KAAKqJ,KAA5C,CAAnB,CAFT;AAAA,YAGEH,MAAMlJ,KAAKC,UAAL,CAAgBC,QAHxB;AAIAiD,aAAKoG,KAAL,GAAa,IAAb;AACAJ,cAAM5F,CAAN,GAAU2F,IAAI3F,CAAd;AACA4F,cAAM3F,CAAN,GAAU0F,IAAI1F,CAAd;AACA2F,cAAMzB,QAAN,CAAevE,IAAf;AACAgG,cAAMzB,QAAN,CAAe0B,IAAf;AACAD,cAAMlB,KAAN,CAAY,CAACW,CAAb,EAAgB,CAACA,CAAjB,EAAoBA,IAAI,CAAxB,EAA2BA,IAAI,CAA/B;AACA5I,aAAKC,UAAL,CAAgBwG,IAAhB,GAAuB0C,KAAvB;AACA,eAAK1C,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqCyB,KAArC;AACD,OAbD;AAcD;;;wCAEmB;AAAA;;AAElB;AACA,UAAM5H,WAAW,KAAKR,KAAL,CAAWM,IAA5B;;AAEA,UAAMmI,YAAY7H,OAAO8H,KAAP,CAAaC,YAA/B;AACA,UAAMC,mBAAmBhI,OAAO8H,KAAP,CAAaG,YAAb,GAA4BjI,OAAO8H,KAAP,CAAaC,YAAlE;;AAEA,UAAMd,IAAIY,YAAY,GAAtB;;AAEA,UAAMK,UAAU,KAAKpD,IAAL,CAAUoD,OAAV,GAAoB,IAAIpJ,GAAJ,EAApC;;AAEA;AACA,WAAKM,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;;AAEzB,YAAM+J,YAAY7I,KAAKO,KAAL,CAAWxB,IAAX,CAAgBqJ,KAAlC;;AAEA,YAAMU,YAAY,IAAInE,SAASyB,SAAb,EAAlB;;AAEA,YAAI2C,eAAJ;AACA,YAAG/I,SAASM,QAAZ,EAAsB;AACpB,cAAMoH,IAAI5G,WAAW0H,KAAX,CAAiBQ,MAA3B;AACAD,mBAAS,IAAIpE,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmCJ,SAAnC,EAA8CnB,CAA9C,CAAnB,CAAT;AACAqB,iBAAOT,KAAP,GAAe,GAAf;AACAS,iBAAO/B,KAAP,CAAa,CAACU,CAAd,EAAiB,CAACA,CAAlB,EAAqBA,IAAI,CAAzB,EAA4BA,IAAI,CAAhC;AACAoB,oBAAUrC,QAAV,CAAmBsC,MAAnB;AACD;;AAED,YAAMG,YAAY,IAAIvE,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmCJ,SAAnC,EAA8CN,SAA9C,CAAnB,CAAlB;AAAA,YACMY,gBAAgB,IAAIxE,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmCJ,SAAnC,EAA8CN,SAA9C,CAAnB,CADtB;AAAA,YAEMa,oBAAoB,IAAIzE,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBwC,WAAvB,CAAmCR,SAAnC,EAA8CN,SAA9C,EAAyD,CAAzD,CAAnB,CAF1B;;AAIA,YAAMe,KAAK,IAAI3E,SAASyB,SAAb,EAAX;AACA,YAAMmD,KAAK,IAAI5E,SAASyB,SAAb,EAAX;AACA,YAAMoD,KAAK,IAAI7E,SAASyB,SAAb,EAAX;;AAEA8C,kBAAUZ,KAAV,GAAkB,GAAlB;AACAa,sBAAcb,KAAd,GAAsB,GAAtB;AACAc,0BAAkBd,KAAlB,GAA0B,GAA1B;;AAEAgB,WAAG7C,QAAH,CAAYyC,SAAZ;AACAK,WAAG9C,QAAH,CAAY0C,aAAZ;AACAK,WAAG/C,QAAH,CAAY2C,iBAAZ;;AAEAE,WAAGtC,KAAH,CAAS,CAACW,CAAV,EAAa,CAACA,CAAd,EAAiBA,IAAI,CAArB,EAAwBA,IAAI,CAA5B;AACA4B,WAAGvC,KAAH,CAAS,CAACW,CAAV,EAAa,CAACA,CAAd,EAAiBA,IAAI,CAArB,EAAwBA,IAAI,CAA5B;AACA6B,WAAGxC,KAAH,CAAS,CAACW,CAAV,EAAa,CAACA,CAAd,EAAiBA,IAAI,CAArB,EAAwBA,IAAI,CAA5B;;AAEA,YAAM8B,kBAAkB,IAAI9E,SAASmD,MAAb,CAAoBwB,GAAGzB,WAAvB,CAAxB;AAAA,YACM6B,sBAAsB,IAAI/E,SAASmD,MAAb,CAAoByB,GAAG1B,WAAvB,CAD5B;AAAA,YAEM8B,0BAA0B,IAAIhF,SAASmD,MAAb,CAAoB0B,GAAG3B,WAAvB,CAFhC;;AAIA4B,wBAAgBpC,IAAhB,GAAuBoC,gBAAgBnC,IAAhB,GAAuBK,CAA9C;AACA+B,4BAAoBrC,IAApB,GAA2BqC,oBAAoBpC,IAApB,GAA2BK,CAAtD;AACAgC,gCAAwBtC,IAAxB,GAA+BsC,wBAAwBrC,IAAxB,GAA+BK,CAA9D;;AAEAmB,kBAAUrC,QAAV,CAAmBgD,eAAnB;AACAX,kBAAUrC,QAAV,CAAmBiD,mBAAnB;AACAZ,kBAAUrC,QAAV,CAAmBkD,uBAAnB;AACA,eAAKnE,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqCqC,SAArC;;AAEA,YAAMc,QAAQ;AACZd,8BADY;AAEZC,wBAFY;AAGZG,qBAAWO,eAHC;AAIZN,yBAAeO,mBAJH;AAKZN,6BAAmBO;AALP,SAAd;;AAQAf,gBAAQhB,GAAR,CAAY5H,IAAZ,EAAkB4J,KAAlB;AAED,OA1DD;AA2DD;;;sCAEiB;AAAA;;AAChB,UAAItJ,WAAW,KAAKR,KAAL,CAAWM,IAA1B;AAAA,UAAgCyJ,iBAAhC;AACA,UAAIvJ,QAAJ,EAAcuJ,WAAWvJ,SAASC,KAAT,CAAexB,IAA1B;AACd,WAAKe,KAAL,CAAWhB,OAAX,CAAmB,UAACkB,IAAD,EAAU;AAC3B,YAAI8I,YAAY,IAAInE,SAASyB,SAAb,EAAhB;AACA,YAAI0D,SAAS,IAAInF,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuB7G,IAAvB,CAA4BA,KAAKO,KAAL,CAAWX,IAAvC,EAA6C,CAA7C,EAAgDI,KAAKO,KAAL,CAAWxB,IAAX,CAAgBqJ,KAAhE,EAAuEpI,KAAKG,MAAL,GAAc,CAAd,GAAkB,CAAzF,CAAnB,CAAb;AAAA,YACE4J,SAAS,IAAIpF,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuB7G,IAAvB,CAA4BA,KAAKO,KAAL,CAAWX,IAAvC,EAA6C,CAA7C,EAAgDI,KAAKO,KAAL,CAAWxB,IAAX,CAAgBqJ,KAAhE,EAAuEpI,KAAKG,MAAL,GAAc,CAAd,GAAkB,CAAzF,CAAnB,CADX;AAAA,YAEEwH,IAAI3H,KAAKV,MAAL,GAAc,GAFpB;AAGAwK,eAAO9C,KAAP,CAAa,CAACW,CAAd,EAAiB,CAACA,CAAlB,EAAqBA,IAAI,CAAzB,EAA4BA,IAAI,CAAhC;AACAoC,eAAO/C,KAAP,CAAa,CAACW,CAAd,EAAiB,CAACA,CAAlB,EAAqBA,IAAI,CAAzB,EAA4BA,IAAI,CAAhC;AACA,YAAInC,OAAO,IAAIb,SAASmD,MAAb,CAAoBgC,OAAOjC,WAA3B,CAAX;AACArC,aAAK6B,IAAL,GAAY7B,KAAK8B,IAAL,GAAYK,CAAxB;AACAnC,aAAKsE,MAAL,GAAcA,OAAOjC,WAArB,EAAkCrC,KAAKuE,MAAL,GAAcA,OAAOlC,WAAvD,CAT2B,CASyC;AACpEiB,kBAAU9I,IAAV,GAAiBwF,IAAjB;AACAsD,kBAAUrC,QAAV,CAAmBjB,IAAnB;;AAEA;AACA,YAAIxF,KAAKO,KAAL,CAAWxB,IAAX,IAAmB8K,QAAnB,IAA+B7J,QAAQM,QAA3C,EAAqD;AACnD,cAAI0J,OAAO,IAAIrF,SAASsF,IAAb,CAAkBjK,KAAKO,KAAL,CAAWZ,IAA7B,EAAmC,aAAnC,EAAkDkK,SAASzB,KAA3D,CAAX;AACA4B,eAAKE,SAAL,GAAiB,QAAjB;AACA;AACApB,oBAAUkB,IAAV,GAAiBA,IAAjB;AACAlB,oBAAUrC,QAAV,CAAmBuD,IAAnB;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,gBAAKxE,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBG,KAAvB,CAA6BC,QAA7B,CAAsCzG,KAAKwF,IAAL,GAAYsD,SAAlD;AACD,OArCD;;AAuCA,UAAIxI,QAAJ,EAAc;AACZ,YAAIwI,YAAYxI,SAASkF,IAAzB;AAAA,YACE4C,QAAQ,KAAKtI,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBxB,IAAtB,CAA2BqJ,KADrC;AAAA,YAEE+B,cAAc,CAFhB;AAAA,YAGEC,cAAc,EAHhB;AAAA,YAIEC,QAAQ,IAAI1F,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuByD,WAAvB,CAAmC,KAAKxK,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBxB,IAAtB,CAA2BqJ,KAA9D,EAAqE,CAArE,CAAnB,CAJV;AAAA,YAKEmC,SAAS,IAAI5F,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuB2D,iBAAvB,CAAyC,SAAzC,CAAnB,CALX;AAAA,YAMEC,SAAS,EAACnI,GAAG,KAAK,KAAKiC,KAAd,EAAqBhC,GAAG,CAAC,EAAD,GAAM,KAAKgC,KAAnC,EANX;;AAQAgG,eAAOvD,KAAP,CAAa,CAACoD,WAAd,EAA2B,CAACA,WAA5B,EAAyCA,cAAY,CAArD,EAAwDA,cAAY,CAApE;AACAC,cAAMrD,KAAN,CAAY,CAACmD,WAAb,EAA0B,CAACA,WAA3B,EAAwCA,cAAY,CAApD,EAAuDA,cAAY,CAAnE;;AAEAE,cAAM/H,CAAN,GAAUiI,OAAOjI,CAAP,GAAWmI,OAAOnI,CAA5B;AACA+H,cAAM9H,CAAN,GAAUgI,OAAOhI,CAAP,GAAWkI,OAAOlI,CAA5B;;AAEAuG,kBAAUrC,QAAV,CAAmBqC,UAAU4B,YAAV,GAAyBL,MAAME,MAAN,GAAeA,MAA3D;AACAzB,kBAAUrC,QAAV,CAAmBqC,UAAUuB,KAAV,GAAkBA,KAArC;AACD;AACF;;;sCAEiB;AAChB,WAAK7E,IAAL,CAAUxE,OAAV,GAAoB,IAAIxB,GAAJ,EAApB;AACA,WAAKgG,IAAL,CAAUvE,MAAV,GAAmB,IAAIzB,GAAJ,EAAnB;AACA,WAAKgG,IAAL,CAAUtE,IAAV,GAAiB,IAAI1B,GAAJ,EAAjB;AACD;;;yCAEoB;AAAA;;AACnB,UAAI8G,UAAU,EAAd;;AAEAA,cAAQqE,KAAR,GAAgB,IAAIhG,SAASyB,SAAb,EAAhB;AACAE,cAAQqE,KAAR,CAAc5L,IAAd,GAAqB,EAArB;AACA,UAAI6L,iBAAiB,GAArB;AACA,WAAKtM,KAAL,CAAWQ,OAAX,CAAmB,UAACC,IAAD,EAAOL,CAAP,EAAa;AAC9B,YAAIsL,OAAO,IAAIrF,SAASsF,IAAb,CAAkB,QAAKrN,IAAL,CAAU0E,MAAV,CAAiB5C,CAAjB,EAAoBmM,QAApB,EAAlB,EAAkD,gBAAlD,EAAoE9L,KAAKqJ,KAAzE,CAAX;AACA4B,aAAK1H,CAAL,GAAU5D,IAAIkM,cAAL,GAAwBA,iBAAiB,CAAlD;AACAZ,aAAKE,SAAL,GAAiB,QAAjB;AACAF,aAAKO,MAAL,GAAc,IAAI5F,SAASmG,MAAb,CAAoB,SAApB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAd;AACAd,aAAKhD,KAAL,CAAW,CAAC,GAAZ,EAAiB,CAAjB,EAAoB,GAApB,EAAyB,EAAzB;AACAV,gBAAQqE,KAAR,CAAclE,QAAd,CAAuBuD,IAAvB;AACA1D,gBAAQqE,KAAR,CAAc5L,IAAd,CAAmBJ,IAAnB,CAAwBqL,IAAxB;AACD,OARD;AASA1D,cAAQqE,KAAR,CAAcrI,CAAd,GAAmB,KAAK0C,MAAL,CAAYvD,KAAZ,GAAoB,CAArB,GAA4B,KAAKnD,KAAL,CAAWE,MAAX,GAAoBoM,cAArB,GAAuC,CAApF;AACAtE,cAAQqE,KAAR,CAAcpI,CAAd,GAAkB,EAAlB;;AAEA,WAAKiD,IAAL,CAAUU,KAAV,CAAgBI,OAAhB,CAAwBG,QAAxB,CAAiCH,QAAQqE,KAAzC;;AAIA;AACA,UAAI,CAAC,KAAKzO,QAAV,EAAoB,KAAK6O,yBAAL,CAA+BzE,OAA/B,EAAwC,KAAKd,IAAL,CAAUU,KAAV,CAAgBI,OAAxD;;AAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACAA,cAAQ0E,OAAR,GAAkB,IAAIrG,SAASsF,IAAb,CAAkB,EAAlB,EAAsB,uBAAtB,CAAlB;AACA3D,cAAQ0E,OAAR,CAAgBd,SAAhB,GAA4B,QAA5B;AACA5D,cAAQ0E,OAAR,CAAgB1I,CAAhB,GAAqB,KAAK0C,MAAL,CAAYvD,KAAZ,GAAoB,CAAzC;AACA6E,cAAQ0E,OAAR,CAAgBzI,CAAhB,GAAoB,EAApB;AACA+D,cAAQ0E,OAAR,CAAgBT,MAAhB,GAAyB,IAAI5F,SAASmG,MAAb,CAAoB,SAApB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAzB;AACAxE,cAAQ0E,OAAR,CAAgBhE,KAAhB,CAAsB,EAAE,KAAKhC,MAAL,CAAYvD,KAAZ,GAAkB,CAApB,CAAtB,EAA8C,CAA9C,EAAiD,KAAKuD,MAAL,CAAYvD,KAA7D,EAAoE,EAApE;;AAEA,WAAK+D,IAAL,CAAUU,KAAV,CAAgBI,OAAhB,CAAwBG,QAAxB,CAAiCH,QAAQ0E,OAAzC;;AAEA;AACA1E,cAAQ2E,YAAR,GAAuB,IAAItG,SAASsF,IAAb,CAAkB,EAAlB,EAAsB,uBAAtB,CAAvB;AACA3D,cAAQ2E,YAAR,CAAqBf,SAArB,GAAiC,QAAjC;AACA5D,cAAQ2E,YAAR,CAAqB3I,CAArB,GAA0B,KAAK0C,MAAL,CAAYvD,KAAZ,GAAoB,CAA9C;AACA6E,cAAQ2E,YAAR,CAAqB1I,CAArB,GAAyB,KAAKyC,MAAL,CAAYrD,MAAZ,GAAqB,EAA9C;AACA2E,cAAQ2E,YAAR,CAAqBV,MAArB,GAA8B,IAAI5F,SAASmG,MAAb,CAAoB,SAApB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAA9B;AACAxE,cAAQ2E,YAAR,CAAqBjE,KAArB,CAA2B,EAAE,KAAKhC,MAAL,CAAYvD,KAAZ,GAAkB,CAApB,CAA3B,EAAmD,CAAnD,EAAsD,KAAKuD,MAAL,CAAYvD,KAAlE,EAAyE,EAAzE;;AAEA,WAAK+D,IAAL,CAAUU,KAAV,CAAgBI,OAAhB,CAAwBG,QAAxB,CAAiCH,QAAQ2E,YAAzC;;AAEA,cAAQ,KAAKvO,QAAb;AACE,aAAK,CAAL;AAAQ;AACN;AACA;;AAEA,cAAIgL,IAAIjM,cAAcyP,KAAd,CAAoB,KAApB,EAA2BC,WAA3B,GAAyC,KAAK5G,KAAtD;AAAA,cAA6DoD,IAAID,IAAI,GAArE;AACA,cAAI9F,OAAO,IAAI+C,SAASgC,KAAb,CACTlL,cAAcoL,QAAd,CAAuBjF,IAAvB,CAA4B8F,CAA5B,CADS,CAAX;AAGA9F,eAAK2I,MAAL,GAAc9O,cAAcoL,QAAd,CAAuBuE,WAAvB,EAAd;AACAxJ,eAAKoF,KAAL,CAAW,CAACW,CAAZ,EAAe,CAACA,CAAhB,EAAmBA,IAAI,CAAvB,EAA0BA,IAAI,CAA9B;;AAEA;;AAEA,eAAKnC,IAAL,CAAUU,KAAV,CAAgBI,OAAhB,CAAwBG,QAAxB,CAAiC7E,IAAjC;AACA,eAAK4D,IAAL,CAAU5D,IAAV,GAAiBA,IAAjB;;AAEA;AAjBJ;;AAqBA,WAAK4D,IAAL,CAAUc,OAAV,GAAoBA,OAApB;AACD;;;8CAEyB+E,a,EAAeC,Y,EAAc;AAAA;;AAErD,UAAIC,OAAOF,cAAcG,OAAd,GAAwB,IAAI7G,SAASyB,SAAb,EAAnC;;AAEAmF,WAAK9J,KAAL,GAAa8J,KAAK5J,MAAL,GAAc,GAA3B;AACA4J,WAAKE,aAAL,GAAqBF,KAAK9J,KAAL,GAAa,KAAKnF,OAAL,CAAamF,KAA/C;AACA8J,WAAKlE,IAAL,GAAYkE,KAAK9J,KAAL,GAAW,CAAvB;AACA8J,WAAKjE,IAAL,GAAYiE,KAAK5J,MAAL,GAAY,CAAxB;AACA4J,WAAKG,QAAL,GAAgBlH,KAAKmH,OAAL,CAAa,CAAC,KAAK7L,KAAL,CAAWM,IAAX,CAAgBwL,aAA9B,IAA+C,EAA/D;;AAEA,UAAIC,OAAO,KAAK7G,MAAL,CAAYvD,KAAZ,GAAoB,GAApB,GAA0B,CAA1B,GAA8B,EAAzC;AACA8J,WAAKjJ,CAAL,GAAUuJ,IAAD,GAASN,KAAK9J,KAAL,GAAW,CAA7B;AACA8J,WAAKhJ,CAAL,GAAS,KAAKyC,MAAL,CAAYrD,MAAZ,IAAsBkK,OAAON,KAAK5J,MAAlC,IAA4C4J,KAAK5J,MAAL,GAAY,CAAjE;;AAEA;AACA,UAAIwE,aAAaoF,KAAKpF,UAAL,GAAkB,IAAIxB,SAASgC,KAAb,EAAnC;AACAR,iBAAWU,QAAX,CAAoBC,SAApB,CAA8B,SAA9B,EAAyCC,QAAzC,CAAkD,CAAlD,EAAqD,CAArD,EAAwDwE,KAAK9J,KAA7D,EAAoE8J,KAAK5J,MAAzE;AACAwE,iBAAWa,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBuE,KAAK9J,KAA5B,EAAmC8J,KAAK5J,MAAxC;AACA4J,WAAK9E,QAAL,CAAcN,UAAd;;AAEA;AACA,UAAIhE,MAAM,GAAV;AAAA,UACEuF,IAAIvF,MAAMoJ,KAAKE,aADjB;AAAA,UAEEzD,QAAQ,IAAIrD,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkC,SAAlC,EAA6CC,CAA7C,CAAnB,CAFV;AAAA,UAGEC,IAAID,IAAI,GAHV;AAIAM,YAAMhB,KAAN,CAAY,CAACW,CAAb,EAAgB,CAACA,CAAjB,EAAoBA,IAAI,CAAxB,EAA2BA,IAAI,CAA/B;AACA,UAAIX,QAAQgB,MAAMH,WAAlB;;AAEA,WAAK9G,KAAL,CAAWtE,GAAX,CAAeuG,YAAf,CAA4BlE,OAA5B,CAAoC,iBAAS;AAC3C,YAAIyF,QAASyD,MAAM1I,MAAN,GAAeiM,KAAKE,aAArB,GAAsC/D,CAAlD;AAAA,YACElC,OAAO,IAAIb,SAASmD,MAAb,CAAoBd,KAApB,CADT;AAAA,YAEEiB,MAAMD,MAAM/I,QAFd;AAGAuG,aAAKF,MAAL,GAAcE,KAAKD,MAAL,GAAchB,KAA5B;AACAiB,aAAKlD,CAAL,GAAU2F,IAAI3F,CAAJ,GAAQiJ,KAAKE,aAAd,GAAgClH,QAAQyC,MAAMvF,KAAd,GAAsB,CAA/D;AACA+D,aAAKjD,CAAL,GAAU0F,IAAI1F,CAAJ,GAAQgJ,KAAKE,aAAd,GAAgClH,QAAQyC,MAAMrF,MAAd,GAAuB,CAAhE;AACA4J,aAAK9E,QAAL,CAAcjB,IAAd;AACD,OARD;;AAUA;AACA,WAAKlH,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzB,YAAIqJ,OAAOpJ,KAAKC,UAAhB;AAAA,YACEM,SAASP,QAAQ,QAAKe,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBxB,IAA9B,GAAqC,CAArC,GAAyC,CADpD;;AAEE;AACAyG,eAAO,IAAIb,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmClK,KAAKqJ,KAAxC,EAA+C,CAA/C,CAAnB,CAHT;AAAA,YAIEH,MAAME,KAAKlJ,QAJb;AAKAuG,aAAKlD,CAAL,GAAS2F,IAAI3F,CAAJ,GAAQiJ,KAAKE,aAAtB;AACAjG,aAAKjD,CAAL,GAAS0F,IAAI1F,CAAJ,GAAQgJ,KAAKE,aAAtB;AACA,YAAI9D,IAAIrI,SAAS,GAAjB;AACAkG,aAAKwB,KAAL,CAAW,CAACW,CAAZ,EAAe,CAACA,CAAhB,EAAmBA,IAAI,CAAvB,EAA0BA,IAAI,CAA9B;AACA4D,aAAK9E,QAAL,CAAcjB,IAAd;AACD,OAXD;;AAaA;AACA,UAAG,KAAK9I,QAAL,KAAkB,CAArB,EAAwB;AACtB,YAAMoP,eAAc,KAAKhM,KAAL,CAAWM,IAAX,CAAgBG,KAApC;AACA,YAAMwL,OAAOrL,OAAO8H,KAAP,CAAaC,YAAb,GAA4B8C,KAAKE,aAA9C;AACA,YAAM9D,KAAIoE,OAAO,GAAjB;AACAR,aAAKS,aAAL,GAAqB,IAAIxM,GAAJ,EAArB;AACA,aAAKD,OAAL,CAAaT,OAAb,CAAqB,UAACiB,MAAD,EAASL,EAAT,EAAgB;AACnC,cAAMuM,kBAAkB,IAAItH,SAASyB,SAAb,EAAxB;AACA,cAAMyC,YAAY9I,OAAOhB,IAAP,CAAYqJ,KAA9B;AACA,cAAMA,QAAQrI,WAAW+L,YAAX,GAAyB,SAAzB,GAAqCjD,SAAnD;AACA,cAAMqD,aAAa,IAAIvH,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBwC,WAAvB,CAAmCjB,KAAnC,EAA0C2D,IAA1C,EAAgD,CAAhD,CAAnB,CAAnB;AACA,cAAMI,aAAa,IAAIxH,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmClJ,OAAOhB,IAAP,CAAYqJ,KAA/C,EAAsD2D,IAAtD,CAAnB,CAAnB;AACAI,qBAAW7D,KAAX,GAAmB,GAAnB;AACA6D,qBAAWnF,KAAX,CAAiB,CAACW,EAAlB,EAAqB,CAACA,EAAtB,EAAyBA,KAAE,CAA3B,EAA8BA,KAAE,CAAhC;AACAuE,qBAAWlF,KAAX,CAAiB,CAACW,EAAlB,EAAqB,CAACA,EAAtB,EAAyBA,KAAE,CAA3B,EAA8BA,KAAE,CAAhC;AACAsE,0BAAgBxF,QAAhB,CAAyB0F,UAAzB;AACAF,0BAAgBxF,QAAhB,CAAyByF,UAAzB;AACAX,eAAKS,aAAL,CAAmBpE,GAAnB,CAAuBlI,EAAvB,EAA2B,CAACuM,eAAD,EAAkBE,UAAlB,CAA3B;AACAZ,eAAK9E,QAAL,CAAcwF,eAAd;AACD,SAbD;AAcD;;AAED;AACA,UAAG,KAAKvP,QAAL,IAAiB,CAApB,EAAuB;AACrB,YAAMgL,KAAI,CAAV;AACA,YAAI0E,YAAYb,KAAK3J,IAAL,GAAY,IAAI+C,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmC,SAAnC,EAA8CvB,EAA9C,CAAnB,CAA5B;AACA0E,kBAAUpF,KAAV,CAAgB,CAACU,EAAjB,EAAoB,CAACA,EAArB,EAAwBA,KAAE,CAA1B,EAA6BA,KAAE,CAA/B;AACA6D,aAAK9E,QAAL,CAAc2F,SAAd;AACD;;AAED;AACA;AACA,UAAIN,cAAc,KAAKhM,KAAL,CAAWM,IAAX,CAAgBG,KAAlC;AAAA,UAAyC8L,YAAYP,YAAY/M,IAAjE;AACAwM,WAAKhM,OAAL,GAAe,EAAf;AACA,UAAM+M,gBAAgB,CAAtB;AACAD,gBAAU9M,OAAV,CAAkBT,OAAlB,CAA0B,kBAAU;AAClC,YAAI0G,OAAO,IAAIb,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBoC,WAAvB,CAAmCoD,UAAUjE,KAA7C,EAAoDkE,aAApD,CAAnB,CAAX;AACA9G,aAAK8C,KAAL,GAAavI,UAAU+L,WAAV,GAAwB,CAAxB,GAA4B,GAAzC;AACAtG,aAAKwB,KAAL,CAAW,CAACsF,aAAZ,EAA2B,CAACA,aAA5B,EAA2CA,gBAAc,CAAzD,EAA4DA,gBAAc,CAA1E;AACAf,aAAKhM,OAAL,CAAaZ,IAAb,CAAkB6G,IAAlB;AACA+F,aAAK9E,QAAL,CAAcjB,IAAd;AACD,OAND;;AAQA;AACA+F,WAAKtK,MAAL,GAAc,IAAIzB,GAAJ,EAAd;;AAGA8L,mBAAa7E,QAAb,CAAsB8E,IAAtB;AACD;;;qDAEgCvD,K,EAAO;AACtC,UAAIhB,QAAQvL,cAAc8Q,cAAd,CAA6Bf,OAA7B,CAAqCvK,MAArC,CAA4C+G,MAAMjJ,IAAlD,CAAZ;AAAA,UACEyN,MAAM,IAAI7H,SAASmD,MAAb,CAAoBd,KAApB,CADR;AAAA,UAEEuE,OAAO,KAAK/F,IAAL,CAAUc,OAAV,CAAkBkF,OAF3B;AAAA,UAGEjH,QAAQgH,KAAKE,aAHf;;AAKA;AACAe,UAAIlK,CAAJ,GAAQ0F,MAAM/I,QAAN,CAAeqD,CAAf,GAAmBiC,KAA3B;AACAiI,UAAIjK,CAAJ,GAAQyF,MAAM/I,QAAN,CAAesD,CAAf,GAAmBgC,KAA3B;;AAEAiI,UAAInF,IAAJ,GAAWmF,IAAIlF,IAAJ,GAAYN,MAAMvF,KAAN,GAAc,CAArC;;AAEA8J,WAAK9E,QAAL,CAAc+F,GAAd;AACAjB,WAAKkB,aAAL,CAAmBD,GAAnB,EAAwB,CAAxB;AACAjB,WAAKtK,MAAL,CAAY2G,GAAZ,CAAgBI,MAAMtI,EAAtB,EAA0B8M,GAA1B;;AAEA;AACA;AACD;;;sDAEiC9M,E,EAAI;AACpC,UAAI,CAAC,KAAKxD,QAAV,EAAoB;AAClB,YAAIwQ,IAAI,KAAKlH,IAAL,CAAUc,OAAV,CAAkBkF,OAAlB,CAA0BvK,MAA1B,CAAiC8G,GAAjC,CAAqCrI,EAArC,CAAR;AACA,YAAIgN,CAAJ,EAAO;AACL,eAAKlH,IAAL,CAAUc,OAAV,CAAkBkF,OAAlB,CAA0BvK,MAA1B,CAAiC0L,MAAjC,CAAwCjN,EAAxC;AACA,eAAK8F,IAAL,CAAUc,OAAV,CAAkBkF,OAAlB,CAA0BoB,WAA1B,CAAsCF,CAAtC;AACD;AACF;AACF;;;sCAEiB;;AAEhB;AACA,UAAMG,gBAAgB,SAAhBA,aAAgB,CAACzE,KAAD,EAAW;AAC/B,YAAMvB,WAAWpL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkCW,KAAlC,EAAyC,CAAzC,CAAjB;AACA,YAAM0E,WAAW,IAAInI,SAASgC,KAAb,CAAmBE,QAAnB,CAAjB;AACAiG,iBAAS9F,KAAT,CAAe,CAAC,EAAhB,EAAoB,CAAC,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AACA,YAAMA,QAAQ8F,SAASjF,WAAvB;AACA,eAAO,IAAIlD,SAASmD,MAAb,CAAoBd,KAApB,CAAP;AACD,OAND;;AAQA;AACA,WAAKxB,IAAL,CAAUuH,MAAV,GAAmB,EAAnB;AACA,UAAMrI,QAAQ,KAAKA,KAAnB;AACA,UAAMT,SAASS,MAAMT,MAArB;AACA,UAAMuB,OAAO,KAAKA,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAApC;AACA,UAAMwG,SAAS,KAAKvH,IAAL,CAAUuH,MAAV,CAAiB3M,IAAjB,GAAwB,IAAI4M,MAAJ,EAAvC;AACA,UAAMC,WAAW,KAAKzH,IAAL,CAAUuH,MAAV,CAAiBE,QAAjB,GAA4B,IAAID,OAAOE,QAAX,CAAoB,OAApB,EAA6BH,MAA7B,EAAqCvH,IAArC,CAA7C;AACA,UAAM2H,WAAW,KAAK3H,IAAL,CAAUuH,MAAV,CAAiBI,QAAjB,GAA4B,IAAI3N,GAAJ,EAA7C;;AAEA,UAAM4N,eAAe,KAAK5H,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,GAAgC,EAArD;AACAA,mBAAa9O,KAAb,GAAqB,EAArB;AACA8O,mBAAaC,KAAb,GAAqB,IAAIL,OAAOM,WAAX,CAAuBT,cAAc,SAAd,CAAvB,CAArB;AACAO,mBAAaG,KAAb,GAAqB,IAAIP,OAAOM,WAAX,CAAuBT,cAAc,SAAd,CAAvB,CAArB;AACAO,mBAAaI,SAAb,GAAyB,EAAzB;AAxBgB;AAAA;AAAA;;AAAA;AAyBhB,8BAAgB,KAAKlP,KAArB,mIAA4B;AAAA,cAApBS,IAAoB;;AAC1BqO,uBAAa9O,KAAb,CAAmBK,IAAnB,CAAwB,IAAIqO,OAAOM,WAAX,CAAuBT,cAAc9N,KAAKqJ,KAAnB,CAAvB,CAAxB;AACAgF,uBAAaI,SAAb,CAAuB7O,IAAvB,CAA4B,IAAIqO,OAAOM,WAAX,CAAuBT,cAAc9N,KAAKqJ,KAAnB,CAAvB,CAA5B;AACD;AA5Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BhB,UAAMqF,OAAO,KAAKjI,IAAL,CAAUuH,MAAV,CAAiBU,IAAjB,GAAwB,EAArC;AACAA,WAAKC,cAAL,GAAsB,UAACC,OAAD,EAAUC,WAAV,EAA0B;AAC9C,eAAQD,QAAQE,WAAR,CAAoBC,OAApB,CAA4BF,WAA5B,IAA2C,CAAC,CAApD;AACD,OAFD;;AAQA;AAvCgB;AAAA;AAAA;;AAAA;AAwChB,8BAAgB,KAAK9N,KAArB,mIAA4B;AAAA,cAApBE,IAAoB;;AAC1B,cAAM+N,QAAQ/N,SAAS,KAAKF,KAAL,CAAWM,IAAlC;;AAEA,cAAMuN,UAAU,IAAIX,OAAOgB,OAAX,EAAhB;AACA,cAAM5F,QAAQpI,KAAKO,KAAL,CAAWxB,IAAX,CAAgBqJ,KAA9B;;AAEA;AACA,cAAMvB,WAAWpL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkCW,KAAlC,EAAyC,CAAzC,CAAjB;AACA,cAAM0E,WAAW,IAAInI,SAASgC,KAAb,CAAmBE,QAAnB,CAAjB;AACAiG,mBAAS9F,KAAT,CAAe,CAAC,EAAhB,EAAoB,CAAC,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AACA,cAAMA,QAAQ8F,SAASjF,WAAvB;AACA,cAAMoG,SAAS,IAAItJ,SAASmD,MAAb,CAAoBd,KAApB,CAAf;;AAEA2G,kBAAQO,IAAR,GAAe,IAAIlB,OAAOmB,IAAX,CAAgB,CAAhB,EAAmB,GAAnB,CAAf;AACAR,kBAAQS,aAAR,CAAsBhB,aAAa9O,KAAb,CAAmB0B,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAAnC,CAAtB;AACAsO,kBAAQS,aAAR,CAAsB,IAAIpB,OAAOqB,IAAX,CAAgB,CAAhB,EAAmB,GAAnB,CAAtB;AACA,cAAMC,QAAQ,IAAItB,OAAOuB,CAAX,CAAa,IAAIvB,OAAOwB,IAAX,CAAgB,GAAhB,EAAqB,GAArB,CAAb,EAAwC,IAAIxB,OAAOwB,IAAX,CAAgB,GAAhB,EAAqB,GAArB,CAAxC,EAAmE,OAAnE,CAAd;AACAb,kBAAQS,aAAR,CAAsBE,KAAtB;AACAX,kBAAQW,KAAR,GAAgBA,KAAhB;;AAEAX,kBAAQc,YAAR,CAAqB,IAAIzB,OAAO0B,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAArB;AACAf,kBAAQc,YAAR,CAAqB,IAAIzB,OAAO2B,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAArB;;AAEAhB,kBAAQiB,IAAR;AACA7B,iBAAO8B,UAAP,CAAkBlB,OAAlB;AACAR,mBAASvF,GAAT,CAAa5H,IAAb,EAAmB2N,OAAnB;AAED;AAnEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqEhB;;AAEE,YAAMmB,cAAc,IAAI9B,OAAOgB,OAAX,EAApB;;AAEA;;AAEAc,oBAAYZ,IAAZ,GAAmB,IAAIlB,OAAOmB,IAAX,CAAgB,EAAhB,EAAoB,GAApB,CAAnB;AACAW,oBAAYV,aAAZ,CAA0BhB,aAAaG,KAAvC;AACAuB,oBAAYV,aAAZ,CAA0B,IAAIpB,OAAOqB,IAAX,CAAgB,CAAhB,CAA1B;AACA,YAAMU,OAAO,IAAI/B,OAAOgC,CAAX,CAAa,IAAIhC,OAAOiC,UAAX,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,IAA5B,CAAb,CAAb;AACAH,oBAAYV,aAAZ,CAA0BW,IAA1B;AACA,YAAMT,QAAQ,IAAItB,OAAOuB,CAAX,CAAa,IAAIvB,OAAOwB,IAAX,CAAgB,GAAhB,EAAqB,GAArB,CAAb,EAAwC,IAAIxB,OAAOwB,IAAX,CAAgB,GAAhB,EAAqB,GAArB,CAAxC,EAAmE,OAAnE,CAAd;AACAM,oBAAYV,aAAZ,CAA0BE,KAA1B;AACAQ,oBAAYR,KAAZ,GAAoBA,KAApB;;AAEAQ,oBAAYL,YAAZ,CAAyB,IAAIzB,OAAO2B,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAzB;AACAG,oBAAYL,YAAZ,CAAyB,IAAIzB,OAAO0B,KAAX,CAAiB,CAAjB,EAAoB,GAApB,CAAzB;;AAEAI,oBAAYF,IAAZ;AACA7B,eAAO8B,UAAP,CAAkBC,WAAlB;AACA,aAAKA,WAAL,GAAmBA,WAAnB;AAED;;AAID7B,eAASjR,KAAT;;AAEA;AACA;;AAGD;;;kCAEa;AAAA;;AACZ,WAAKwJ,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuB5E,KAAvB,GAA+B,KAAKnF,OAAL,CAAamF,KAA5C;AACA,WAAK+D,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuB1E,MAAvB,GAAgC,KAAKrF,OAAL,CAAaqF,MAA7C;AACA,WAAKuN,MAAL,GAAc,IAAIC,MAAJ,CAAW,KAAKzK,KAAL,CAAWT,MAAtB,EAA8B,KAAKuB,IAAL,CAAUU,KAAV,CAAgBG,MAA9C,EAAsD,KAAK9B,KAA3D,EAAkE,KAAKQ,QAAvE,CAAd;;AAEA,UAAI,KAAK7I,QAAT,EAAmB;AACjB,aAAKkT,iBAAL,GAAyB,CAAzB;AACA;AACA;AACA;AACA;AACA,aAAKC,aAAL,GAAqB,KAAK7R,SAAL,CAAe+B,OAAf,CAAuB9C,GAAvB,CAA2B;AAAA,iBAAK,QAAK8C,OAAL,CAAawI,GAAb,CAAiBuH,EAAE,CAAF,CAAjB,CAAL;AAAA,SAA3B,CAArB;AACA,aAAKC,iBAAL;AACD,OARD,MAQO;AACL,aAAKL,MAAL,CAAYM,KAAZ,GAAoB,KAAK1P,KAAL,CAAWM,IAAX,CAAgBoF,IAApC;AACD;;AAED,WAAK0J,MAAL,CAAYzN,KAAZ,GAAoB,KAAKuD,MAAL,CAAYvD,KAAhC;AACA,WAAKyN,MAAL,CAAYvN,MAAZ,GAAqB,KAAKqD,MAAL,CAAYrD,MAAjC;AACD;;;qCAEgB;AAAA;;AAAE;AACjB,WAAK8N,aAAL,GAAqB,IAAIjQ,GAAJ,EAArB;AACA,UAAIkQ,WAAW1K,MAAf;;AAEA,UAAI,KAAK9I,QAAT,EAAmB;AACjB,YAAIyT,aAAa,SAAbA,UAAa,CAACrS,CAAD,EAAO;AACtB,cAAIA,EAAEsS,OAAF,IAAa,EAAjB,EAAqB;AAAE;AACrB,oBAAKR,iBAAL;AACA,gBAAI,QAAKA,iBAAL,GAAyB,CAA7B,EAAgC,QAAKA,iBAAL,GAAyB,QAAKC,aAAL,CAAmB7Q,MAAnB,GAA4B,CAArD;AACjC;AACD,cAAIlB,EAAEsS,OAAF,IAAa,EAAjB,EAAqB;AAAE;AACrB,oBAAKR,iBAAL;AACA,gBAAI,QAAKA,iBAAL,IAA0B,QAAKC,aAAL,CAAmB7Q,MAAjD,EAAyD,QAAK4Q,iBAAL,GAAyB,CAAzB;AAC1D;AACD,kBAAKG,iBAAL;AACD,SAVD;AAWAG,iBAASG,gBAAT,CAA0B,SAA1B,EAAqCF,UAArC,EAZiB,CAYiC;AAClD,aAAKF,aAAL,CAAmB7H,GAAnB,CAAuB,SAAvB,EAAkC+H,UAAlC;AACD,OAdD,MAcO;;AAGL,YAAMG,SAAS,KAAKC,KAAL,GAAa;AAC1BC,wBAAc,CADY;AAE1BC,+BAAqB,CAFK;AAG1BC,2BAAiB,IAHS;AAI1BC,iBAAO,KAJmB;AAK1BC,sBAAY,CALc;AAM1BpI,iBAAO,KANmB;AAO1BqI,eAAK;AAPqB,SAA5B;;AAWA;AACA;AACA;;AAEA,YAAMC,WAAW,IAAIC,aAAJ,EAAjB;;AAEA,YAAMC,gBAAgB,IAAIC,UAAJ,EAAtB;AACAzL,eAAO0L,KAAP,GAAeF,aAAf,CAA8BxL,OAAOsL,QAAP,GAAkBA,QAAlB;AAC9B,YAAMK,SAAS;AACb;AACA,SAAC,IAAD,EAAO,CAAC,EAAD,CAAP,CAFa;AAGb;AACA,SAAC,IAAD,EAAO,CAAC,EAAD,CAAP,CAJa;AAKb;AACA,SAAC,IAAD,EAAO,CAAC,EAAD,CAAP,CANa;AAOb;AACA,SAAC,OAAD,EAAU,CAAC,EAAD,EAAK,EAAL,CAAV,CARa;AASb;AACA,SAAC,KAAD,EAAQ,CAAC,EAAD,CAAR,CAVa,CAAf;;AAtBK;AAAA;AAAA;;AAAA;AAqCL,gCAA8BA,MAA9B,mIAAsC;AAAA;;AAAA;;AAAA,gBAA3BC,IAA2B;AAAA,gBAArBC,QAAqB;AAAA;AAAA;AAAA;;AAAA;AACpC,oCAAqBA,QAArB,mIAA+B;AAAA,oBAArBC,OAAqB;;AAC7BN,8BAAcO,WAAd,CAA0BH,IAA1B,EAAgCN,SAASU,MAAT,CAAgBF,OAAhB,EAAyBG,MAAzD;AACAT,8BAAcU,cAAd,CAA6BN,IAA7B,EAAmCN,SAASU,MAAT,CAAgBF,OAAhB,EAAyBK,OAA5D;AACD;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKrC;AA1CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2CLX,sBAAcY,EAAd,CAAiB,QAAjB,EAA2B;AAAA,iBAAMC,cAAab,aAAb,CAAN;AAAA,SAA3B;;AAEA,YAAMc,eAAe,CAArB;AACA,YAAMD,gBAAe,SAAfA,aAAe,QAAS;;AAE5B;AACAvB,iBAAOE,YAAP,GAAsB,CAAtB;AACAF,iBAAOG,mBAAP,GAA6B,CAA7B;AACAH,iBAAOI,eAAP,GAAyB,IAAzB;AACA,cAAIqB,KAAK,CAAT;AAAA,cAAYC,KAAK,CAAjB;AAAA,cAAoBrB,QAAQ,KAA5B;AAAA,cAAmCnI,QAAQ,KAA3C;AAAA,cAAkDqI,MAAM,KAAxD;;AAEA;AAR4B;AAAA;AAAA;;AAAA;AAS5B,kCAA2BK,MAAMe,KAAjC,mIAAwC;AAAA;;AAAA;;AAAA,kBAA9B1B,KAA8B;AAAA,kBAAvB2B,KAAuB;;AACtC,kBAAIC,UAAU,OAAOD,KAAP,KAAiB,WAA/B;AACA,sBAAQ3B,KAAR;AACE,qBAAK,IAAL;AACED,yBAAOE,YAAP,GAAsB2B,UAAUL,YAAV,GAAyBI,KAA/C;AACA;AACF,qBAAK,IAAL;AACE5B,yBAAOE,YAAP,GAAsB2B,UAAU,CAACL,YAAX,GAA0B,CAACI,KAAjD;AACA;AACF,qBAAK,IAAL;AACE5B,yBAAOG,mBAAP,GAA6B0B,UAAUL,YAAV,GAAyBI,KAAtD;AACA;AACF,qBAAK,IAAL;AACE5B,yBAAOG,mBAAP,GAA6B0B,UAAU,CAACL,YAAX,GAA0B,CAACI,KAAxD;AACA;AACF,qBAAK,KAAL;AACE5B,yBAAOI,eAAP,GAAyByB,UAAUL,YAAV,GAAyBI,KAAlD;AACA;AACF,qBAAK,KAAL;AACE5B,yBAAOI,eAAP,GAAyByB,UAAU,CAACL,YAAX,GAA0B,CAACI,KAApD;AACA;AACF,qBAAK,KAAL;AACEH,uBAAK,CAAL;AACApB,0BAAQ,IAAR;AACA;AACF,qBAAK,KAAL;AACEoB,uBAAK,CAAC,CAAN;AACApB,0BAAQ,IAAR;AACA;AACF,qBAAK,KAAL;AACEqB,uBAAK,CAAC,CAAN;AACArB,0BAAQ,IAAR;AACA;AACF,qBAAK,KAAL;AACEqB,uBAAK,CAAL;AACArB,0BAAQ,IAAR;AACA;AACF,qBAAK,OAAL;AACEA,0BAAQ,IAAR;AACA;AACF,qBAAK,OAAL;AACEnI,0BAAQ,IAAR;AACA;AACF,qBAAK,KAAL;AACEqI,wBAAM,IAAN;AACA;AA3CJ;AA6CD;;AAED;AA1D4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2D5B,cAAMuB,aAAa,IAAI1S,GAAJ,CAAQqS,EAAR,EAAYC,EAAZ,CAAnB;AACA1B,iBAAOM,UAAP,GAAoBwB,WAAWC,KAA/B;AACA/B,iBAAOK,KAAP,GAAeA,KAAf;AACAL,iBAAO9H,KAAP,GAAeA,KAAf;AACA8H,iBAAOO,GAAP,GAAaA,GAAb;AAED,SAjED;AAkENrL,eAAO8M,OAAP,GAAiBT,aAAjB;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAKA;;AAEA;;AA0IA;;AAEA,YAAMU,UAAU,IAAIC,YAAJ,EAAhjB;AACA,YAAM9P,MAAM,CAAZ;AACA,YAAM+P,OAAO/P,MAAM8P,QAAnB;;AAGA;;AAEAzB,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAACH,QAA5B,CAAhC,EAAuE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAvE;AACA1B,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAA3B,CAAhC;AACA9B,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAACL,QAA5B,CAAnC;AACAzB,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAA3B,CAAnC;;AAEA5B,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAAhC,EAAsE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAtE;AACA1B,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAA3B,CAAhC;AACA9B,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2BH,QAA3B,CAAnC;AACAzB,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAA3B,CAAnC;;AAEA5B,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAACH,QAA5B,CAAhC,EAAuE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAvE;AACA1B,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAACL,QAA5B,CAAnC;;AAEAzB,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAAhC,EAAsE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAtE;AACA1B,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAAnC;;AAGAzB,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAACH,QAA5B,CAAjC,EAAwE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAxE;AACA1B,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAACL,QAA5B,CAApC;;AAEAzB,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAAjC,EAAuE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAvE;AACA1B,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAApC;;AAEAzB,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBC,UAAhB,CAA2B,CAACH,QAA5B,CAAjC,EAAwE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAxE;AACA1B,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2B,CAACL,QAA5B,CAApC;;AAEAzB,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAAjC,EAAuE;AAAA,iBAAM9P,MAAMkQ,IAAIH,IAAhB;AAAA,SAAvE;AACA1B,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQI,IAAR,CAAa,CAAb,EAAgBG,UAAhB,CAA2BL,QAA3B,CAApC;;AAEA;;AAEAzB,sBAAcO,WAAd,CAA0B,OAA1B,EAAmCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAArD;AACAT,sBAAcU,cAAd,CAA6B,OAA7B,EAAsCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAxD;AACAX,sBAAcO,WAAd,CAA0B,OAA1B,EAAmCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAArD;AACAT,sBAAcU,cAAd,CAA6B,OAA7B,EAAsCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAxD;;AAEAX,sBAAcO,WAAd,CAA0B,OAA1B,EAAmCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAArD;AACAT,sBAAcU,cAAd,CAA6B,OAA7B,EAAsCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAxD;;AAEAX,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAAnD;AACAT,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAtD;AACAX,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAAnD;AACAT,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAtD;AACAX,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQf,MAAR,CAAe,CAAf,EAAkBC,MAAnD;AACAT,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQf,MAAR,CAAe,CAAf,EAAkBG,OAAtD;AACAX,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCgB,QAAQf,MAAR,CAAe,EAAf,EAAmBC,MAApD;AACAT,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCa,QAAQf,MAAR,CAAe,EAAf,EAAmBG,OAAvD;;AASA;;AAEA,YAAMoB,SAAS,IAAIC,WAAJ,EAAf;AACAxN,eAAOuN,MAAP,GAAgBA,MAAhB;;AAEA,YAAME,OAAOtO,SAASuO,aAAT,CAAuB,sBAAvB,CAAb;AACA,YAAMC,WAAWxO,SAASuO,aAAT,CAAuB,8BAAvB,CAAjB;AACA,YAAME,cAAczO,SAASuO,aAAT,CAAuB,iCAAvB,CAApB;;AAEA,YAAMG,YAAY,EAAlB;AACA,YAAMC,OAAO,GAAb;AACA,YAAMC,QAAQD,OAAOD,SAArB;AACA,YAAMG,cAAc,GAApB;;AAEA;AACAT,eAAOU,YAAP,CAAoB,aAApB,EAAmCR,IAAnC;AACAF,eAAOU,YAAP,CAAoB,WAApB,EAAiCN,QAAjC;AACAJ,eAAOU,YAAP,CAAoB,cAApB,EAAoCL,WAApC;AACAL,eAAOW,kBAAP,CAA0B,OAA1B,EAAmCT,IAAnC;;AAGAjC,sBAAcO,WAAd,CAA0B,IAA1B,EAAgCwB,OAAOvB,MAAP,CAAc,aAAd,EAA6BC,MAA7D;AACAT,sBAAcU,cAAd,CAA6B,IAA7B,EAAmCqB,OAAOvB,MAAP,CAAc,aAAd,EAA6BG,OAAhE;AACAX,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCwB,OAAOJ,IAAP,CAAY,OAAZ,EAAqBC,UAArB,CAAgC,CAACS,SAAjC,CAAjC,EAA8E;AAAA,iBAAK,CAACE,SAASD,OAAOT,CAAhB,CAAD,IAAuBU,KAA5B;AAAA,SAA9E;AACAvC,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCqB,OAAOJ,IAAP,CAAY,OAAZ,EAAqBG,UAArB,CAAgC,CAACO,SAAjC,CAApC;AACArC,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCwB,OAAOJ,IAAP,CAAY,OAAZ,EAAqBG,UAArB,CAAgCO,SAAhC,CAAjC,EAA6E;AAAA,iBAAK,CAACE,SAASD,OAAOT,CAAhB,CAAD,IAAuBU,KAA5B;AAAA,SAA7E;AACAvC,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCqB,OAAOJ,IAAP,CAAY,OAAZ,EAAqBC,UAArB,CAAgCS,SAAhC,CAApC;;AAEArC,sBAAcO,WAAd,CAA0B,KAA1B,EAAiCwB,OAAOvB,MAAP,CAAc,WAAd,EAA2BC,MAA5D;AACAT,sBAAcU,cAAd,CAA6B,KAA7B,EAAoCqB,OAAOvB,MAAP,CAAc,WAAd,EAA2BG,OAA/D;AACAX,sBAAcO,WAAd,CAA0B,OAA1B,EAAmCwB,OAAOvB,MAAP,CAAc,cAAd,EAA8BC,MAAjE;AACAT,sBAAcU,cAAd,CAA6B,OAA7B,EAAsCqB,OAAOvB,MAAP,CAAc,cAAd,EAA8BG,OAApE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAIgC,eAAe,CAAC,CAAD,EAAI,CAAJ,CAAnB;AAAA,YAA2BC,mBAAmB,CAAC,CAAD,EAAI,CAAJ,CAA9C,CAngBK,CAmgBiD;AACtD,YAAIC,YAAY,CAAhB;AAAA,YAAmBC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAA1B,CApgBK,CAogB6B;AAClC,YAAMC,gBAAgB,CAAtB;AACA,YAAMC,gBAAgB,CAAtB;AACA,YAAMC,gBAAgBD,gBAAgBD,aAAtC;AACAD,eAAOnX,IAAIuX,OAAJ,CAAYC,WAAZ,GAA2BxX,IAAIuX,OAAJ,CAAYC,WAAb,GAA4BxX,IAAIuX,OAAJ,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmCnX,GAAnC,CAAuCoX,MAAvC,CAA5B,GAA6E,CAAC,CAAD,EAAI,CAAJ,CAA9G;AACA;AACA,YAAI1X,IAAIoW,MAAJ,IAAc,KAAd,IAAuBvN,OAAO8O,iBAAP,IAA4BrR,SAAvD,EAAkE;AAChEuC,iBAAO+O,cAAP,GAAwB,UAAUzW,CAAV,EAAa;AACnC6V,2BAAe,CAAC7V,EAAE0W,4BAAF,CAA+B1R,CAAhC,EAAmChF,EAAE0W,4BAAF,CAA+BzR,CAAlE,CAAf;AACA;AACA;AACA;AACA;AACA;AACD,WAPD;;AASAuN,iBAAOmE,YAAP,GAAsB,YAAY;;AAEhC;;AAEI,8BAAcjP,OAAOkP,WAArB;AAAA,gCACef,YADf;AAAA;AAAA,gBACDgB,KADC;AAAA,gBACMC,KADN;AAAA,gBAC8B9R,CAD9B,GACuC6R,KADvC;AAAA,gBACiC5R,CADjC,GAC8C6R,KAD9C;;;AAGJ,gBAAIF,gBAAgB,EAApB,EAAwB;AACtB5R,kBAAI,CAAC8R,KAAL,EAAY7R,IAAI4R,KAAhB;AACD,aAFD,MAGK,IAAID,gBAAgB,CAAC,EAArB,EAAyB;AAC5B5R,kBAAI8R,KAAJ,EAAW7R,IAAI,CAAC4R,KAAhB;AACD,aAFI,MAGA,IAAID,gBAAgB,GAAhB,IAAuBA,gBAAgB,CAAC,GAA5C,EAAiD;AACpD5R,kBAAI,CAACA,CAAL,EAAQC,IAAI,CAACA,CAAb;AACD;;AAED6Q,+BAAmB,CAAC9Q,CAAD,EAAIC,CAAJ,CAAnB;AACAD,iBAAKgR,KAAK,CAAL,CAAL,CAlBgC,CAkBlB;AACd/Q,iBAAK+Q,KAAK,CAAL,CAAL;;AAEA,gBAAGnX,IAAIK,OAAJ,CAAYuT,KAAZ,CAAkBsE,cAArB,EAAqC;AAAE/R,kBAAI,CAACA,CAAL,CAAQC,IAAI,CAACA,CAAL;AAAQ;;AAEvD;;;AAGA,gBAAGD,IAAIiR,aAAP,EAAsB;AAAE;AACtB,kBAAGjR,IAAIkR,aAAP,EAAsB1D,OAAOG,mBAAP,GAA6B,CAACuD,gBAAgBlR,CAAjB,IAAsBmR,aAAnD,CAAtB,KACK3D,OAAOG,mBAAP,GAA6B,CAA7B;AACN,aAHD,MAGO,IAAG3N,IAAI,CAACiR,aAAR,EAAuB;AAAE;AAC9B,kBAAGjR,IAAI,CAACkR,aAAR,EAAuB1D,OAAOG,mBAAP,GAA6B,CAAC,CAACuD,aAAD,GAAiBlR,CAAlB,IAAuBmR,aAApD,CAAvB,KACK3D,OAAOG,mBAAP,GAA6B,CAAC,CAA9B;AACN,aAHM,MAGA;AAAE;AACPH,qBAAOG,mBAAP,GAA6B,CAA7B;AACD;;AAED,gBAAG1N,IAAIgR,aAAP,EAAsB;AAAE;AACtB,kBAAGhR,IAAIiR,aAAP,EAAsB1D,OAAOE,YAAP,GAAsB,CAACwD,gBAAgBjR,CAAjB,IAAsBkR,aAA5C,CAAtB,KACK3D,OAAOE,YAAP,GAAsB,CAAtB;AACN,aAHD,MAGO,IAAGzN,IAAI,CAACgR,aAAR,EAAuB;AAAE;AAC9B,kBAAGhR,IAAI,CAACiR,aAAR,EAAuB1D,OAAOE,YAAP,GAAsB,CAAC,CAACwD,aAAD,GAAiBjR,CAAlB,IAAuBkR,aAA7C,CAAvB,KACK3D,OAAOE,YAAP,GAAsB,CAAC,CAAvB;AACN,aAHM,MAGA;AAAE;AACPF,qBAAOE,YAAP,GAAsB,CAAtB;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA9L,cAAE,QAAF,EAAY8F,IAAZ,SAAuB1H,EAAE8C,KAAF,CAAQ,CAAR,CAAvB,aAAyC7C,EAAE6C,KAAF,CAAQ,CAAR,CAAzC;AAED,WArED;AAsED;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGD;AAEF;;;mCAEc;AACb,WAAKkP,oBAAL;AACA,WAAKC,uBAAL;AACA,WAAKC,oBAAL;AACD;;;2CAEsB;AACrB,UAAIzS,UAAU,KAAKA,OAAL,GAAe,EAA7B;;AAEAA,cAAQ0S,UAAR,GAAqB,GAArB;AACA1S,cAAQ2S,UAAR,GAAqB,EAACjT,OAAO,KAAKnF,OAAL,CAAamF,KAArB,EAA4BE,QAAQ,KAAKrF,OAAL,CAAaqF,MAAjD,EAArB;;AAEA,UAAIgT,OAAOnQ,KAAKoQ,IAAL,CAAU7S,QAAQ2S,UAAR,CAAmBjT,KAAnB,GAA2BM,QAAQ0S,UAA7C,CAAX;AAAA,UACEI,OAAOrQ,KAAKoQ,IAAL,CAAU7S,QAAQ2S,UAAR,CAAmB/S,MAAnB,GAA4BI,QAAQ0S,UAA9C,CADT;;AAGA1S,cAAQ+S,SAAR,GAAoB,EAApB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA/S,cAAQgT,cAAR,GAAyB,UAAUzS,CAAV,EAAaC,CAAb,EAAgB;AACvC,eAAQA,IAAIsS,IAAL,GAAavS,CAApB;AACD,OAFD;;AAIAP,cAAQiT,oBAAR,GAA+B,UAAUtW,CAAV,EAAa;AAC1C,eAAO,CAACA,IAAIiW,IAAL,EAAWnQ,KAAKyQ,KAAL,CAAWvW,IAAImW,IAAf,CAAX,CAAP;AACD,OAFD;;AAIA;AASA9S,cAAQmT,gBAAR,GAA2B,EAA3B;AACAnT,cAAQD,gBAAR,GAA2B;AACzBqT,eAAOC,OAAO,OAAP,CADkB;AAEzBC,kBAAUD,OAAO,UAAP,CAFe;AAGzBE,mBAAWF,OAAO,WAAP,CAHc;AAIzBG,qBAAaH,OAAO,aAAP,CAJY;;AAMzBI,iBAASJ,OAAO,SAAP,CANgB;AAOzBK,oBAAYL,OAAO,YAAP,CAPa;AAQzBM,qBAAaN,OAAO,aAAP,CARY;AASzBO,uBAAeP,OAAO,eAAP,CATU;;AAWzBQ,gBAAQR,OAAO,QAAP,CAXiB;AAYzBS,oBAAYT,OAAO,YAAP,CAZa;AAazBU,sBAAcV,OAAO,cAAP,CAbW;;AAezBW,iBAASX,OAAO,SAAP,CAfgB;AAgBzBY,mBAAWZ,OAAO,WAAP,CAhBc;AAiBzBa,wBAAgBb,OAAO,gBAAP,CAjBS;AAkBzBc,qBAAad,OAAO,aAAP,CAlBY;AAmBzBe,uBAAef,OAAO,eAAP,CAnBU;;AAqBzBgB,uBAAehB,OAAO,eAAP,CArBU;;AAuBzBiB,qBAAajB,OAAO,aAAP,CAvBY;AAwBzBkB,wBAAgBlB,OAAO,gBAAP,CAxBS;AAyBzBmB,2BAAmBnB,OAAO,mBAAP,CAzBM;;AA2BzBoB,gBAAQpB,OAAO,QAAP,CA3BiB,EA2BC;AAC1BqB,oBAAYrB,OAAO,YAAP,CA5Ba;;AA8BzBpT,cAAMoT,OAAO,MAAP,CA9BmB;AA+BzB1R,sBAAc0R,OAAO,cAAP;AA/BW,OAA3B;;AAmCA,OAACT,OAAOE,IAAR,EAAcpW,KAAd,CAAoB,YAAM;AACxB,YAAI+E,MAAM,EAAV;AADwB;AAAA;AAAA;;AAAA;AAExB,gCAAkBkT,OAAOC,IAAP,CAAY5U,QAAQD,gBAApB,CAAlB;AAAA,gBAASoG,KAAT;AAAyD1E,gBAAIzB,QAAQD,gBAAR,CAAyBoG,KAAzB,CAAJ,IAAuC,IAAInF,GAAJ,EAAvC;AAAzD;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGxBhB,gBAAQ+S,SAAR,CAAkBnW,IAAlB,CAAuB6E,GAAvB;AACD,OAJD;;AAMA;AAKD;;;0CAEqBoT,Y,EAAc;AAAA;;AAClC,WAAKC,uBAAL,CAA6BD,YAA7B;;AAEI,cAAIA,aAAa9B,SAAb,GAAyB,IAAI/R,GAAJ,EAA7B;AAAA,UACF2E,CADE,GACEkP,aAAatX,MADf;AAAA,kBAEO,CAACsX,aAAa3X,QAAb,CAAsBqD,CAAvB,EAA0BsU,aAAa3X,QAAb,CAAsBsD,CAAhD,CAFP;AAAA,UAEDD,CAFC;AAAA,UAEEC,CAFF;;;AAIJ,OAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAC,CAAL,CAAT,EAAkB,CAAC,CAAC,CAAF,EAAK,CAAL,CAAlB,EAA2B,CAAC,CAAD,EAAI,CAAJ,CAA3B,EAAmCzD,OAAnC,CAA2C,6BAAqB;AAC9D,YAAIgY,UAAUxU,IAAKoF,IAAIqP,kBAAkB,CAAlB,CAAvB;AAAA,YACEC,UAAUzU,IAAKmF,IAAIqP,kBAAkB,CAAlB,CADrB;;AAGA,YAAIE,aAAazS,KAAKyQ,KAAL,CAAW6B,UAAU,QAAK/U,OAAL,CAAa0S,UAAlC,CAAjB;AAAA,YACEyC,aAAa1S,KAAKyQ,KAAL,CAAW+B,UAAU,QAAKjV,OAAL,CAAa0S,UAAlC,CADf;AAAA,YAEEM,iBAAiB,QAAKhT,OAAL,CAAagT,cAAb,CAA4BkC,UAA5B,EAAwCC,UAAxC,CAFnB;;AAIA,YAAI,QAAKnV,OAAL,CAAa+S,SAAb,CAAuBC,cAAvB,CAAJ,EAA4CoC,EAAE7T,GAAF,CAAMyR,cAAN;AAC7C,OATD;;AAPkC;AAAA;AAAA;;AAAA;AAkBlC,+BAA2BoC,CAA3B;AAAA,cAASpC,cAAT;AAAA;AAAA;AAAA;;AAAA;AACE,mCAAkB6B,aAAa9U,gBAA/B;AAAA,kBAASoG,KAAT;;AACE,mBAAKnG,OAAL,CAAa+S,SAAb,CAAuBC,cAAvB,EAAuC7M,KAAvC,EAA8C5E,GAA9C,CAAkDsT,YAAlD;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBnC;;;4CAEuBA,Y,EAAc;AACpC,UAAIA,aAAa9B,SAAjB,EAA4B;AAAA;AAAA;AAAA;;AAAA;AAC1B,iCAAc8B,aAAa9B,SAA3B;AAAA,gBAASpW,CAAT;AAAA;AAAA;AAAA;;AAAA;AACE,qCAAkBkY,aAAa9U,gBAA/B;AAAA,oBAASoG,KAAT;;AACE,qBAAKnG,OAAL,CAAa+S,SAAb,CAAuBpW,CAAvB,EAA0BwJ,KAA1B,EAAiCyE,MAAjC,CAAwCiK,YAAxC;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI3B;AACF;;;8CAEyB;AAAA;;AACxB,UAAIQ,SAAS,KAAKrV,OAAL,CAAamT,gBAA1B;AAAA,UACEmC,SAAS,KAAKtV,OAAL,CAAaD,gBADxB;;AAIA,UAAI,CAAC,KAAK5F,QAAV,EAAoB;;AAElB;AACAkb,eAAOzY,IAAP,CAAY,CACV0Y,OAAO5B,UADG,EAEV4B,OAAO9B,WAFG,EAGV,UAAC+B,MAAD,EAAStX,IAAT,EAAkB;AAChB,cAAI,CAACsX,OAAOnW,QAAR,IAAoB,CAACnB,KAAKmB,QAA9B,EAAwC;AACtC,oBAAKoW,UAAL,CAAgBvX,KAAKO,KAAL,CAAWb,EAA3B,EAA+B4X,OAAOE,EAAtC,EAA0CF,OAAOG,OAAjD;AACA,oBAAKC,YAAL,CAAkBJ,OAAO5X,EAAzB;AACD;AACF,SARS,CAAZ;;AAWA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAO5B,UADG,EAEV4B,OAAOvB,YAFG,EAGV,UAACwB,MAAD,EAAStP,KAAT,EAAmB;AACjB,cAAI,CAACsP,OAAOnW,QAAR,IAAoB,CAAC6G,MAAM7G,QAA/B,EAAyC;AACvC,oBAAKwW,WAAL,CAAiB3P,MAAMtI,EAAvB,EAA2B4X,OAAOE,EAAlC;AACA,gBAAIF,OAAOE,EAAP,GAAYxP,MAAMwP,EAAtB,EAA0B,QAAKE,YAAL,CAAkBJ,OAAO5X,EAAzB;AAC3B;AACF,SARS,CAAZ;;AAWA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAO5B,UADG,EAEV4B,OAAOd,iBAFG,EAGV,UAACe,MAAD,EAAStY,UAAT,EAAwB;AACtB,cAAI,CAACsY,OAAOnW,QAAZ,EAAsB;AACpB,oBAAKuW,YAAL,CAAkBJ,OAAO5X,EAAzB;AACD;AACF,SAPS,CAAZ;;AAUA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAO5B,UADG,EAEV4B,OAAO1B,aAFG,EAGV,UAACiC,OAAD,EAAUC,OAAV,EAAsB;AACpB,cAAI,CAACD,QAAQzW,QAAT,IAAqB,CAAC0W,QAAQ1W,QAAlC,EAA4C;AAC1C,oBAAKuW,YAAL,CAAkBE,QAAQlY,EAA1B;AACA,oBAAKgY,YAAL,CAAkBG,QAAQnY,EAA1B;AACD;AACF,SARS,CAAZ;;AAWA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAO5B,UADG,EAEV4B,OAAOlB,aAFG,EAGV,UAACmB,MAAD,EAAS1W,MAAT,EAAoB;AAClB,cAAI,CAAC0W,OAAOQ,IAAR,IAAgBlX,OAAOmX,MAAvB,IAAiC,CAACT,OAAOnW,QAAzC,IAAqD,CAACP,OAAOoX,QAA7D,IAAyE,CAACpX,OAAOO,QAArF,EAA+F;AAC7F;AACAmW,mBAAOQ,IAAP,GAAc,IAAd;AACA,oBAAKG,YAAL,CAAkBrX,OAAOJ,MAAP,CAAcD,KAAd,CAAoBb,EAAtC,EAA0C4X,OAAOE,EAAjD,EAAqDF,OAAOG,OAA5D;AACD;AACF,SATS,CAAZ;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAL,eAAOzY,IAAP,CAAY,CACV0Y,OAAOhC,QADG,EAEVgC,OAAOrV,IAFG,EAGV,UAAChC,IAAD,EAAO4B,IAAP,EAAgB;AACd,cAAI,CAAC5B,KAAKmB,QAAN,IAAkBS,KAAKsW,IAA3B,EACE,IAAGlY,KAAKmY,aAAL,EAAH,EACE,QAAKC,UAAL,CAAgBpY,IAAhB;AACL,SAPS,CAAZ;;AAUA;AACAoX,eAAOzY,IAAP,CAAY,CACV0Y,OAAOhC,QADG,EAEVgC,OAAOpB,cAFG,EAGV,UAACjW,IAAD,EAAOqY,IAAP,EAAgB;AACd,cAAG,CAACrY,KAAKY,MAAL,CAAY0X,KAAhB,EAAuB;AACrBtY,iBAAKY,MAAL,CAAY2X,wBAAZ;AACD,WAFD,MAEO,IAAI,CAACF,KAAKlX,QAAN,IAAkBnB,KAAKwY,eAAL,EAAtB,EACLxY,KAAKY,MAAL,CAAYmX,MAAZ,GAAqB,KAArB;AACH,SARS,CAAZ;;AAWA;AACAX,eAAOzY,IAAP,CAAY,CACV0Y,OAAO/B,SADG,EAEV+B,OAAOrB,SAFG,EAGV,UAAChW,IAAD,EAAOY,MAAP,EAAkB;AAChB,cAAI,CAACZ,KAAKmB,QAAN,IAAkB,CAAC,CAACnB,KAAK4B,IAAzB,IAAiC,CAAChB,OAAOoX,QAA7C,EACEpX,OAAO6X,OAAP,GAAiB,IAAjB;AACH,SANS,CAAZ;;AASA;AACArB,eAAOzY,IAAP,CAAY,CACV0Y,OAAOjB,aADG,EAEViB,OAAOvB,YAFG,EAGV,UAACzF,GAAD,EAAMrI,KAAN,EAAgB;AACd,cAAI,CAACqI,IAAIlP,QAAL,IAAiB,CAAC6G,MAAM7G,QAA5B,EAAsC;AACpC,oBAAQkP,IAAIzQ,IAAZ;AACE,mBAAK,WAAL;AACA,mBAAK,UAAL;AACE;AACA;AACA;AACF,mBAAK,YAAL;AACA,mBAAK,SAAL;AACEyQ,oBAAIqI,OAAJ;AACA;AATJ;AAWD;AACF,SAjBS,CAAZ;;AAoBA;AACAtB,eAAOzY,IAAP,CAAY,CACV0Y,OAAOjB,aADG,EAEViB,OAAO9B,WAFG,EAGV,UAAClF,GAAD,EAAMrQ,IAAN,EAAe;AACb,cAAI,CAACqQ,IAAIlP,QAAL,IAAiB,CAACnB,KAAKmB,QAA3B,EAAqC;AACnC,gBAAIkP,IAAIzQ,IAAJ,IAAY,SAAhB,EAA2B;AACzB,sBAAK2X,UAAL,CAAgBvX,KAAKO,KAAL,CAAWb,EAA3B,EAA+B2Q,IAAImH,EAAnC,EAAuCnH,IAAItQ,MAA3C;AACA,sBAAK4Y,SAAL,CAAetI,IAAI3Q,EAAnB;AACD;AACF;AACF,SAVS,CAAZ;;AAaA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAOjB,aADG,EAEViB,OAAOd,iBAFG,EAGV,UAAClG,GAAD,EAAMrR,UAAN,EAAqB;AACnB,cAAI,CAACqR,IAAIlP,QAAT,EAAmB,QAAKwX,SAAL,CAAetI,IAAI3Q,EAAnB;AACpB,SALS,CAAZ;;AAQA;AACA0X,eAAOzY,IAAP,CAAY,CACV0Y,OAAOjB,aADG,EAEViB,OAAOlB,aAFG,EAGV,UAAC9F,GAAD,EAAMzP,MAAN,EAAiB;AACf,cAAI,CAACyP,IAAIlP,QAAL,IAAiBP,OAAOmX,MAAxB,IAAkC,CAACnX,OAAOoX,QAA1C,IAAsD,CAACpX,OAAOO,QAAlE,EAA4E;AAC1E,oBAAQkP,IAAIzQ,IAAZ;AACE,mBAAK,WAAL;AACA,mBAAK,UAAL;AACE;AACA;AACA;AACF,mBAAK,YAAL;AACA,mBAAK,SAAL;AACEyQ,oBAAIqI,OAAJ;AACA;AATJ;AAWD;AACF,SAjBS,CAAZ;;AAoBA;AACAtB,eAAOzY,IAAP,CAAY,CACV0Y,OAAOxB,UADG,EAEVwB,OAAOxB,UAFG,EAGV,UAAC+C,OAAD,EAAUC,OAAV,EAAsB;AACpB,cAAID,WAAWC,OAAX,IAAsB,CAACD,QAAQzX,QAA/B,IAA2C,CAAC0X,QAAQ1X,QAAxD,EACE,IAAIiB,QAAQ0W,OAAR,CAAgBF,OAAhB,EAAyBC,OAAzB,IAAoC,GAAxC,EAA6C;AAC3C,oBAAKE,WAAL,CAAiBH,QAAQlZ,EAAzB;AACL,SAPS,CAAZ;AAUD;;AAED;AACA0X,aAAOzY,IAAP,CAAY,CACV0Y,OAAOlC,KADG,EAEVkC,OAAOb,MAFG,EAGV,UAACxW,IAAD,EAAOgZ,MAAP,EAAkB;AAChB,YAAI,CAAChZ,KAAKmB,QAAV,EAAoB;AAClB,cAAInB,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAAhB,IAA0B2Z,OAAOja,IAArC,EAA2C;AACzC;AACD,WAFD,MAEO;AACLiB,iBAAKiZ,QAAL,GAAgB,IAAhB;AACD;AACF;AACF,OAXS,CAAZ;;AAcA;AACA7B,aAAOzY,IAAP,CAAY,CACV0Y,OAAOlC,KADG,EAEVkC,OAAO3T,YAFG,EAGV,UAAC1D,IAAD,EAAOyD,GAAP,EAAe;AACb,YAAI,CAACzD,KAAKmB,QAAV,EAAoB;AAClBiB,kBAAQ8W,MAAR,CAAelZ,IAAf,EAAqByD,GAArB;AACD;AACF,OAPS,CAAZ;;AAUA;AACA2T,aAAOzY,IAAP,CAAY,CACV0Y,OAAO7B,OADG,EAEV6B,OAAO3T,YAFG,EAGV,UAAC4T,MAAD,EAAS7T,GAAT,EAAiB;AACf,YAAI,CAAC6T,OAAOnW,QAAZ,EAAsB;AACpB,cAAIiB,QAAQ0W,OAAR,CAAgBxB,MAAhB,EAAwB7T,GAAxB,IAA+B,GAAnC,EAAwC;AACtCrB,oBAAQ8W,MAAR,CAAe5B,MAAf,EAAuB7T,GAAvB;AACD,WAFD,MAEO;AACL,oBAAKiU,YAAL,CAAkBJ,OAAO5X,EAAzB;AACD;AACF;AACF,OAXS,CAAZ;;AAcA;AACA0X,aAAOzY,IAAP,CAAY,CACV0Y,OAAOtB,OADG,EAEVsB,OAAOrV,IAFG,EAGV,UAACpB,MAAD,EAASgB,IAAT,EAAkB;AAChB,YAAI,CAAChB,OAAOmX,MAAZ,EAAoB;AAClB3V,kBAAQ8W,MAAR,CAAetY,OAAOJ,MAAtB,EAA8BoB,IAA9B;AACD;AACF,OAPS,CAAZ;;AAUA;AACAwV,aAAOzY,IAAP,CAAY,CACV0Y,OAAOtB,OADG,EAEVsB,OAAOtB,OAFG,EAGV,UAACoD,OAAD,EAAUC,OAAV,EAAsB;AACpB,YAAI,CAACD,QAAQpB,MAAT,IAAmBqB,QAAQrB,MAA/B,EAAuC;AACrC3V,kBAAQ8W,MAAR,CAAeC,QAAQ3Y,MAAvB,EAA+B4Y,OAA/B;AACD,SAFD,MAGA,IAAI,CAACA,QAAQrB,MAAT,IAAmBoB,QAAQpB,MAA/B,EAAuC;AACrC3V,kBAAQ8W,MAAR,CAAeE,QAAQ5Y,MAAvB,EAA+B2Y,OAA/B;AACD;AACF,OAVS,CAAZ;AAaD;;;2CAEsB;AACrB,UAAIE,YAAY,EAAhB;;AAEAA,gBAAUC,WAAV,GAAwB,IAAIvW,GAAJ,EAAxB;AACAsW,gBAAUE,SAAV,GAAsB,IAAIxW,GAAJ,EAAtB;;AAEAsW,gBAAUG,OAAV,GAAoB,IAAIzW,GAAJ,EAApB;;AAEA;AACA,WAAKsW,SAAL,GAAiBA,SAAjB;AACD;;;gCAEW;AACV,UAAII,MAAM,SAANA,GAAM;AAAA,eAAK,OAAOpH,CAAZ;AAAA,OAAV;AACArN,aAAO0U,iBAAP,GACE1U,OAAO2U,qBAAP,IACA3U,OAAO4U,2BADP,IAEA5U,OAAO6U,wBAFP,IAGA7U,OAAO8U,sBAHP,IAIA9U,OAAO+U,uBAJP,IAKA,UAAUC,QAAV,EAAoB;AAClBhV,eAAOiV,UAAP,CAAkBD,QAAlB,EAA4BP,IAAI,EAAJ,CAA5B;AACD,OARH;;AAUA,WAAKS,OAAL;AACD;;;8BAES;AACR,WAAKC,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA;AACA,WAAKC,EAAL,GAAU,CAAV;AACD;;;+BAEU;AACT,UAAIC,MAAO,IAAIH,IAAJ,EAAD,CAAaC,OAAb,EAAV;AACA,WAAKC,EAAL,GAAU,CAACC,MAAM,KAAKJ,SAAZ,IAAyB,IAAnC;AACA,WAAKA,SAAL,GAAiBI,GAAjB;AACD;;;sCAEiB;AAChB,WAAKC,2BAAL;AACA,WAAKC,8BAAL;AACA,WAAKC,mBAAL;AACD;;;kDAE6B;AAAA;;AAC5B,UAAI,CAAC,KAAKxe,QAAV,EAAoB;AAClB;AACA,aAAKye,UAAL,GAAkB,KAAKrc,KAAL,CAAWsc,MAAX,CAAkB;AAAA,iBAAQ7b,KAAKM,MAAL,IAAe,QAAKS,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBxB,IAAtB,CAA2BM,MAAlD;AAAA,SAAlB,CAAlB;AACA,aAAKwb,YAAL,GAAoB,KAAKF,UAAL,CAAgBG,MAAhB,CAAuB,UAAC3X,IAAD,EAAOpE,IAAP;AAAA,iBAAgBoE,KAAK4X,MAAL,CAAYhc,KAAKQ,OAAjB,CAAhB;AAAA,SAAvB,EAAkE,EAAlE,CAApB;;AAEA,aAAKQ,MAAL,GAAc,KAAKD,KAAL,CAAWM,IAAX,CAAgBG,KAA9B;AACA,aAAKxB,IAAL,GAAY,KAAKgB,MAAL,CAAYhB,IAAxB;AACD;AACF;;;qDAEgC;AAAA;;AAC/B;;AAMA;AACA,WAAKT,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzB,YAAIkc,UAAUjc,KAAKC,UAAnB;AACAgc,gBAAQlZ,gBAAR,GAA2B,CAAC,QAAKC,OAAL,CAAaD,gBAAb,CAA8BuU,WAA/B,EAA4C,QAAKtU,OAAL,CAAaD,gBAAb,CAA8B0U,MAA1E,CAA3B,CAFyB,CAEoF;AAC7G,YAAIzX,QAAQ,QAAKA,IAAjB,EAAuB;AACrBic,kBAAQlZ,gBAAR,CAAyBnD,IAAzB,CAA8B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8BwU,cAA5D;AACA0E,kBAAQlZ,gBAAR,CAAyBnD,IAAzB,CAA8B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8B2U,UAA5D;AACD,SAHD,MAGO;AACLuE,kBAAQlZ,gBAAR,CAAyBnD,IAAzB,CAA8B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8ByU,iBAA5D;AACD;AACD,gBAAKtU,qBAAL,CAA2B+Y,OAA3B;AACD,OAVD;;AAYA;AACA,WAAKlb,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;AACzBkB,aAAK8B,gBAAL,GAAwB,CAAC,QAAKC,OAAL,CAAaD,gBAAb,CAA8BqT,KAA/B,CAAxB;AACA,YAAInV,QAAQ,QAAKF,KAAL,CAAWM,IAAvB,EAA6BJ,KAAK8B,gBAAL,CAAsBnD,IAAtB,CAA2B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8BuT,QAAzD;AAC7BrV,aAAK8B,gBAAL,CAAsBnD,IAAtB,CAA4BqB,KAAKO,KAAL,CAAWxB,IAAX,IAAmB,QAAKA,IAAzB,GAAiC,QAAKgD,OAAL,CAAaD,gBAAb,CAA8BwT,SAA/D,GAA2E,QAAKvT,OAAL,CAAaD,gBAAb,CAA8ByT,WAApI;AACD,OAJD;;AAMA;AACA,WAAKzV,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;AACzB,YAAM8B,SAASZ,KAAKY,MAApB;AACAA,eAAOkB,gBAAP,GAA0B,CAAC,QAAKC,OAAL,CAAaD,gBAAb,CAA8B0U,MAA/B,EAAuC,QAAKzU,OAAL,CAAaD,gBAAb,CAA8BiU,OAArE,CAA1B;AACA,YAAI/V,KAAKO,KAAL,CAAWxB,IAAX,KAAoB,QAAKA,IAA7B,EAAmC;AACjC6B,iBAAOkB,gBAAP,CAAwBnD,IAAxB,CAA6B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8BoU,WAA3D;AACD,SAFD,MAEO;AACLtV,iBAAOkB,gBAAP,CAAwBnD,IAAxB,CAA6B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8BqU,aAA3D;AACD;AACD,YAAG,QAAKpW,MAAL,CAAYC,IAAZ,KAAqBA,IAAxB,EAA8B;AAC5BY,iBAAOkB,gBAAP,CAAwBnD,IAAxB,CAA6B,QAAKoD,OAAL,CAAaD,gBAAb,CAA8BkU,SAA3D;AACAhW,eAAKa,UAAL,CAAgBiB,gBAAhB,GAAmC,CAAC,QAAKC,OAAL,CAAaD,gBAAb,CAA8BmU,cAA/B,CAAnC;AACD;AACF,OAZD;AAaD;;;0CAEqB;AACpB;;AAEA;AACA;;AAEA;AACA,WAAKgF,4BAAL;AACD;;;mDAG8B;AAAA;;AAC7B,UAAIC,KAAKzf,cAAc8Q,cAAd,GAA+B,EAAxC;;AAEA;AACA2O,SAAGla,OAAH,GAAa,EAAb;AACA,WAAK1C,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;;AAEzB;AACA,YAAIQ,SAAS6b,OAAO3S,KAAP,CAAa4S,UAA1B;;AAEA,YAAI1O,IAAI,IAAI/H,SAASgC,KAAb,CACNlL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkC,QAAKnJ,KAAL,CAAWS,KAAKM,MAAhB,EAAwB+I,KAA1D,EAAiE9I,MAAjE,CADM,CAAR;;AAIA,YAAIqI,IAAIrI,SAAS,GAAjB;AACA,YAAI+b,IAAI,IAAI1W,SAASyB,SAAb,EAAR;AACAsG,UAAEpE,KAAF,GAAU,GAAV;AACA+S,UAAE5U,QAAF,CAAWiG,CAAX;AACA2O,UAAErU,KAAF,CAAQ,CAACW,CAAT,EAAY,CAACA,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,IAAI,CAA3B;AACA;;AAEAuT,WAAGla,OAAH,CAAWjC,KAAKM,MAAhB,IAA0Bgc,EAAExT,WAA5B;AACD,OAjBD;;AAmBA;AACAqT,SAAGja,MAAH,GAAY;AACVqa,kBAAU,EADA;AAEVvD,gBAAQ,EAFE;AAGVwD,eAAO;AAHG,OAAZ;AAKA,WAAKjd,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;;AAEzB;AACA,YAAIQ,SAASkc,MAAMhT,KAAN,CAAY4S,UAAzB;;AAGA,YAAIlZ,OAAO,IAAIyC,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkC,QAAKnJ,KAAL,CAAWS,KAAKM,MAAhB,EAAwB+I,KAA1D,EAAiE9I,MAAjE,CAAnB,CAAX;AAAA,YACEmc,SAAS,IAAI9W,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuB6U,YAAvB,CAAoC,QAAKpd,KAAL,CAAWS,KAAKM,MAAhB,EAAwB+I,KAA5D,EAAmE9I,MAAnE,CAAnB,CADX;;AAGA,YAAIqI,IAAIrI,SAAS,GAAjB;AACA,YAAI+b,UAAJ;;AAEA;AACAA,YAAI,IAAI1W,SAASyB,SAAb,EAAJ;AACAlE,aAAKoG,KAAL,GAAa,IAAb;AACA+S,UAAE5U,QAAF,CAAWvE,IAAX;AACAmZ,UAAErU,KAAF,CAAQ,CAACW,CAAT,EAAY,CAACA,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,IAAI,CAA3B;AACAuT,WAAGja,MAAH,CAAUsa,KAAV,CAAgBxc,KAAKM,MAArB,IAA+Bgc,EAAExT,WAAjC;;AAEA;AACA;AACA;AACAwT,YAAI,IAAI1W,SAASyB,SAAb,EAAJ;AACAiV,UAAE5U,QAAF,CAAWvE,IAAX;AACAmZ,UAAErU,KAAF,CAAQ,CAACW,CAAT,EAAY,CAACA,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,IAAI,CAA3B;AACAuT,WAAGja,MAAH,CAAUqa,QAAV,CAAmBvc,KAAKM,MAAxB,IAAkCgc,EAAExT,WAApC;;AAEA;AACA;AACA;AACAwT,YAAI,IAAI1W,SAASyB,SAAb,EAAJ;AACAiV,UAAE5U,QAAF,CAAWvE,IAAX;AACA;AACAmZ,UAAErU,KAAF,CAAQ,CAACW,CAAT,EAAY,CAACA,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,IAAI,CAA3B;AACAuT,WAAGja,MAAH,CAAU8W,MAAV,CAAiBhZ,KAAKM,MAAtB,IAAgCgc,EAAExT,WAAlC;AACD,OAnCD;;AAqCA;AACA,UAAI,KAAK3L,QAAT,EAAmB,OApEU,CAoEF;AAC3Bgf,SAAG1P,OAAH,GAAa,EAACvK,QAAQ,EAAT,EAAb;AACA,WAAK3C,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzB;AACA,YAAIQ,SAASkc,MAAMhT,KAAN,CAAY4S,UAAZ,GAAyB,QAAK5V,IAAL,CAAUc,OAAV,CAAkBkF,OAAlB,CAA0BjH,KAAhE;;AAEA,YAAIrC,OAAO,IAAIyC,SAASgC,KAAb,CAAmBlL,cAAcoL,QAAd,CAAuBY,UAAvB,CAAkCkU,MAAMC,GAAN,CAAU,QAAKtd,KAAL,CAAWS,KAAKM,MAAhB,EAAwB+I,KAAlC,EAAyC,SAAzC,EAAoD,EAApD,CAAlC,EAA2F9I,MAA3F,CAAnB,CAAX;;AAEA,YAAIqI,IAAIrI,SAAS,GAAjB;AACA;AACA4C,aAAK8E,KAAL,CAAW,CAACW,CAAZ,EAAe,CAACA,CAAhB,EAAmBA,IAAI,CAAvB,EAA0BA,IAAI,CAA9B;AACAuT,WAAG1P,OAAH,CAAWvK,MAAX,CAAkBlC,KAAKM,MAAvB,IAAiC6C,KAAK2F,WAAtC;AACD,OAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;gCAEW;AAAA;;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAKrK,SAAL,CAAec,KAAf,CAAqBQ,OAArB,CAA6B,UAACC,IAAD,EAAOL,CAAP,EAAa;AACxC,gBAAK9B,IAAL,CAAU0E,MAAV,CAAiB5C,CAAjB,IAAsB,GAAtB;AACD,OAFD;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAED;;;2BAGM;AAAA;;AACL;AACA,WAAKmd,QAAL;AACA,WAAKC,MAAL;AACA,WAAKve,GAAL;AACA;;AAEA;;AAEAmc,wBAAkB;AAAA,eAAM,QAAK9c,IAAL,CAAUwE,KAAV,GAAkB,IAAlB,GAAyB,QAAKtF,IAAL,EAA/B;AAAA,OAAlB;AACD;;;6BAEQ;AACP;AACA;AACA;AACA,UAAIigB,OAAO,KAAKnf,IAAL,CAAUuE,QAArB;AACA,UAAI,CAAC4a,IAAL,EAAW,KAAKC,WAAL;AACX,WAAKC,WAAL,GANO,CAMa;AACpB,UAAI,CAACF,IAAL,EAAW,KAAKG,kBAAL;AACX;;AAEA,UAAI,CAACH,IAAL,EAAW,KAAKI,UAAL;;AAEX,WAAKC,UAAL;AACD;;;kCAEa;AACZ;AACA,UAAG,CAAC,KAAKlgB,QAAT,EAAmB,IAAG,KAAK6T,KAAL,CAAWkE,YAAd,EAA4B,KAAKlE,KAAL,CAAWkE,YAAX;AAChD;;AAED;;;;kCAEc;AACZ,WAAKoI,WAAL;AACA,WAAKC,aAAL;;AAEA,WAAKC,aAAL;AACA,WAAKC,YAAL;AACA,WAAKC,UAAL;AACA,WAAKC,YAAL;AACD;;;kCAEa;AAAA;AAAA;AAAA;;AAAA;AACZ,+BAAiB,KAAK5c,KAAtB,wIAA6B;AAAA,cAApBE,IAAoB;;;AAE3BA,eAAK8b,MAAL,CAAY,KAAKxB,EAAjB;;AAEA,cAAIta,QAAQ,KAAKF,KAAL,CAAWM,IAAnB,IAA2B,CAACJ,KAAKmB,QAArC,EAA+C;;AAE7C,gBAAM4O,QAAQ,KAAKA,KAAnB;;AAEA;AACA/P,iBAAKgQ,YAAL,GAAoBhQ,KAAK2c,yBAAL,GAAiC5M,MAAMC,YAA3D;AACAhQ,iBAAK4c,oBAAL,GAA4B5c,KAAK6c,0BAAL,GAAkC9M,MAAME,mBAApE;AACAjQ,iBAAK8c,oBAAL,GAA4B/M,MAAMK,UAAlC;AACA,gBAAGL,MAAMG,eAAN,KAA0B,IAA7B,EACElQ,KAAK+c,gBAAL,GAAwB/c,KAAKgd,0BAAL,GAAkCjN,MAAMG,eAAhE;;AAEF,gBAAGH,MAAMI,KAAT,EAAgB;AACd,kBAAGnQ,KAAKY,MAAL,CAAYmX,MAAf,EAAuB;AACrB,oBAAG/X,KAAKid,QAAL,EAAH,EACE,KAAKC,SAAL,CAAeld,IAAf;AACH,eAHD,MAGO;AACLA,qBAAKY,MAAL,CAAYmX,MAAZ,GAAqB,IAArB;AACD;AACF;;AAGD,gBAAGhI,MAAM/H,KAAT,EAAgB;AACd,kBAAGhI,KAAKmd,QAAL,EAAH,EAAoB;AAClB,uBAAMnd,KAAKod,iBAAX;AAA8B,uBAAKrE,WAAL,CAAiB/Y,KAAKqd,aAAL,EAAjB;AAA9B,iBACA,KAAKC,QAAL,CAActd,IAAd;AACD;AACF;AACD,gBAAG+P,MAAMM,GAAT,EAAc;AACZ,kBAAGrQ,KAAK4B,IAAR,EAAc;AACZ,qBAAK2b,WAAL;AACD,eAFD,MAEO;AACL,oBAAGvd,KAAKwd,MAAL,EAAH,EACE,KAAKC,MAAL,CAAYzd,IAAZ;AACH;AACF;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED;AACA,cAAI0H,IAAI1H,KAAKV,MAAL,GAAc,CAAtB;AACA,cAAIU,KAAKf,QAAL,CAAcqD,CAAd,GAAkBoF,CAAlB,GAAsB,CAA1B,EAA6B;AAC3B1H,iBAAKf,QAAL,CAAcqD,CAAd,GAAkBoF,CAAlB;AACA1H,iBAAK0d,QAAL,CAAcpb,CAAd,GAAkB,CAAlB;AACD;AACD,cAAItC,KAAKf,QAAL,CAAcsD,CAAd,GAAkBmF,CAAlB,GAAsB,CAA1B,EAA6B;AAC3B1H,iBAAKf,QAAL,CAAcsD,CAAd,GAAkBmF,CAAlB;AACA1H,iBAAK0d,QAAL,CAAcnb,CAAd,GAAkB,CAAlB;AACD;AACD,cAAIvC,KAAKf,QAAL,CAAcqD,CAAd,GAAkBoF,CAAlB,GAAsB,KAAKpL,OAAL,CAAamF,KAAvC,EAA8C;AAC5CzB,iBAAKf,QAAL,CAAcqD,CAAd,GAAkB,KAAKhG,OAAL,CAAamF,KAAb,GAAqBiG,CAAvC;AACA1H,iBAAK0d,QAAL,CAAcpb,CAAd,GAAkB,CAAlB;AACD;AACD,cAAItC,KAAKf,QAAL,CAAcsD,CAAd,GAAkBmF,CAAlB,GAAsB,KAAKpL,OAAL,CAAaqF,MAAvC,EAA+C;AAC7C3B,iBAAKf,QAAL,CAAcsD,CAAd,GAAkB,KAAKjG,OAAL,CAAaqF,MAAb,GAAsB+F,CAAxC;AACA1H,iBAAK0d,QAAL,CAAcnb,CAAd,GAAkB,CAAlB;AACD;;AAED,eAAKN,qBAAL,CAA2BjC,IAA3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACD;AAtJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuJb;;;oCAEe;AACd,UAAIA,IAAJ,EAAU+P,KAAV;AACA,UAAI,CAAC/P,OAAO,KAAKF,KAAL,CAAWM,IAAnB,MAA6B2P,QAAQ,KAAKA,KAA1C,CAAJ,EAAsD;AACpD,YAAIA,MAAM4N,OAAV,EAAmB;AACjB;AACA;AACA5N,gBAAM4N,OAAN,GAAgB,KAAhB;AACD;;AAED,aAAKhiB,OAAL,CAAaiiB,cAAb,CAA4B5d,KAAK6d,aAAL,EAA5B;;AAEA,YAAK,IAAIzD,IAAJ,EAAD,CAAaC,OAAb,KAAyB,EAAzB,GAA8B,CAAlC,EAAqC,KAAK1e,OAAL,CAAamiB,gBAAb,CAA8B9d,KAAK+d,eAAL,EAA9B;AACrC,YAAI/d,KAAK4B,IAAL,IAAa5B,KAAKmB,QAAtB,EAAgC,KAAKoc,WAAL;AAChC;AACD;AACF;;;oCAEe;AAAA;;AACd,WAAKxc,KAAL,CAAWC,OAAX,CAAmBlC,OAAnB,CAA2B,aAAK;AAC9Bkf,UAAElC,MAAF,CAAS,QAAKxB,EAAd;AACA,gBAAKrY,qBAAL,CAA2B+b,CAA3B;AACD,OAHD;AAIA;AACD;;;mCAEc;AAAA;;AAAE;AACf,WAAKjd,KAAL,CAAWE,MAAX,CAAkBnC,OAAlB,CAA0B,aAAK;AAC7B,YAAIkf,EAAEjG,MAAN,EAAc;AACd,YAAIiG,EAAEC,SAAN,EAAiB;AACf,kBAAKC,UAAL,CAAgBF,EAAE/e,QAAlB;AACA+e,YAAEzZ,KAAF,GAAU,CAAV;AACA,kBAAKtC,qBAAL,CAA2B+b,CAA3B;AACA,cAAI,CAAC,QAAK9hB,QAAV,EAAoB,QAAKiiB,gCAAL,CAAsCH,CAAtC;AACpB,cAAI,CAAC,QAAK9hB,QAAV,EAAoB,IAAI8hB,EAAEjf,IAAF,IAAU,QAAKA,IAAL,CAAUM,MAAxB,EAAgC,QAAKga,SAAL,CAAeC,WAAf,CAA2BhW,GAA3B,CAA+B0a,CAA/B,EALrC,CAKwE;AACvFA,YAAEjG,MAAF,GAAW,IAAX;AACAiG,YAAEC,SAAF,GAAc,KAAd;AACD;AACDD,UAAElC,MAAF,CAAS,QAAKxB,EAAd;AACA;AACD,OAbD;AAcD;;;iCAEY;AAAA;;AACX,WAAKvZ,KAAL,CAAWG,IAAX,CAAgBpC,OAAhB,CAAwB,aAAK;AAC3BwQ,UAAEwM,MAAF,CAAS,QAAKxB,EAAd;AACA,YAAIhL,EAAExN,gBAAN,EAAwB,QAAKG,qBAAL,CAA2BqN,CAA3B;;AAExB,gBAAQA,EAAE1P,IAAV;AACE,eAAK,WAAL;AACA,eAAK,UAAL;;AAEE;AACA,gBAAIyC,QAAJ,EAAc+b,SAAd;AACA,oBAAKrd,KAAL,CAAWC,OAAX,CAAmBlC,OAAnB,CAA2B,UAACkf,CAAD,EAAO;AAChC,kBAAI,CAACA,EAAE7c,QAAH,IAAemO,EAAEvQ,IAAF,IAAUif,EAAEjf,IAA/B,EAAqC;AACnC,oBAAI,CAACsD,WAAWD,QAAQC,QAAR,CAAiB2b,EAAE/e,QAAnB,EAA6BqQ,EAAErQ,QAA/B,CAAZ,IAAwDqQ,EAAE+O,KAA9D,EAAqE;AACnE,sBAAI/P,QAAQ,IAAIpP,GAAJ,EAAZ;AACAkf,8BAAY9O,EAAErQ,QAAF,CAAWqf,IAAX,EAAZ;AACAF,4BAAU/N,GAAV,CAAc2N,EAAE/e,QAAhB;AACAqP,wBAAM9P,MAAN,GAAe8Q,EAAEiP,kBAAF,CAAqBlc,QAArB,CAAf;AACAiM,wBAAMuD,KAAN,GAAcuM,UAAUvM,KAAxB;AACA,sBAAIvC,EAAE1P,IAAF,IAAU,UAAd,EAA0B0O,MAAMuD,KAAN,GAAcvD,MAAMuD,KAAN,GAAcrN,KAAKga,EAAjC;AAC1BR,oBAAEN,QAAF,CAAWpa,GAAX,CAAegL,KAAf;AACA0P,oBAAEN,QAAF,CAAWlf,MAAX,IAAqB,IAArB,CARmE,CAQxC;AAC5B;AACF;AACF,aAbD;;AAeA;AACF,eAAK,YAAL;;AAGE,gBAAI8Q,EAAEmP,SAAN,EAAiB;;AAEf;AACA,kBAAIze,cAAJ;AACA,kBAAI,CAACA,QAAO,QAAKF,KAAL,CAAWM,IAAnB,KAA6BJ,MAAKkB,IAAL,CAAUwd,GAAV,CAAcpP,EAAE5P,EAAhB,CAAjC,EAAuD;AACrD,oBAAI2C,kBAAJ;AACA,wBAAK/D,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzB,sBAAG,QAAKC,IAAL,KAAcA,IAAjB,EAAuB;AACvBA,uBAAKQ,OAAL,CAAaT,OAAb,CAAqB,kBAAU;AAC7B,wBAAM8B,SAASb,OAAOC,IAAP,CAAYY,MAA3B;AACA,wBAAGb,OAAO4e,YAAP,IAAuB,CAAC/d,OAAOmX,MAAlC,EAA0C;AAC1C,wBAAI,CAAC1V,YAAWD,QAAQC,QAAR,CAAiBzB,OAAO3B,QAAxB,EAAkCqQ,EAAErQ,QAApC,CAAZ,IAA6DqQ,EAAEsP,eAAnE,EAAoF;AAClF,8BAAK3G,YAAL,CAAkBrX,OAAOJ,MAAP,CAAcD,KAAd,CAAoBb,EAAtC,EAA0C4P,EAAEuP,yBAAF,CAA4Bxc,SAA5B,CAA1C;AACD;AACF,mBAND;AAOD,iBATD;AAUD;;AAED;AACA,sBAAKsW,SAAL,CAAerJ,EAAE5P,EAAjB;AACD;;AAED;AACF,eAAK,eAAL;AACE,gBAAG4P,EAAEnO,QAAL,EAAehF,IAAIS,IAAJ,CAASkiB,UAAT,CAAoBxP,EAAE5P,EAAtB;AACf;AACF,eAAK,SAAL;;AAEE;AACA,gBAAI4P,EAAE9O,MAAF,KAAa4B,QAAQC,QAAR,CAAiBiN,EAAE9O,MAAF,CAASvB,QAA1B,EAAoCqQ,EAAErQ,QAAtC,IAAkDqQ,EAAEyP,YAApD,IAAoEzP,EAAE9O,MAAF,CAASwe,OAA1F,CAAJ,EAAwG1P,EAAE9O,MAAF,GAAW,IAAX;AACxG,oBAAKV,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;AACzB,kBAAIkB,QAAQ,CAACA,KAAKmB,QAAd,IAA0B,CAACnB,KAAKgf,OAAhC,IAA2Chf,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAAhB,IAA0BiQ,EAAEvQ,IAA3E,EAAiF;AAC/E,oBAAI,CAACuQ,EAAE9O,MAAH,IAAc,CAAC6B,WAAWD,QAAQC,QAAR,CAAiBrC,KAAKf,QAAtB,EAAgCqQ,EAAErQ,QAAlC,CAAZ,IAA2DqQ,EAAEyP,YAA/E,EAA8F;AAC5FzP,oBAAE9O,MAAF,GAAWR,IAAX;AACD;AACF;AACF,aAND;;AAQA;AACA,gBAAIsP,EAAEmP,SAAN,EAAiB;;AAEf;AACA,kBAAIze,IAAJ;AACA,kBAAI,CAACA,OAAO,QAAKF,KAAL,CAAWM,IAAnB,KAA6BJ,KAAKkB,IAAL,CAAUwd,GAAV,CAAcpP,EAAE5P,EAAhB,CAAjC,EAAuD;AACrD,oBAAI2C,QAAJ;AACA,wBAAKgX,SAAL,CAAeC,WAAf,CAA2Bxa,OAA3B,CAAmC,iBAAS;AAC1C,sBAAIkJ,SAAS,CAACA,MAAM7G,QAApB,EAA8B;AAC5B,wBAAI,CAACkB,WAAWD,QAAQC,QAAR,CAAiB2F,MAAM/I,QAAvB,EAAiCqQ,EAAErQ,QAAnC,IAA+C+I,MAAM1I,MAAjE,IAA2EgQ,EAAEsP,eAAjF,EAAkG;AAChG,8BAAKK,WAAL,CAAiBjX,MAAMtI,EAAvB,EAA2BM,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAA3C;AACA,0BAAG,CAAC,QAAKnD,QAAT,EAAmB,QAAK4D,KAAL,CAAWM,IAAX,CAAgBa,MAAhB,CAAuBqC,GAAvB,CAA2B0E,MAAMtI,EAAjC;AACpB;AACF;AACF,iBAPD;AAQD;;AAED;AACA,sBAAKiZ,SAAL,CAAerJ,EAAE5P,EAAjB;AACD;;AAED;AACF;AACE;AAtFJ;AA0FD,OA9FD;AAgGD;;;mCAEc;AAAA;;AACb,WAAKI,KAAL,CAAWhB,OAAX,CAAmB,gBAAQ;AACzBkB,aAAKY,MAAL,CAAYkb,MAAZ,CAAmB,QAAKxB,EAAxB;AACA,gBAAKrY,qBAAL,CAA2BjC,KAAKY,MAAhC;AACA,YAAGZ,SAAS,QAAKD,MAAL,CAAYC,IAAxB,EAA8B,QAAKiC,qBAAL,CAA2BjC,KAAKa,UAAhC;AAC/B,OAJD;AAKD;;;yCAEoB;AACnB;AACA;AACA;AACA;;AAJmB;AAAA;AAAA;;AAAA;AAMnB,+BAAgB,KAAKkB,OAAL,CAAa+S,SAA7B,wIAAwC;AAAA,cAA/BoK,GAA+B;AAAA;AAAA;AAAA;;AAAA;AACtC,mCAAoC,KAAKnd,OAAL,CAAamT,gBAAjD;AAAA;;AAAA;;AAAA,kBAAUiK,MAAV;AAAA,kBAAkBC,MAAlB;AAAA,kBAA0BC,KAA1B;AAAA;AAAA;AAAA;;AAAA;AACE,uCAAmBH,IAAIC,MAAJ,CAAnB;AAAA,sBAASG,MAAT;AAAA;AAAA;AAAA;;AAAA;AACE,2CAAmBJ,IAAIE,MAAJ,CAAnB;AAAA,0BAASG,MAAT;;AACE,0BAAInd,QAAQod,OAAR,CAAgBF,MAAhB,EAAwBC,MAAxB,CAAJ,EACEF,MAAMC,MAAN,EAAcC,MAAd;AAFJ;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvC;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcpB;;;iCAEY;AACX,cAAO,KAAK7iB,QAAZ;;AAEE,aAAK,CAAL;AAAQ;;AAEN,cAAMkF,OAAO,KAAKhF,IAAL,CAAUgF,IAAvB;AACA,cAAI,CAACA,KAAKsW,IAAV,EAAgB;AACd,gBAAMnY,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiBnG,KAAK6d,QAAtB,CAAf;AAAA,gBACMnQ,IAAIvP,OAAOC,IAAP,CAAY0f,mBADtB;AAAA,gBAEMvX,OAAOpI,OAAOhB,IAAP,CAAYC,UAFzB;AAGA4C,iBAAK3C,QAAL,CAAcqD,CAAd,GAAkBgN,EAAEhN,CAApB;AACAV,iBAAK3C,QAAL,CAAcsD,CAAd,GAAkB+M,EAAE/M,CAApB;;AAEA,iBAAKN,qBAAL,CAA2BL,IAA3B;;AAEA;AACA,gBAAMyN,gBAAgBtP,OAAOhB,IAAP,CAAYQ,OAAZ,CAAoBqb,MAApB,CAA2B;AAAA,qBAAU,CAAC7a,OAAO4e,YAAlB;AAAA,aAA3B,CAAtB;AACA,gBAAIgB,iBAAiBtQ,cAAc5S,GAAd,CAAkB;AAAA,qBAAUsD,OAAOC,IAAP,CAAYY,MAAZ,CAAmBgf,QAA7B;AAAA,aAAlB,CAArB;AACA,gBAAIC,UAAUC,EAAEhF,MAAF,CAAS6E,cAAT,EAAyB,UAACI,IAAD,EAAOC,GAAP;AAAA,qBAAeD,OAAOC,GAAtB;AAAA,aAAzB,EAAoD,CAApD,IAAyDjgB,OAAOhB,IAAP,CAAYQ,OAAZ,CAAoBf,MAA3F;AACA,gBAAIyhB,aAAa,KAAKrjB,IAAL,CAAU0E,MAAV,CAAiBvB,OAAOhB,IAAP,CAAYM,MAA7B,CAAjB;AACA,gBAAI6gB,gBAAgB1b,KAAKY,KAAL,CAAWya,UAAU,GAArB,CAApB;;AAEA,gBAAIK,gBAAgBD,UAAhB,IAA8BC,iBAAiB,GAAnD,EACE,KAAKtjB,IAAL,CAAU0E,MAAV,CAAiBvB,OAAOhB,IAAP,CAAYM,MAA7B,IAAuC6gB,aAAvC;;AAEF,gBAAKL,WAAW,CAAZ,IAAkB9f,WAAW,KAAKA,MAAtC,EACE,KAAKpE,OAAL,CAAawkB,gBAAb,CAA8B,CAACpgB,OAAOhB,IAAP,CAAYM,MAAb,EAAqB6gB,aAArB,CAA9B;;AAIF;AACA;AACA,gBAAI,CAAC,KAAKtjB,IAAL,CAAU4F,IAAf,EAAqB,KAAK5F,IAAL,CAAU4F,IAAV,GAAiBzC,OAAOhB,IAAxB;;AAErB;AACA,gBAAImhB,gBAAgB,KAAKtjB,IAAL,CAAU0E,MAAV,CAAiB,KAAK1E,IAAL,CAAU4F,IAAV,CAAenD,MAAhC,CAApB,EAA6D;;AAE3D,kBAAI,CAAC,KAAKnD,QAAV,EAAoB;AAClB;AACA,oBAAI6D,OAAOhB,IAAP,IAAe,KAAKA,IAAxB,EAA8B;AAC5B,sBAAIsc,IAAI,KAAKtc,IAAL,CAAUqJ,KAAlB;AACA,uBAAKgY,KAAL,CACE3kB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,eAAzC,EAA0D,KAAKzjB,QAA/D,GADF,EAEIwe,CAFJ;AAGA,uBAAK1f,OAAL,CAAawkB,gBAAb,CAA8B,CAACpgB,OAAOhB,IAAP,CAAYM,MAAb,EAAqB6gB,aAArB,CAA9B;AACA;AACD;AACD;AARA,qBASK,IAAI,KAAKtjB,IAAL,CAAU4F,IAAV,IAAkB,KAAKzD,IAA3B,EAAiC;AACpC,wBAAIsc,KAAItb,OAAOhB,IAAP,CAAYqJ,KAApB;AACA,yBAAKgY,KAAL,CACE3kB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,eAAzC,EAA0D,KAAKzjB,QAA/D,GADF,EAEIwe,EAFJ;AAGD;AACF;;AAED,mBAAKze,IAAL,CAAU4F,IAAV,GAAiBzC,OAAOhB,IAAxB;AACD;AAGF;;AAED;;AAEF,aAAK,CAAL;AAAQ;;;AAIN;;AAEF,aAAK,CAAL;AAAQ;;AAEN;;AAqDA;;AA5HJ,OADW,CA+HT;;AAGH;;;iCAEY;AACX,WAAKwhB,eAAL;AACA,WAAKC,iBAAL;AACA,WAAKC,iBAAL;AACA,WAAKC,gBAAL;AACA,WAAKC,cAAL;;AAEA,WAAKC,YAAL;AACA,WAAKC,gBAAL;AACA,WAAKC,SAAL;AACA;AACA;;AAEA,WAAKC,eAAL;;AAEA,UAAI,CAAC,KAAK7kB,QAAV,EAAoB,KAAK8kB,iBAAL;;AAEpB,WAAKC,YAAL;;AAEA,WAAKvc,KAAL,CAAWoX,MAAX,GAnBW,CAmBU;AACtB;;;sCAEiB;AAAA;;AAChB,WAAKhc,KAAL,CAAWhB,OAAX,CAAmB,UAACkB,IAAD,EAAU;;AAE3B,YAAMkhB,YAAclhB,KAAKwF,IAAL,CAAU2b,OAAV,GAAoB,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBphB,IAApB,CAAxC;AACA,YAAMqhB,gBAAkBrhB,KAAKwF,IAAL,CAAU2b,OAAV,GAAoB,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBphB,IAApB,CAA5C;;AAEA,YAAIA,KAAKwF,IAAL,CAAU2b,OAAV,GAAoB,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBphB,IAApB,KAA6BA,KAAKwF,IAAL,IAAa,QAAK0J,MAAL,CAAYM,KAA9E,EAAqF;;AAEnF,cAAI8R,aAAa,CAAjB;AACA,cAAGthB,KAAKmB,QAAR,EAAkB;AAChBmgB,yBAAa,CAAb;AACD,WAFD,MAEO;AACL,gBAAG,QAAK1kB,IAAL,CAAUgF,IAAV,IAAkB,QAAKhF,IAAL,CAAUgF,IAAV,CAAe6d,QAAf,KAA4Bzf,KAAKO,KAAL,CAAWb,EAA5D,EAAgE;AAC9D4hB,2BAAa,CAAb;AACD,aAFD,MAEO;AACL;AACA;AACA;AACA,kBAAGthB,KAAKgf,OAAR,EAAiB;AACf,oBAAIhf,KAAKO,KAAL,CAAWxB,IAAX,IAAmB,QAAKA,IAA5B,EAAkC;AAChCuiB,+BAAa9c,KAAK+c,QAAL,CAAc,GAAd,IAAqB,CAArB,GAAyB,GAAtC;AACD,iBAFD,MAEO;AACLD,+BAAa,CAAb;AACD;AACF;AACF;AACF;;AAED,cAAIE,YAAYxhB,KAAKwF,IAAL,CAAUxF,IAA1B;AACAwhB,oBAAUlZ,KAAV,GAAkBtI,KAAKyhB,MAAL,GAAcH,UAAhC;AACAE,oBAAU9V,QAAV,GAAqBlH,KAAKmH,OAAL,CAAa3L,KAAK6R,KAAlB,CAArB;;AAEA7R,eAAKwF,IAAL,CAAUlD,CAAV,GAActC,KAAKf,QAAL,CAAcqD,CAA5B;AACAtC,eAAKwF,IAAL,CAAUjD,CAAV,GAAcvC,KAAKf,QAAL,CAAcsD,CAA5B;;AAEA;AACAif,oBAAUE,KAAV,GAAoB1hB,KAAK4B,IAAN,GAAc4f,UAAUzX,MAAxB,GAAiCyX,UAAU1X,MAA9D;AACD;AAEF,OAtCD;AAuCA,WAAK6X,qBAAL;AACA,WAAKC,eAAL;AACD;;;4CAEuB;AACtB,UAAI,KAAK1lB,QAAT,EAAmB;;AAEnB,UAAI8D,OAAO,KAAKD,MAAL,CAAYC,IAAvB;AAAA,UACE6hB,YAAY7hB,KAAKwF,IAAL,CAAU6E,KADxB;AAAA,UAEEyX,aAAaD,UAAUtX,MAFzB;AAAA,UAGEsV,UAAU7f,KAAK+hB,MAAL,GAAc,GAH1B;AAAA,UAIEtX,SAASvL,IAAIC,GAAJ,CAAQ,EAAC0S,OAAO7R,KAAK6R,KAAL,GAAcrN,KAAKga,EAAL,GAAQ,CAA9B,EAAkChgB,QAAQ,EAA1C,EAAR,CAJX;AAAA,UAKE4J,QAAQpI,KAAKiZ,QAAL,GAAgB,KAAKla,IAAL,CAAUqJ,KAA1B,GAAkC,SAL5C;AAMAyZ,gBAAUhb,QAAV,GAAqBpL,cAAcoL,QAAd,CAAuByD,WAAvB,CAAmClC,KAAnC,EAA0CyX,OAA1C,CAArB;AACAgC,gBAAUvZ,KAAV,GAAkBwZ,WAAWxZ,KAAX,GAAmBtI,KAAKmB,QAAL,GAAgB,CAAhB,GAAoB,CAAzD;AACA0gB,gBAAUvf,CAAV,GAAcwf,WAAWxf,CAAX,GAAemI,OAAOnI,CAApC;AACAuf,gBAAUtf,CAAV,GAAcuf,WAAWvf,CAAX,GAAekI,OAAOlI,CAApC;AACAsf,gBAAUnW,QAAV,GAAqBoW,WAAWpW,QAAX,GAAsBlH,KAAKmH,OAAL,CAAa3L,KAAK6R,KAAL,GAAarN,KAAKga,EAAL,GAAQ,CAAlC,CAA3C;;AAEAqD,gBAAUG,WAAV;;AAEA;AACA;AACA;AAED;;;sCAEiB;AAChB,UAAI,KAAK9lB,QAAT,EAAmB;;AAEnB,UAAIoE,WAAW,KAAKR,KAAL,CAAWM,IAA1B;AAAA,UAAgCyJ,iBAAhC;AACA,UAAIvJ,QAAJ,EAAcuJ,WAAWvJ,SAASC,KAAT,CAAexB,IAA1B;;AAEd,WAAKe,KAAL,CAAWhB,OAAX,CAAmB,UAACkB,IAAD,EAAU;AAC3B,YAAIA,KAAKO,KAAL,CAAWxB,IAAX,IAAmB8K,QAAnB,IAA+B7J,QAAQM,QAA3C,EAAqD;AACnD,cAAI2hB,WAAWjiB,KAAKwF,IAAL,CAAUwE,IAAzB;AAAA,cACIS,SAASvL,IAAIC,GAAJ,CAAQ,EAAC0S,OAAOvR,SAASuR,KAAjB,EAAwBrT,QAAQ,EAAhC,EAAR,CADb;AAEAyjB,mBAAS3f,CAAT,GAAamI,OAAOnI,CAApB;AACA2f,mBAAS1f,CAAT,GAAakI,OAAOlI,CAApB;AACA0f,mBAASvW,QAAT,GAAoBlH,KAAKmH,OAAL,CAAarL,SAASuR,KAAT,GAAiBrN,KAAKga,EAAL,GAAQ,CAAtC,CAApB;AACD;AACF,OARD;AAUD;;;wCAEmB;AAAA;;AAClB,UAAIle,WAAW,KAAKR,KAAL,CAAWM,IAA1B;AAAA,UAAgCyJ,iBAAhC;AACA,UAAIvJ,QAAJ,EAAcuJ,WAAWvJ,SAASC,KAAT,CAAexB,IAA1B;;AAEd,WAAKe,KAAL,CAAWhB,OAAX,CAAmB,UAACkB,IAAD,EAAU;;AAE3B,YAAMY,SAASZ,KAAKY,MAApB;AACA,YAAMshB,cAAc,QAAK1c,IAAL,CAAUoD,OAAV,CAAkBb,GAAlB,CAAsB/H,IAAtB,CAApB;AAH2B,YAInB8I,SAJmB,GAILoZ,WAJK,CAInBpZ,SAJmB;;;AAM3B,YAAG9I,KAAKO,KAAL,CAAWoe,YAAd,EAA4B;AAC1B7V,oBAAUqY,OAAV,GAAoB,KAApB;AACA;AACD;;AAT0B,YAYzBpY,MAZyB,GAgBvBmZ,WAhBuB,CAYzBnZ,MAZyB;AAAA,YAazBG,SAbyB,GAgBvBgZ,WAhBuB,CAazBhZ,SAbyB;AAAA,YAczBC,aAdyB,GAgBvB+Y,WAhBuB,CAczB/Y,aAdyB;AAAA,YAezBC,iBAfyB,GAgBvB8Y,WAhBuB,CAezB9Y,iBAfyB;;;AAkB3B,YAAM+Y,gBAAkBrZ,UAAUqY,OAAV,GAAoB,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBxgB,MAApB,CAA5C;;AAEA;AACA,YAAIuhB,aAAJ,EAAmB;;AAEjB,cAAGvhB,OAAOO,QAAV,EAAoB;AAClB2H,sBAAUR,KAAV,GAAkB,CAAlB;AACD,WAFD,MAEO;AACLQ,sBAAUR,KAAV,GAAkB,CAAlB;;AAEA,gBAAG1H,OAAOmX,MAAV,EAAkB;AAChB3O,gCAAkBd,KAAlB,GAA0B,CAA1B;AACAa,4BAAcb,KAAd,GAAsB,CAAC,CAAC1H,OAAOoX,QAA/B;AACA9O,wBAAUZ,KAAV,GAAkB,CAAC,CAAC1H,OAAOoX,QAA3B;AACD,aAJD,MAIO;AACL7O,4BAAcb,KAAd,GAAsB,CAAtB;AACAY,wBAAUZ,KAAV,GAAkB,CAAlB;AACA,kBAAGtI,SAASM,QAAZ,EACE8I,kBAAkBd,KAAlB,GAA0B,CAA1B,CADF,KAGEc,kBAAkBd,KAAlB,GAA0B,GAA1B;AACH;AAEF;AAEF;;AAEDQ,kBAAUxG,CAAV,GAAc1B,OAAO3B,QAAP,CAAgBqD,CAA9B;AACAwG,kBAAUvG,CAAV,GAAc3B,OAAO3B,QAAP,CAAgBsD,CAA9B;;AAEA6G,0BAAkB9D,MAAlB,GAA2B6D,cAAc7D,MAAd,GACzB8D,kBAAkB7D,MAAlB,GAA2B4D,cAAc5D,MAAd,GACvB3E,OAAOtB,MAAP,GAAgBsB,OAAO6H,YAF7B;;AAIA,YAAGM,MAAH,EAAWA,OAAOoY,OAAP,GAAiB,CAACnhB,KAAKa,UAAL,CAAgBM,QAAlC;AAEZ,OAtDD;AAuDD;;;wCAEmB;AAAA;;AAClB,UAAIyI,QAAQ,KAAKpE,IAAL,CAAUxE,OAAtB;AACA,WAAKD,KAAL,CAAWC,OAAX,CAAmBlC,OAAnB,CAA2B,aAAK;AAC9B,YAAI4N,IAAI9C,MAAM7B,GAAN,CAAUiW,EAAEte,EAAZ,CAAR;AACA,YAAG,QAAKwP,MAAL,CAAYkS,OAAZ,CAAoBpD,CAApB,CAAH,EAA2B;AACzB,cAAG,CAACtR,CAAJ,EAAOA,IAAI,QAAK0V,gBAAL,CAAsBpE,CAAtB,CAAJ;AACPtR,YAAEpK,CAAF,GAAM0b,EAAE/e,QAAF,CAAWqD,CAAjB;AACAoK,YAAEnK,CAAF,GAAMyb,EAAE/e,QAAF,CAAWsD,CAAjB;AACD,SAJD,MAIO;AACL,cAAGmK,CAAH,EAAM,QAAK2V,iBAAL,CAAuBrE,EAAEte,EAAzB;AACP;AACF,OATD;AAUD;;;uCAEkB;AAAA;;AACjB,UAAIkK,QAAQ,KAAKpE,IAAL,CAAUvE,MAAtB;AACA,WAAKF,KAAL,CAAWE,MAAX,CAAkBnC,OAAlB,CAA0B,aAAK;AAC7B,YAAI4N,IAAI9C,MAAM7B,GAAN,CAAUiW,EAAEte,EAAZ,CAAR;;AAEA,YAAG,QAAKwP,MAAL,CAAYkS,OAAZ,CAAoBpD,CAApB,CAAH,EAA2B;AACzB,cAAG,CAACtR,CAAJ,EAAOA,IAAI,QAAK4V,eAAL,CAAqBtE,CAArB,CAAJ;AACPtR,YAAEpE,KAAF,GAAW0V,EAAEyD,MAAF,GAAW,GAAX,GAAiB,GAA5B;AACA/U,YAAEpK,CAAF,GAAM0b,EAAE/e,QAAF,CAAWqD,CAAjB;AACAoK,YAAEnK,CAAF,GAAMyb,EAAE/e,QAAF,CAAWsD,CAAjB;AACAmK,YAAEpH,MAAF,GAAWoH,EAAEnH,MAAF,GAAYyY,EAAE1e,MAAF,GAAWkc,MAAMhT,KAAN,CAAY4S,UAAxB,GAAsC4C,EAAEzZ,KAA9D;AACA,cAAIyZ,EAAEC,SAAN,EAAiB;AACf,gBAAIre,OAAOoe,EAAEuE,SAAF,GAAc,OAAd,GAAwB,QAAnC;AACA7V,cAAEgV,KAAF,GAAUjmB,cAAc8Q,cAAd,CAA6BtL,MAA7B,CAAoCrB,IAApC,EAA0Coe,EAAEjf,IAA5C,CAAV;AACD;AACF,SAVD,MAUO;AACL,cAAG2N,CAAH,EAAM,QAAK8V,gBAAL,CAAsBxE,EAAEte,EAAxB;AACP;AAEF,OAjBD;AAkBD;;;qCAEgB;AAAA;;AACf,UAAIkK,QAAQ,KAAKpE,IAAL,CAAUtE,IAAtB;AACA,WAAKH,KAAL,CAAWG,IAAX,CAAgBpC,OAAhB,CAAwB,aAAK;AAC3B,YAAI4N,IAAI9C,MAAM7B,GAAN,CAAUJ,EAAEjI,EAAZ,CAAR;AACA,YAAIgN,MAAMA,EAAEyU,OAAF,GAAY,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBzZ,CAApB,CAAlB,CAAJ,EAA+C;AAC7C+E,YAAEpK,CAAF,GAAMqF,EAAE1I,QAAF,CAAWqD,CAAjB;AACAoK,YAAEnK,CAAF,GAAMoF,EAAE1I,QAAF,CAAWsD,CAAjB;AACAmK,YAAEhB,QAAF,GAAalH,KAAKmH,OAAL,CAAahE,EAAE+D,QAAf,CAAb;AACD;AACF,OAPD;AAQD;;;mCAEc;AACb,WAAKwD,MAAL,CAAY4M,MAAZ;AACA;AACD;;;uCAEkB;;AAEjB,UAAM3V,aAAa,KAAKX,IAAL,CAAUU,KAAV,CAAgBC,UAAhB,CAA2BoB,cAA9C;AACA,UAAMkb,YAAY,KAAKnmB,OAAL,CAAamF,KAA/B;AACA,UAAMihB,aAAa,KAAKpmB,OAAL,CAAaqF,MAAhC;AACA,UAAMghB,oBAAoB,KAAK3d,MAAL,CAAYvD,KAAZ,GAAkB,CAA5C;AACA,UAAMmhB,qBAAqB,KAAK5d,MAAL,CAAYrD,MAAZ,GAAmB,CAA9C;AACA,UAAMkhB,wBAAwB1c,WAAW0B,WAAX,CAAuBpG,KAAvB,GAA+B,CAA7D;AACA,UAAMqhB,yBAAyB3c,WAAW0B,WAAX,CAAuBlG,MAAvB,GAAgC,CAA/D;AACA,UAAIohB,2BAA2B7jB,IAAIC,GAAJ,CAAQ,KAAK+P,MAAL,CAAYM,KAApB,CAA/B;AACA,UAAMwT,eAAe9jB,IAAIC,GAAJ,CAAQ,EAACmD,GAAG,KAAK4M,MAAL,CAAYzE,MAAZ,CAAmBnI,CAAnB,GAAuBqgB,iBAA3B,EAA8CpgB,GAAG,KAAK2M,MAAL,CAAYzE,MAAZ,CAAmBlI,CAAnB,GAAuBqgB,kBAAxE,EAAR,CAArB;;AAEAI,mBAAa9D,GAAb,CAAiB,KAAK3a,KAAtB;AACAye,mBAAanR,KAAb,GAAqBrN,KAAKye,OAAL,CAAa,KAAK/T,MAAL,CAAYM,KAAZ,CAAkBxP,IAAlB,CAAuB0L,QAApC,CAArB;AACAqX,+BAAyBzf,GAAzB,CAA6B0f,YAA7B;;AAEA;AACA,UAAID,yBAAyBzgB,CAAzB,GAA6BugB,qBAAjC,EAAwDE,yBAAyBzgB,CAAzB,GAA6BugB,qBAA7B;AACxD,UAAIE,yBAAyBxgB,CAAzB,GAA6BugB,sBAAjC,EAAyDC,yBAAyBxgB,CAAzB,GAA6BugB,sBAA7B;;AAGzD,UAAIC,yBAAyBzgB,CAAzB,GAA6BmgB,YAAYI,qBAA7C,EAAoEE,yBAAyBzgB,CAAzB,GAA6BmgB,YAAYI,qBAAzC;AACpE,UAAIE,yBAAyBxgB,CAAzB,GAA6BmgB,aAAaI,sBAA9C,EAAsEC,yBAAyBxgB,CAAzB,GAA6BmgB,aAAaI,sBAA1C;;AAGtE3c,iBAAW7D,CAAX,GAAeygB,yBAAyBzgB,CAAxC;AACA6D,iBAAW5D,CAAX,GAAewgB,yBAAyBxgB,CAAxC;;AAEA4D,iBAAWuF,QAAX,GAAsB,CAAE,EAAxB;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;gCAEW;AAAA;;AACV,WAAKpN,KAAL,CAAWQ,OAAX,CAAmB,gBAAQ;AACzBC,aAAKC,UAAL,CAAgBwG,IAAhB,CAAqB2b,OAArB,GAA+B,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoBriB,KAAKC,UAAzB,CAA/B;AACD,OAFD;;AAIA,WAAK+B,KAAL,CAAWtE,GAAX,CAAeuG,YAAf,CAA4BlE,OAA5B,CAAoC,UAAC2E,GAAD,EAAM/E,CAAN,EAAY;AAC9C,gBAAK8G,IAAL,CAAU/I,GAAV,CAAcuG,YAAd,CAA2BtE,CAA3B,EAA8ByiB,OAA9B,GAAwC,QAAKjS,MAAL,CAAYkS,OAAZ,CAAoB3d,GAApB,CAAxC;AACD,OAFD;AAID;;;iCAEY;AACX,UAAI;AACF,YAAIvG,IAAJ,EAAUA,KAAKgmB,cAAL,CAAoB,CAAC,KAAKhU,MAAL,CAAYM,KAAZ,CAAkBxP,IAAlB,CAAuB0L,QAA5C;AACX,OAFD,CAEE,OAAOpO,CAAP,EAAU;AACVC,YAAI,kBAAJ;AACD;AACF;;;iCAEY;AACX,UAAIiS,QAAQ,KAAKN,MAAL,CAAYM,KAAxB;AACA,UAAIA,KAAJ,EAAW2T,KAAK1Y,MAAL,CAAY,CAAC+E,MAAMlN,CAAnB,EAAsB,CAACkN,MAAMjN,CAA7B;AACZ;;;sCAEiB;AAAA;;AAEhB,UAAMY,OAAO,KAAKigB,4BAAL,EAAb;;AAEA,WAAK5d,IAAL,CAAUc,OAAV,CAAkBqE,KAAlB,CAAwB5L,IAAxB,CAA6BD,OAA7B,CAAqC,UAACkL,IAAD,EAAOtL,CAAP,EAAa;AAChDsL,aAAKA,IAAL,GAAY,QAAKpN,IAAL,CAAU0E,MAAV,CAAiB5C,CAAjB,CAAZ;AACA;;AAEA,YAAG,QAAKhC,QAAL,IAAiB,CAApB,EAAuB;AACrBsN,eAAK1E,MAAL,GAAc0E,KAAKzE,MAAL,GAAepC,KAAKzE,CAAL,IAAU,CAAV,GAAc,IAA3C;;AAEFsL,aAAKgY,WAAL;AACD,OARD;;AAUA,UAAG,KAAKtlB,QAAL,IAAiB,CAApB,EACE,KAAK2mB,cAAL;AAEH;;;mDAE8B;;AAE7B,UAAMlgB,OAAO,EAAb;;AAEA,cAAO,KAAKzG,QAAZ;;AAEE,aAAK,CAAL;AAAQ;;AAAR;AAAA;AAAA;;AAAA;AAEE,mCAAgB,KAAK4B,KAArB;AAAA,kBAAQS,IAAR;;AACEoE,mBAAKxE,IAAL,CAAUI,KAAKQ,OAAL,CAAa9C,GAAb,CAAiB;AAAA,uBAAK6S,EAAE5P,EAAP;AAAA,eAAjB,EAA4BoO,OAA5B,CAAoC,KAAKlR,IAAL,CAAUgF,IAAV,CAAe6d,QAAnD,KAAgE,CAAC,CAA3E;AADF;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKE;;AAEF,aAAK,CAAL;AAAQ;;AAEN,cAAM6D,YAAYxD,EAAE,KAAKljB,IAAL,CAAU0E,MAAZ,EAAoBa,GAApB,EAAlB;AACA2d,YAAE,KAAKljB,IAAL,CAAU0E,MAAZ,EAAoBiiB,IAApB,CAAyB;AAAA,mBAASpgB,KAAKxE,IAAL,CAAUgM,SAAS2Y,SAAnB,CAAT;AAAA,WAAzB;;AAEA;;AAdJ;;AAkBA,aAAOngB,IAAP;AACD;;;qCAEgB;AACf,UAAIuJ,IAAI,KAAKlH,IAAL,CAAU5D,IAAlB;AAAA,UAAwBA,OAAO,KAAKhF,IAAL,CAAUgF,IAAzC;;AAEA,UAAI4hB,cAAc,KAAlB;AACA,UAAIC,cAAc,IAAIvkB,GAAJ,CAAQ0C,KAAK3C,QAAL,CAAcqD,CAAd,GAAkB,KAAK4M,MAAL,CAAYwU,KAAZ,CAAkBrc,IAA5C,EAAkDzF,KAAK3C,QAAL,CAAcsD,CAAd,GAAkB,KAAK2M,MAAL,CAAYwU,KAAZ,CAAkBpc,IAAtF,CAAlB;AACAmc,kBAAY5R,KAAZ,IAAqBrN,KAAKye,OAAL,CAAa,KAAK/T,MAAL,CAAYM,KAAZ,CAAkBxP,IAAlB,CAAuB0L,QAAvB,GAAkC,EAA/C,CAArB;AACA+X,kBAAYE,GAAZ,CAAgB,KAAKpf,KAArB;AACAkf,kBAAYngB,GAAZ,CAAgB,EAAChB,GAAG,KAAK4M,MAAL,CAAYwU,KAAZ,CAAkBphB,CAAtB,EAAyBC,GAAG,KAAK2M,MAAL,CAAYwU,KAAZ,CAAkBnhB,CAA9C,EAAhB;AACAmK,QAAEpK,CAAF,GAAMmhB,YAAYnhB,CAAlB;AACAoK,QAAEnK,CAAF,GAAMkhB,YAAYlhB,CAAlB;AACA,UAAIqhB,UAAWhiB,KAAKtC,MAAL,GAAc,CAA7B;AACA,UAAIoN,EAAEpK,CAAF,GAAMshB,OAAV,EAAmB;AACjBlX,UAAEpK,CAAF,GAAMshB,OAAN;AACAJ,sBAAc,IAAd;AACD;AACD,UAAI9W,EAAEpK,CAAF,GAAM,KAAK0C,MAAL,CAAYvD,KAAZ,GAAoBmiB,OAA9B,EAAuC;AACrClX,UAAEpK,CAAF,GAAM,KAAK0C,MAAL,CAAYvD,KAAZ,GAAoBmiB,OAA1B;AACAJ,sBAAc,IAAd;AACD;AACD,UAAI9W,EAAEnK,CAAF,GAAMqhB,OAAV,EAAmB;AACjBlX,UAAEnK,CAAF,GAAMqhB,OAAN;AACAJ,sBAAc,IAAd;AACD;AACD,UAAI9W,EAAEnK,CAAF,GAAM,KAAKyC,MAAL,CAAYrD,MAAZ,GAAqBiiB,OAA/B,EAAwC;AACtClX,UAAEnK,CAAF,GAAM,KAAKyC,MAAL,CAAYrD,MAAZ,GAAqBiiB,OAA3B;AACAJ,sBAAc,IAAd;AACD;;AAED9W,QAAEpE,KAAF,GAAUkb,cAAc,GAAd,GAAqB5hB,KAAKsW,IAAL,GAAY,CAAZ,GAAgB,CAA/C;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;wCAEmB;AAClB,UAAI3M,OAAO,KAAK/F,IAAL,CAAUc,OAAV,CAAkBkF,OAA7B;;AAEA;AACA,WAAKzM,IAAL,CAAUQ,OAAV,CAAkBT,OAAlB,CAA0B,UAACiB,MAAD,EAASrB,CAAT,EAAe;AACvC6M,aAAKhM,OAAL,CAAab,CAAb,EAAgB4D,CAAhB,GAAoBvC,OAAOC,IAAP,CAAYf,QAAZ,CAAqBqD,CAArB,GAAyBiJ,KAAKE,aAAlD;AACAF,aAAKhM,OAAL,CAAab,CAAb,EAAgB6D,CAAhB,GAAoBxC,OAAOC,IAAP,CAAYf,QAAZ,CAAqBsD,CAArB,GAAyBgJ,KAAKE,aAAlD;AACD,OAHD;;AAMA;AACA,UAAG,KAAK/O,QAAL,IAAiB,CAApB,EAAuB;AACrB,YAAIkF,OAAO,KAAKhF,IAAL,CAAUgF,IAArB;AACA2J,aAAK3J,IAAL,CAAUU,CAAV,GAAcV,KAAK3C,QAAL,CAAcqD,CAAd,GAAkBiJ,KAAKE,aAArC;AACAF,aAAK3J,IAAL,CAAUW,CAAV,GAAcX,KAAK3C,QAAL,CAAcsD,CAAd,GAAkBgJ,KAAKE,aAArC;AACD;;AAGD;AACA,WAAKlM,OAAL,CAAaT,OAAb,CAAqB,UAACiB,MAAD,EAASL,EAAT,EAAgB;AAAA,oCACT6L,KAAKS,aAAL,CAAmBjE,GAAnB,CAAuBrI,EAAvB,CADS;AAAA;AAAA,YAC5BoJ,SAD4B;AAAA,YACjB5G,IADiB;;AAEnC,YAAGnC,OAAO4e,YAAV,EAAwB;AACtB7V,oBAAUqY,OAAV,GAAoB,KAApB;AACA;AACD;AACD,YAAMvgB,SAASb,OAAOC,IAAP,CAAYY,MAA3B;AACA,YAAM2D,QAAQ3D,OAAOtB,MAAP,GAAgBoB,OAAO8H,KAAP,CAAaC,YAA3C;AACAK,kBAAUxG,CAAV,GAAcvC,OAAOC,IAAP,CAAYY,MAAZ,CAAmB3B,QAAnB,CAA4BqD,CAA5B,GAAgCiJ,KAAKE,aAAnD;AACA3C,kBAAUvG,CAAV,GAAcxC,OAAOC,IAAP,CAAYY,MAAZ,CAAmB3B,QAAnB,CAA4BsD,CAA5B,GAAgCgJ,KAAKE,aAAnD;AACA3C,kBAAUxD,MAAV,GAAmBwD,UAAUvD,MAAV,GAAmBhB,KAAtC;;AAEA,YAAI+D,QAAQ,GAAZ;AACA,YAAG,CAAC1H,OAAOmX,MAAX,EACEzP,QAAQ,CAAR,CADF,KAEK,IAAG1H,OAAO6X,OAAV,EACHnQ,QAAQ,CAAR;AACFpG,aAAKoG,KAAL,GAAaA,KAAb;AACD,OAlBD;AAmBD;;;wCAEmB;AAClB,WAAK4G,MAAL,CAAYM,KAAZ,GAAoB,KAAKH,aAAL,CAAmB,KAAKD,iBAAxB,EAA2CpP,IAA3C,CAAgDwF,IAApE;AACD;;;mCAEc;;AAEb,UAAMqe,iBAAiBC,aAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,CAA5B,CAAvB;AACA,UAAMC,UAAU,GAAhB,CAAqB,IAAMC,UAAU,IAAhB;AACrB,UAAMC,kBAAkB,GAAxB,CAA6B,IAAMC,kBAAkB,GAAxB;;AAJhB;AAAA;AAAA;;AAAA;AAMb,+BAA6B,KAAK1e,IAAL,CAAUuH,MAAV,CAAiBI,QAA9C,wIAAwD;AAAA;;AAAA;;AAAA,cAA7CnN,IAA6C;AAAA,cAAvC2N,OAAuC;;;AAEtD,cAAG3N,KAAKmB,QAAR,EAAkB;AAChB,gBAAG,CAAC,KAAKqE,IAAL,CAAUuH,MAAV,CAAiBU,IAAjB,CAAsBC,cAAtB,CAAqCC,OAArC,EAA8C,KAAKnI,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8BC,KAA5E,CAAJ,EAAwF;AACtFM,sBAAQwW,gBAAR,CAAyB,KAAK3e,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8B9O,KAA9B,CAAoC0B,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAApD,CAAzB;AACAsO,sBAAQS,aAAR,CAAsB,KAAK5I,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8BC,KAApD;AACD;AACF,WALD,MAKO;AACL,gBAAG,CAAC,KAAK7H,IAAL,CAAUuH,MAAV,CAAiBU,IAAjB,CAAsBC,cAAtB,CAAqCC,OAArC,EAA8C,KAAKnI,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8B9O,KAA9B,CAAoC0B,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAApD,CAA9C,CAAJ,EAAgH;AAC9GsO,sBAAQwW,gBAAR,CAAyB,KAAK3e,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8BC,KAAvD;AACAM,sBAAQS,aAAR,CAAsB,KAAK5I,IAAL,CAAUuH,MAAV,CAAiBK,YAAjB,CAA8B9O,KAA9B,CAAoC0B,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAApD,CAAtB;AACD;AACF;;AAED;AACA,cAAMwgB,UAAU7f,KAAK0d,QAAL,CAAclf,MAAd,IACbwB,KAAKokB,qBAAL,GAA6BpkB,KAAKqkB,8BADrB,CAAhB;AAEA,cAAIC,SAAStkB,KAAKmB,QAAL,GAAgB,CAAhB,GAAqB0e,UAAU,GAAV,GAAgB,CAAhB,GAAoB,CAAtD;AACA,cAAM5X,MAAMjI,KAAKukB,oBAAjB;AACA,cAAMC,WAAWxkB,KAAKmB,QAAL,GAAgB,CAAhB,GAAoB8iB,eAArC;AACA,cAAMQ,WAAWzkB,KAAKmB,QAAL,GAAgB,GAAhB,GAAsB8iB,eAAvC;;AAEAtW,kBAAQ2B,CAAR,CAAUhN,CAAV,GAAc2F,IAAI3F,CAAlB;AACAqL,kBAAQ2B,CAAR,CAAU/M,CAAV,GAAc0F,IAAI1F,CAAlB;AACAoL,kBAAQjC,QAAR,GAAmB,CAAClH,KAAKmH,OAAL,CAAa3L,KAAK6R,KAAlB,CAAD,GAA4B,EAA/C;AACAlE,kBAAQO,IAAR,CAAawW,OAAb,CAAqBC,CAArB,GACEhX,QAAQO,IAAR,CAAawW,OAAb,CAAqB1G,CAArB,GACE+F,UAAW,CAACA,UAAUC,OAAX,IAAsBH,eAAehE,OAAf,CAFrC;AAGAlS,kBAAQO,IAAR,CAAa0W,MAAb,CAAoBD,CAApB,GACEhX,QAAQO,IAAR,CAAa0W,MAAb,CAAoB5G,CAApB,GACEsG,MAFJ;AAGA3W,kBAAQW,KAAR,CAAcuW,MAAd,CAAqBF,CAArB,GAAyBH,QAAzB;AACA7W,kBAAQW,KAAR,CAAcuW,MAAd,CAAqB7G,CAArB,GAAyByG,QAAzB;AAGD;;AAED;AA3Ca;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4Cb,WAAK3V,WAAL,CAAiBQ,CAAjB,CAAmBhN,CAAnB,GAAuB,KAAK4M,MAAL,CAAYM,KAAZ,CAAkBlN,CAAzC;AACA,WAAKwM,WAAL,CAAiBQ,CAAjB,CAAmB/M,CAAnB,GAAuB,KAAK2M,MAAL,CAAYM,KAAZ,CAAkBjN,CAAzC;AACA,UAAMuiB,aAAa,KAAKvlB,OAAL,CAAawI,GAAb,CAAiB,KAAKnL,IAAL,CAAUgF,IAAV,CAAe6d,QAAhC,CAAnB;;AAEA,UAAMrS,eAAe,KAAK5H,IAAL,CAAUuH,MAAV,CAAiBK,YAAtC;AACA,UAAM2X,aAAa3X,aAAaG,KAAhC;;AAEA,UAAGuX,UAAH,EAAe;AACb,YAAME,iBAAiB5X,aAAaI,SAAb,CAAuBxG,KAAvB,GAA+BoG,aAAaI,SAAb,CAAuBsX,WAAW/lB,IAAX,CAAgBM,MAAvC,CAAtD;AACA,YAAG,CAAC,KAAKmG,IAAL,CAAUuH,MAAV,CAAiBU,IAAjB,CAAsBC,cAAtB,CAAqC,KAAKoB,WAA1C,EAAuDkW,cAAvD,CAAJ,EAA4E;AAC1E,eAAKlW,WAAL,CAAiBqV,gBAAjB,CAAkCY,UAAlC;AACA,eAAKjW,WAAL,CAAiBV,aAAjB,CAA+B4W,cAA/B;AACD;AACF,OAND,MAMO;AACL,YAAG,CAAC,KAAKxf,IAAL,CAAUuH,MAAV,CAAiBU,IAAjB,CAAsBC,cAAtB,CAAqC,KAAKoB,WAA1C,EAAuDiW,UAAvD,CAAJ,EAAwE;AACtE,eAAKjW,WAAL,CAAiBqV,gBAAjB,CAAkC/W,aAAaI,SAAb,CAAuBxG,KAAzD;AACA,eAAK8H,WAAL,CAAiBV,aAAjB,CAA+B2W,UAA/B;AACD;AACF;;AAGD;AACA,WAAKvf,IAAL,CAAUuH,MAAV,CAAiB3M,IAAjB,CAAsB0b,MAAtB;AACD;;;0BAEK,CAeL;AAdC;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;AACA;AACA;;;AAIF;AACA;;;;yCAEqB;AACnB,WAAKlf,IAAL,CAAUuE,QAAV,GAAqB,IAArB;AACA,UAAI,KAAKpB,MAAT,EAAiB,KAAKklB,UAAL;AACjB,WAAKC,eAAL;AACA,WAAKnpB,KAAL,CAAWopB,MAAX;AACD;;;oCAEe;AACd,WAAKvoB,IAAL,CAAUwE,KAAV,GAAkB,IAAlB;AACA;AACD;;;kCAEa;AAAA;;AAEZ;AACA,cAAO,KAAK1E,QAAZ;;AAEE,aAAK,CAAL;AAAQ;;AAEN,cAAMqC,OAAO,KAAKgB,MAAL,CAAYhB,IAAZ,CAAiBM,MAA9B;AACA,cAAMsL,QAAQ,KAAK/N,IAAL,CAAU0E,MAAV,CAAiBvC,IAAjB,CAAd;AACA,eAAKpD,OAAL,CAAawkB,gBAAb,CAA8B,CAACphB,IAAD,EAAO4L,KAAP,CAA9B;;AAEA;;AARJ;;AAYA;;AAEA;AACAsP,iBAAW,YAAM;AACf,YAAI,EAAE,QAAKrd,IAAL,CAAUwE,KAAV,IAAmB,QAAKxE,IAAL,CAAUyE,QAA/B,CAAJ,EAA8C+jB,MAAMC,UAAN;AAC/C,OAFD,EAEG,IAFH;AAGD;;;mCAEc;AAAA;;AACb,WAAKzoB,IAAL,CAAUyE,QAAV,GAAqB,IAArB;;AAEA;AACA4Y,iBAAW,YAAM;AACf,YAAI,CAAE,QAAKrd,IAAL,CAAUwE,KAAhB,EAAwBgkB,MAAMC,UAAN;AACzB,OAFD,EAEGroB,KAAKC,GAAL,CAAS,EAAT,CAFH,EAJa,CAMK;AACnB;;;wBAGGqoB,O,EAAS;;AAEX;;AAEA,WAAK1oB,IAAL,CAAUwE,KAAV,GAAkB,IAAlB;AACA,WAAKmkB,kBAAL;AACD;;;sCAEiBD,O,EAAS,CAE1B;AADC;;;AAGF;;AAEA;;;;+BAEWE,I,EAAMhO,E,EAAIiO,M,EAAQ;;AAE3B;AACA,UAAM/pB,OAAO,CAAC8pB,IAAD,EAAOhO,EAAP,EAAWiO,MAAX,CAAb;;AAEA;AACA,WAAKC,YAAL,CAAkBhqB,IAAlB;;AAEA;AACA,WAAKC,OAAL,CAAagqB,gBAAb,CAA8BjqB,IAA9B;AAED;;;yCAEgC;AAAA;AAAA,UAAnB8pB,IAAmB;AAAA,UAAbhO,EAAa;AAAA,UAATiO,MAAS;;AAE/B;AACA,UAAGD,SAAS,KAAKzlB,MAAL,CAAYL,EAAxB,EAA4B;;AAE5B;AACA,UAAG,KAAKK,MAAL,CAAYC,IAAZ,CAAiB4lB,MAAjB,CAAwBpO,EAAxB,CAAH,EACE,KAAKqO,YAAL,CAAkB,CAACL,IAAD,EAAOC,MAAP,CAAlB;AAEH;;;iCAEY/pB,I,EAAM;;AAEjB;AACA,WAAKoqB,eAAL,CAAqBpqB,IAArB;;AAEA;AACA,WAAKC,OAAL,CAAaoqB,mBAAb,CAAiCrqB,IAAjC;AAED;;;4CAE+B;AAAA;AAAA,UAAf8pB,IAAe;AAAA,UAATC,MAAS;;AAE9B,UAAMO,IAAI,KAAKzmB,OAAL,CAAawI,GAAb,CAAiByd,IAAjB,CAAV;AACA,UAAMS,IAAI,KAAK1mB,OAAL,CAAawI,GAAb,CAAiB0d,MAAjB,CAAV;;AAEA,UAAIO,CAAJ,EAAOA,EAAErb,KAAF,CAAQub,MAAR;AACP,UAAID,CAAJ,EAAOA,EAAEtb,KAAF,CAAQwb,KAAR;;AAEP,UAAI,KAAKjqB,QAAT,EAAmB;AACnB,UAAIspB,QAAQ,KAAKzlB,MAAL,CAAYL,EAAxB,EAA4B;AAC1B,YAAMK,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiB0d,MAAjB,CAAf;AACA,aAAKW,UAAL,CACE3qB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,WAAzC,EAAsD,KAAKzjB,QAA3D,EACEkD,OAAOJ,IADT,CADF;AAKA,aAAKuP,MAAL,CAAYmX,YAAZ,CAAyBtmB,OAAOC,IAAP,CAAYwF,IAArC,EAA2C,CAAC,KAAKzF,MAAL,CAAYC,IAAb,EAAmB,UAAnB,CAA3C;AACA;AACD,OATD,MASO,IAAIylB,UAAU,KAAK1lB,MAAL,CAAYL,EAA1B,EAA8B;AACnC,aAAK0mB,UAAL,CACE3qB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,UAAzC,EAAqD,KAAKzjB,QAA1D,EACE,KAAK0C,OAAL,CAAawI,GAAb,CAAiByd,IAAjB,EAAuB7lB,IADzB,CADF;AAKD;AAEF;;AAED;;;;iCAEa6lB,I,EAAMhO,E,EAAIiO,M,EAAQ;;AAE7B;AACA,UAAM/pB,OAAO,CAAC8pB,IAAD,EAAOhO,EAAP,EAAWiO,MAAX,CAAb;;AAEA;AACA,WAAKa,cAAL,CAAoB5qB,IAApB;;AAEA;AACA,WAAKC,OAAL,CAAa4qB,kBAAb,CAAgC7qB,IAAhC;AAED;;;2CAEkC;AAAA;AAAA,UAAnB8pB,IAAmB;AAAA,UAAbhO,EAAa;AAAA,UAATiO,MAAS;;AAEjC;AACA,UAAGD,SAAS,KAAKzlB,MAAL,CAAYL,EAAxB,EAA4B;;AAE5B;AACA,WAAKK,MAAL,CAAYC,IAAZ,CAAiBY,MAAjB,CAAwBglB,MAAxB,CAA+BpO,EAA/B;AAED;;AAED;;AAEA;;;;8BAEUxX,I,EAAM;;AAEd;AACA,UAAMtE,OAAO,KAAK8qB,kBAAL,CAAwBxmB,IAAxB,CAAb;;AAEA;AACA,WAAKymB,YAAL,CAAkB/qB,IAAlB;;AAEA;AACA,WAAKC,OAAL,CAAa+qB,gBAAb,CAA8BhrB,IAA9B;;AAEA;AACAsE,WAAK2mB,QAAL,CAAcjrB,KAAKgE,EAAnB;AAED;;;uCAEkBM,I,EAAM;;AAEvB,aAAQ;AACNN,YAAI8E,KAAKoiB,IAAL,EADE;AAENnP,iBAASzX,KAAKO,KAAL,CAAWb,EAFd;AAGNX,cAAMiB,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAHhB;AAINJ,kBAAUe,KAAK6mB,cAJT;AAKNhV,eAAO7R,KAAK8mB,WAAL,GAAmB9mB,KAAK+mB,QALzB;AAMNznB,gBAAQU,KAAKgnB,aANP;AAONxP,YAAIxX,KAAKinB,SAPH;AAQNC,kBAAUlnB,KAAKmnB,eART;AASNzJ,kBAAU1d,KAAK0d,QATT;AAUN0J,eAAOpnB,KAAKqnB;AAVN,OAAR;AAaD;;;iCAEY3rB,I,EAAM;;AAEjB,UAAMsiB,IAAI,IAAI7C,MAAJ,CAAWzf,IAAX,CAAV;;AAEA;AACA,WAAKqF,KAAL,CAAWC,OAAX,CAAmB4G,GAAnB,CAAuBoW,EAAEte,EAAzB,EAA6Bse,CAA7B;;AAEA;AACAA,QAAElc,gBAAF,GAAqB,CAAC,KAAKC,OAAL,CAAaD,gBAAb,CAA8B0T,OAA/B,CAArB;AACAwI,QAAElc,gBAAF,CAAmBnD,IAAnB,CAAwB,KAAKL,KAAL,CAAW0f,EAAEjf,IAAb,KAAsB,KAAKA,IAA3B,GAAkC,KAAKgD,OAAL,CAAaD,gBAAb,CAA8B4T,WAAhE,GAA8E,KAAK3T,OAAL,CAAaD,gBAAb,CAA8B6T,aAApI;AACA,UAAI,CAAC,KAAKzZ,QAAN,IAAkB8hB,EAAEvG,OAAF,IAAa,KAAK1X,MAAL,CAAYL,EAA/C,EAAmDse,EAAElc,gBAAF,CAAmBnD,IAAnB,CAAwB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8B2T,UAAtD;AAEpD;;;iCAEY/V,E,EAAI;;AAEf;AACA,WAAK4nB,aAAL,CAAmB5nB,EAAnB;;AAEA;AACA,WAAK/D,OAAL,CAAa4rB,iBAAb,CAA+B7nB,EAA/B;AAED;;;kCAEaA,E,EAAI;;AAEhB,UAAIse,IAAI,KAAKjd,KAAL,CAAWC,OAAX,CAAmB+G,GAAnB,CAAuBrI,EAAvB,CAAR;AACA,UAAI,CAACse,CAAL,EAAQ;;AAER,WAAKnH,uBAAL,CAA6BmH,CAA7B;;AAEA,WAAKjd,KAAL,CAAWC,OAAX,CAAmB2L,MAAnB,CAA0BjN,EAA1B;AACA,UAAI,CAAC,KAAKxD,QAAV,EAAoB,KAAK4D,KAAL,CAAWM,IAAX,CAAgBY,OAAhB,CAAwB2L,MAAxB,CAA+BjN,EAA/B;;AAEpB;AACA,WAAK2iB,iBAAL,CAAuB3iB,EAAvB;AAED;;AAED;;;;6BAESM,I,EAAM;;AAEb;AACA,UAAMtE,OAAO,KAAK8rB,iBAAL,CAAuBxnB,IAAvB,CAAb;;AAEA;AACA,WAAKynB,WAAL,CAAiB/rB,IAAjB;;AAEA;AACA,WAAKC,OAAL,CAAa+rB,eAAb,CAA6BhsB,IAA7B;;AAEA;AACAsE,WAAK2nB,QAAL,CAAcjsB,KAAKgE,EAAnB;AAED;;;sCAEiBM,I,EAAM;AACtB,aAAQ;AACNN,YAAI8E,KAAKoiB,IAAL,EADE;AAENnP,iBAASzX,KAAKO,KAAL,CAAWb,EAFd;AAGNX,cAAMiB,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAHhB;AAINJ,kBAAUe,KAAK4nB,qBAJT;AAKN/V,eAAQ7R,KAAK6R,KAAN,GAAiB7R,KAAK6nB,YAAL,GAAoB,CAArB,IAA4BrjB,KAAKsjB,MAAL,KAAc,CAAf,GAAoB,CAA/C,CALjB;AAMNtQ,YAAIxX,KAAK+nB,iBANH;AAON;AACAzoB,gBAAQkc,MAAMhT,KAAN,CAAY4S,UARd;AASNgM,eAAO5iB,KAAKwjB,eAAL,CAAqBxM,MAAMhT,KAAN,CAAYyf,SAAjC,EAA4CzM,MAAMhT,KAAN,CAAY0f,SAAxD;AATD,OAAR;AAYD;;;gCAEWxsB,I,EAAM;;AAEhB,UAAIysB,KAAK,IAAI3M,KAAJ,CAAU9f,IAAV,CAAT;;AAEA;AACAysB,SAAG5F,SAAH,GAAe,KAAKrmB,QAAL,IAAiBisB,GAAGppB,IAAH,IAAW,KAAKA,IAAL,CAAUM,MAArD;;AAEA;AACA,WAAK0B,KAAL,CAAWE,MAAX,CAAkB2G,GAAlB,CAAsBugB,GAAGzoB,EAAzB,EAA6ByoB,EAA7B;;AAEA;AACAA,SAAGrmB,gBAAH,GAAsB,CAAC,KAAKC,OAAL,CAAaD,gBAAb,CAA8B0U,MAA/B,CAAtB;AACA,UAAI,KAAKlY,KAAL,CAAW6pB,GAAGppB,IAAd,KAAuB,KAAKA,IAAhC,EAAsC;AACpCopB,WAAGrmB,gBAAH,CAAoBnD,IAApB,CAAyB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8BgU,YAAvD;AACD,OAFD,MAEO;AACLqS,WAAGrmB,gBAAH,CAAoBnD,IAApB,CAAyB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8B2U,UAAvD;AACA0R,WAAGrmB,gBAAH,CAAoBnD,IAApB,CAAyB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8B+T,UAAvD;AACD;;AAED;AACA,UAAG,KAAKnZ,QAAL,IAAiB,CAApB,EAAuB,KAAKE,IAAL,CAAU0E,MAAV,CAAiB5F,KAAKqD,IAAtB;AAExB;;;gCAEWW,E,EAAI8X,E,EAAI;;AAElB;AACA,UAAM9b,OAAO,CAACgE,EAAD,EAAK8X,EAAL,CAAb;;AAEA;AACA,WAAK4Q,aAAL,CAAmB1sB,IAAnB;;AAEA;AACA,WAAKC,OAAL,CAAa0sB,iBAAb,CAA+B3sB,IAA/B;AAED;;;0CAEuB;AAAA;AAAA,UAATgE,EAAS;AAAA,UAAL8X,EAAK;;AACtB,UAAMxP,QAAQ7L,IAAIS,IAAJ,CAASmE,KAAT,CAAeE,MAAf,CAAsB8G,GAAtB,CAA0BrI,EAA1B,CAAd;AACA,UAAGsI,KAAH,EAAUA,MAAM4d,MAAN,CAAapO,EAAb;AACX;;;gCAEW9X,E,EAAIX,I,EAAM;;AAEpB;AACA,UAAMrD,OAAO,CAACgE,EAAD,EAAKX,IAAL,CAAb;;AAEA;AACA,WAAKupB,YAAL,CAAkB5sB,IAAlB;;AAEA;AACA,WAAKC,OAAL,CAAa4sB,gBAAb,CAA8B7sB,IAA9B;AAED;;;yCAEwB;AAAA;AAAA,UAAXgE,EAAW;AAAA,UAAPX,IAAO;;AACvB;AACA,UAAIif,IAAI,KAAKjd,KAAL,CAAWE,MAAX,CAAkB8G,GAAlB,CAAsBrI,EAAtB,CAAR;AACA,UAAI,CAACse,CAAL,EAAQ,OAAO,KAAP;;AAER;AACA,UAAIA,EAAEjG,MAAN,EAAc;;AAEZ;AACA,YAAIiG,EAAEjf,IAAF,IAAUA,IAAd,EAAoB;;AAElB,cAAMypB,UAAUxK,EAAEjf,IAAlB;;AAEA;AACAif,YAAEjf,IAAF,GAASA,IAAT;;AAEA;AACA,cAAI,CAAC,KAAK7C,QAAV,EAAoB;AAClB,gBAAI8hB,EAAEjf,IAAF,IAAU,KAAKA,IAAL,CAAUM,MAAxB,EAAgC;AAC9B,mBAAKga,SAAL,CAAeC,WAAf,CAA2BhW,GAA3B,CAA+B0a,CAA/B;AACD,aAFD,MAEO;AACL,mBAAK3E,SAAL,CAAeC,WAAf,CAA2B3M,MAA3B,CAAkCqR,CAAlC;AACD;AACF;;AAED;AACA,cAAI,CAAC,KAAK9hB,QAAV,EAAoB;;AAElB,iBAAK4D,KAAL,CAAWM,IAAX,CAAgBa,MAAhB,CAAuB0L,MAAvB,CAA8BjN,EAA9B;AAED;;AAED;AACA,cAAIgN,IAAI,KAAKlH,IAAL,CAAUvE,MAAV,CAAiB8G,GAAjB,CAAqBrI,EAArB,CAAR;AACA,cAAIgN,CAAJ,EAAO;AACL,gBAAI9M,OAAO,KAAKyZ,SAAL,CAAeC,WAAf,CAA2BoF,GAA3B,CAA+BV,CAA/B,IAAoC,OAApC,GAA+CA,EAAEjG,MAAF,GAAW,QAAX,GAAsB,UAAhF;AACArL,cAAEgV,KAAF,GAAUjmB,cAAc8Q,cAAd,CAA6BtL,MAA7B,CAAoCrB,IAApC,EAA0Coe,EAAEjf,IAA5C,CAAV;AACA;AACD;;AAED;AACA,eAAK8X,uBAAL,CAA6BmH,CAA7B;AACAA,YAAElc,gBAAF,GAAqB,CAAC,KAAKC,OAAL,CAAaD,gBAAb,CAA8B0U,MAA/B,CAArB;AACA,cAAI,KAAKlY,KAAL,CAAW0f,EAAEjf,IAAb,KAAsB,KAAKA,IAA/B,EAAqC;AACnCif,cAAElc,gBAAF,CAAmBnD,IAAnB,CAAwB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8BgU,YAAtD;AACD,WAFD,MAEO;AACLkI,cAAElc,gBAAF,CAAmBnD,IAAnB,CAAwB,KAAKoD,OAAL,CAAaD,gBAAb,CAA8B2U,UAAtD;AACD;AACD,eAAKxU,qBAAL,CAA2B+b,CAA3B;;AAEA;AACA,cAAG,KAAKthB,QAAL,IAAiB,CAApB,EAAuB;AACrB,iBAAKE,IAAL,CAAU0E,MAAV,CAAiBknB,OAAjB;AACA,iBAAK5rB,IAAL,CAAU0E,MAAV,CAAiBvC,IAAjB;AACD;AAGF,SAnDW,CAmDV;AACH,OA1DsB,CA0DrB;;AAGH;;;gCAEWW,E,EAAI;;AAEd;AACA,WAAK+oB,YAAL,CAAkB/oB,EAAlB;;AAEA;AACA,WAAK/D,OAAL,CAAa+sB,gBAAb,CAA8BhpB,EAA9B;AAED;;;iCAEYA,E,EAAI;AACf,UAAIse,IAAI,KAAKjd,KAAL,CAAWE,MAAX,CAAkB8G,GAAlB,CAAsBrI,EAAtB,CAAR;AACA,UAAI,CAACse,CAAL,EAAQ,OAAO,KAAP;;AAER,WAAKnH,uBAAL,CAA6BmH,CAA7B;;AAEA,WAAKjd,KAAL,CAAWE,MAAX,CAAkB0L,MAAlB,CAAyBjN,EAAzB;AACA,UAAI,CAAC,KAAKxD,QAAV,EAAoB,KAAK4D,KAAL,CAAWM,IAAX,CAAgBa,MAAhB,CAAuB0L,MAAvB,CAA8BjN,EAA9B;;AAEpB,UAAIse,EAAEjG,MAAN,EAAc,KAAKsB,SAAL,CAAeC,WAAf,CAA2B3M,MAA3B,CAAkCqR,CAAlC;;AAEd;AACA,WAAKwE,gBAAL,CAAsB9iB,EAAtB;AACA,WAAKipB,iCAAL,CAAuCjpB,EAAvC;;AAEA;AACA,UAAG,KAAKhD,QAAL,IAAiB,CAApB,EAAuB,KAAKE,IAAL,CAAU0E,MAAV,CAAiB0c,EAAEjf,IAAnB;;AAEvB,aAAO,IAAP;AACD;;AAED;;;;2BAEOiB,I,EAAM;;AAEX;AACA,UAAMtE,OAAO,KAAKktB,eAAL,CAAqB5oB,IAArB,CAAb;;AAEA;AACA,WAAK6oB,SAAL,CAAentB,IAAf;;AAEA;AACA,WAAKC,OAAL,CAAamtB,aAAb,CAA2BptB,IAA3B;;AAEA;AACAsE,WAAK+oB,MAAL,CAAYrtB,KAAKgE,EAAjB;AAED;;;oCAEeM,I,EAAM;AACpB,aAAQ;AACNN,YAAI8E,KAAKoiB,IAAL,EADE;AAENhnB,cAAMI,KAAKgpB,QAFL;AAGNjqB,cAAMiB,KAAKO,KAAL,CAAWxB,IAAX,CAAgBM,MAHhB;AAINU,gBAAQC,KAAKO,KAAL,CAAWb,EAJb;AAKNT,kBAAUe,KAAK4nB,qBALT;AAMN/V,eAAO7R,KAAK6R;AANN,OAAR;AAQD;;;8BAESnW,I,EAAM;AACd,UAAI4T,CAAJ;AACA,cAAQ5T,KAAKkE,IAAb;AACE,aAAK,WAAL;AACE0P,cAAI,IAAI2Z,SAAJ,CAAcvtB,IAAd,CAAJ;AACA;AACF,aAAK,UAAL;AACE4T,cAAI,IAAI4Z,QAAJ,CAAaxtB,IAAb,CAAJ;AACA;AACF,aAAK,YAAL;AACE4T,cAAI,IAAI6Z,SAAJ,CAAcztB,IAAd,CAAJ;AACA;AACF,aAAK,eAAL;AACE4T,cAAI,IAAI8Z,YAAJ,CAAiB1tB,IAAjB,CAAJ;AACA;AACF,aAAK,SAAL;AACE4T,cAAI,IAAI+Z,OAAJ,CAAY3tB,IAAZ,CAAJ;AACA;AACF;AACE;AAjBJ;;AAoBA;AACA,UAAIA,KAAKkE,IAAL,IAAa,eAAjB,EAAkC;AAChC,YAAIiH,WAAWpL,cAAcoL,QAAd,CAAuBnL,KAAKkE,IAA5B,EAAkC,KAAKtB,KAAL,CAAWgR,EAAEvQ,IAAb,EAAmBqJ,KAArD,CAAf;AACA,YAAIkhB,KAAK,IAAI3kB,SAASgC,KAAb,CAAmBE,QAAnB,CAAT;AACAyiB,WAAGtiB,KAAH,CAAS,CAAC,EAAV,EAAc,CAAC,EAAf,EAAmB,EAAnB,EAAuB,EAAvB;AACA,aAAKxB,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqC6iB,EAArC;;AAEA,aAAK9jB,IAAL,CAAUtE,IAAV,CAAe0G,GAAf,CAAmB0H,EAAE5P,EAArB,EAAyB4pB,EAAzB;;AAEA;;AAEAha,UAAExN,gBAAF,GAAsB,KAAKxD,KAAL,CAAWgR,EAAEvQ,IAAb,KAAsB,KAAKA,IAA5B,GAAoC,CAAC,KAAKgD,OAAL,CAAaD,gBAAb,CAA8BsU,aAA/B,CAApC,GAAoF,EAAzG;AACD;;AAED,WAAKrV,KAAL,CAAWG,IAAX,CAAgB0G,GAAhB,CAAoB0H,EAAE5P,EAAtB,EAA0B4P,CAA1B;;AAEA,UAAI,CAAC,KAAKpT,QAAV,EAAoB,IAAIoT,EAAEvQ,IAAF,IAAU,KAAKe,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBxB,IAAtB,CAA2BM,MAAzC,EAAiD,KAAKga,SAAL,CAAeE,SAAf,CAAyBjW,GAAzB,CAA6BgM,EAAE5P,EAA/B;;AAErE,aAAO4P,CAAP;AACD;;;8BAES5P,E,EAAI;;AAEZ;AACA,WAAKof,UAAL,CAAgBpf,EAAhB;;AAEA;AACA,WAAK/D,OAAL,CAAa4tB,cAAb,CAA4B7pB,EAA5B;AAED;;;+BAEUA,E,EAAI;AACb,UAAI4P,IAAI,KAAKvO,KAAL,CAAWG,IAAX,CAAgB6G,GAAhB,CAAoBrI,EAApB,CAAR;AACA,UAAI,CAAC4P,CAAL,EAAQ,OAAO,KAAP;;AAER,WAAKuH,uBAAL,CAA6BvH,CAA7B;;AAEA,WAAKvO,KAAL,CAAWG,IAAX,CAAgByL,MAAhB,CAAuBjN,EAAvB;AACA,UAAI,CAAC,KAAKxD,QAAV,EAAoB,KAAK4D,KAAL,CAAWM,IAAX,CAAgBc,IAAhB,CAAqByL,MAArB,CAA4BjN,EAA5B;;AAEpB,WAAK2Z,SAAL,CAAeE,SAAf,CAAyB5M,MAAzB,CAAgC2C,EAAE5P,EAAlC;;AAEA;AACA,UAAI4P,EAAE1P,IAAF,IAAU,eAAd,EAA+B;AAC7B,YAAI8M,IAAI,KAAKlH,IAAL,CAAUtE,IAAV,CAAe6G,GAAf,CAAmBrI,EAAnB,CAAR;AACA,YAAIgN,CAAJ,EAAO;AACL,eAAKlH,IAAL,CAAUtE,IAAV,CAAeyL,MAAf,CAAsBjN,EAAtB;AACA,eAAK8F,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BqG,WAA5B,CAAwCF,CAAxC;AACD;AACF;AACD,aAAO,IAAP;AACD;;AAED;;AAEA;;;;+BAEW1M,I,EAAM;;AAEf;AACA,UAAMN,KAAKM,KAAKO,KAAL,CAAWb,EAAtB;;AAEA;AACA,WAAK8pB,WAAL,CAAiB9pB,EAAjB;;AAEA;AACA,WAAK/D,OAAL,CAAa8tB,eAAb,CAA6B/pB,EAA7B;;AAEA;AACAM,WAAK0pB,aAAL;AAED;;;gCAEWhqB,E,EAAI;;AAEd;AACA,UAAMK,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiBrI,EAAjB,CAAf;AACA,WAAK9C,IAAL,CAAUgF,IAAV,CAAe6d,QAAf,GAA0B/f,EAA1B;AACA,UAAG,KAAKH,OAAL,CAAawI,GAAb,CAAiBrI,EAAjB,CAAH,EAAyB,KAAKH,OAAL,CAAawI,GAAb,CAAiBrI,EAAjB,EAAqBM,IAArB,CAA0B2pB,OAA1B,CAAkC,KAAK/sB,IAAL,CAAUgF,IAA5C;;AAEzB;AACA,UAAIyZ,IAAItb,OAAOhB,IAAP,CAAYqJ,KAApB;AAAA,UAA2BwhB,KAAK7pB,OAAOhB,IAAP,IAAe,KAAKA,IAApD;AACA;AACA,WAAKqhB,KAAL,CACE3kB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyCsJ,KAAK,eAAL,GAAuB,gBAAhE,EAAkF,KAAK/sB,QAAvF,EACEpB,cAAc4kB,mBAAd,CAAkChjB,MAAlC,CAAyCge,CAAzC,EAA4C,KAAKxe,QAAjD,CADF,CADF,EAIIwe,CAJJ;;AAMA;AACA;;AAEA;AAED;;;kCAEa;;AAEZ;AACA,WAAKwO,QAAL;;AAEA;AACA,WAAKluB,OAAL,CAAamuB,YAAb;;AAEA;AACA,UAAM/qB,OAAO,KAAKgB,MAAL,CAAYhB,IAAZ,CAAiBM,MAA9B;AACA,UAAMsL,QAAQ,KAAK/N,IAAL,CAAU0E,MAAV,CAAiBvC,IAAjB,CAAd;AACA,WAAKpD,OAAL,CAAawkB,gBAAb,CAA8B,CAACphB,IAAD,EAAO4L,KAAP,CAA9B;AACAof,cAAQxsB,GAAR,wBAAiCwB,IAAjC,WAA2C4L,KAA3C;AAED;;;+BAEU;;AAET,UAAIjL,EAAJ;AAAA,UAAQkC,OAAO,KAAKhF,IAAL,CAAUgF,IAAzB;AAAA,UAA+B5B,OAAO,IAAtC;;AAEA,UAAIN,KAAKkC,KAAK6d,QAAd,EAAwB;AACtB,YAAI1f,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiBnG,KAAK6d,QAAtB,CAAb;AACA,YAAIzf,OAAOD,OAAOC,IAAlB,EACEA,KAAKgqB,SAAL;;AAEFpoB,aAAKqoB,KAAL;;AAEA,YAAI5O,IAAItb,OAAOhB,IAAP,CAAYqJ,KAApB;AAAA,YAA2BwhB,KAAK7pB,OAAOhB,IAAP,IAAe,KAAKA,IAApD;AACA,YAAIqJ,QAAQ3F,SAAZ,CARsB,CAQA;AACtB,aAAK2d,KAAL,CACE3kB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyCsJ,KAAK,eAAL,GAAuB,gBAAhE,EAAkF,KAAK/sB,QAAvF,EACEpB,cAAc4kB,mBAAd,CAAkChjB,MAAlC,CAAyCge,CAAzC,EAA4C,KAAKxe,QAAjD,CADF,CADF,EAIIuL,KAJJ;;AAMA;AACD;AAEF;;;yCAE2B;AAAA;AAAA,UAAdrJ,IAAc;AAAA,UAAR4L,KAAQ;;AAE1B;AACA,WAAK/N,IAAL,CAAU0E,MAAV,CAAiBvC,IAAjB,IAAyB4L,KAAzB;AACAof,cAAQxsB,GAAR,0BAAmCwB,IAAnC,WAA6C4L,KAA7C;AAED;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;0BAIMuf,G,EAAwB;AAAA;;AAAA,UAAnB9hB,KAAmB,uEAAX,SAAW;;AAC5B+hB,mBAAa,KAAKC,YAAlB;AACA,UAAI1d,IAAI,KAAKlH,IAAL,CAAUc,OAAV,CAAkB0E,OAA1B;AACA0B,QAAE1C,IAAF,GAASkgB,GAAT;AACAxd,QAAEtE,KAAF,GAAUA,KAAV;AACAsE,QAAEsV,WAAF;AACA,UAAIkI,IAAIG,IAAJ,OAAe,EAAnB,EAAuB,KAAKD,YAAL,GAAoBnQ,WAAW,YAAM;AAC1D,gBAAKmG,KAAL,CAAW,EAAX;AACD,OAF0C,EAExC,IAFwC,CAApB;AAGxB;;;+BAEU8J,G,EAAwB;AAAA;;AAAA,UAAnB9hB,KAAmB,uEAAX,SAAW;;AACjC+hB,mBAAa,KAAKG,gBAAlB;AACA,UAAI5d,IAAI,KAAKlH,IAAL,CAAUc,OAAV,CAAkB2E,YAA1B;AACAyB,QAAE1C,IAAF,GAASkgB,GAAT;AACAxd,QAAEtE,KAAF,GAAUA,KAAV;AACAsE,QAAEsV,WAAF;AACA,UAAIkI,IAAIG,IAAJ,OAAe,EAAnB,EAAuB,KAAKC,gBAAL,GAAwBrQ,WAAW,YAAM;AAC9D,gBAAKmM,UAAL,CAAgB,EAAhB;AACD,OAF8C,EAE5C,IAF4C,CAAxB;AAGxB;;;gCAGWmE,O,EAASC,O,EAAS;AAAC;AAC7B,UAAIxE,IAAI,KAAKzmB,OAAL,CAAawI,GAAb,CAAiBwiB,OAAjB,CAAR;AAAA,UAAmCtE,IAAI,KAAK1mB,OAAL,CAAawI,GAAb,CAAiByiB,OAAjB,CAAvC;AACA,UAAIxE,CAAJ,EAAOA,EAAErb,KAAF,CAAQub,MAAR;AACP,UAAID,CAAJ,EAAOA,EAAEtb,KAAF,CAAQwb,KAAR;;AAEP,UAAI,KAAKjqB,QAAT,EAAmB;AACnB,UAAIquB,WAAW,KAAKxqB,MAAL,CAAYL,EAA3B,EAA+B;AAC7B,YAAMK,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiByiB,OAAjB,CAAf;AACA,aAAKpE,UAAL,CACE3qB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,WAAzC,EAAsD,KAAKzjB,QAA3D,EACEkD,OAAOJ,IADT,CADF;AAKA,aAAKuP,MAAL,CAAYmX,YAAZ,CAAyBtmB,OAAOC,IAAP,CAAYwF,IAArC,EAA2C,CAAC,KAAKzF,MAAL,CAAYC,IAAb,EAAmB,UAAnB,CAA3C;AACA;AACD,OATD,MASO,IAAIwqB,WAAW,KAAKzqB,MAAL,CAAYL,EAA3B,EAA+B;AACpC,aAAK0mB,UAAL,CACE3qB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,UAAzC,EAAqD,KAAKzjB,QAA1D,EACE,KAAK0C,OAAL,CAAawI,GAAb,CAAiBwiB,OAAjB,EAA0B5qB,IAD5B,CADF;AAKD;AACF;;AAID;AACA;AACA;AACA;AACA;AACA;;;;qCAEiBqe,C,EAAG;;AAElB,UAAMhX,QAAQvL,cAAc8Q,cAAd,CAA6BvL,OAA7B,CAAqCgd,EAAEjf,IAAvC,CAAd;AACA,UAAM0rB,KAAK,IAAI9lB,SAASmD,MAAb,CAAoBd,KAApB,CAAX;AACAyjB,SAAGnlB,MAAH,GAAYmlB,GAAGllB,MAAH,GAAYyY,EAAE1e,MAAF,GAAW6b,OAAO3S,KAAP,CAAa4S,UAAhD;AACAqP,SAAGpjB,IAAH,GAAUojB,GAAGnjB,IAAH,GAAWN,MAAMvF,KAAN,GAAc,CAAnC;AACA,WAAK+D,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqCgkB,EAArC;;AAEA;AACA,WAAKjlB,IAAL,CAAUxE,OAAV,CAAkB4G,GAAlB,CAAsBoW,EAAEte,EAAxB,EAA4B+qB,EAA5B;;AAEA,aAAOA,EAAP;AAED;;;sCAEiB/qB,E,EAAI;;AAEpB,UAAMgN,IAAI,KAAKlH,IAAL,CAAUxE,OAAV,CAAkB+G,GAAlB,CAAsBrI,EAAtB,CAAV;AACA,UAAIgN,CAAJ,EAAO;AACL,aAAKlH,IAAL,CAAUxE,OAAV,CAAkB2L,MAAlB,CAAyBjN,EAAzB;AACA,aAAK8F,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BqG,WAA5B,CAAwCF,CAAxC;AACD;AAEF;;;oCAEeyb,E,EAAI;;AAElB;AACA;;AAEA;AACA,UAAIvoB,OAAO,UAAX;AACA,UAAGuoB,GAAGpQ,MAAH,IAAaoQ,GAAGlK,SAAnB,EAA8Bre,OAAOuoB,GAAG5F,SAAH,GAAe,OAAf,GAAyB,QAAhC;AAC9B,UAAIvb,QAAQvL,cAAc8Q,cAAd,CAA6BtL,MAA7B,CAAoCrB,IAApC,EAA0CuoB,GAAGppB,IAA7C,CAAZ;AACA,UAAIyN,MAAM,IAAI7H,SAASmD,MAAb,CAAoBd,KAApB,CAAV;AACAwF,UAAIlH,MAAJ,GAAakH,IAAIjH,MAAJ,GAAa4iB,GAAG7oB,MAAH,GAAYkc,MAAMhT,KAAN,CAAY4S,UAAlD;AACA5O,UAAInF,IAAJ,GAAWmF,IAAIlF,IAAJ,GAAYN,MAAMvF,KAAN,GAAc,CAArC;AACA,WAAK+D,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BE,QAA5B,CAAqC+F,GAArC;;AAEA;AACA,WAAKhH,IAAL,CAAUvE,MAAV,CAAiB2G,GAAjB,CAAqBugB,GAAGzoB,EAAxB,EAA4B8M,GAA5B;;AAEA,aAAOA,GAAP;AAED;;;qCAEgB9M,E,EAAI;;AAEnB,UAAMgN,IAAI,KAAKlH,IAAL,CAAUvE,MAAV,CAAiB8G,GAAjB,CAAqBrI,EAArB,CAAV;AACA,UAAIgN,CAAJ,EAAO;AACL,aAAKlH,IAAL,CAAUvE,MAAV,CAAiB0L,MAAjB,CAAwBjN,EAAxB;AACA,aAAK8F,IAAL,CAAUU,KAAV,CAAgBG,MAAhB,CAAuBE,IAAvB,CAA4BqG,WAA5B,CAAwCF,CAAxC;AACD;AAEF;;AAED;;;;6BAES;AACP;AACA;AACA;AACA,WAAKge,YAAL;AACA,WAAKC,aAAL;AACA,WAAKC,WAAL;AACA,WAAK1F,eAAL;AACA,WAAK2F,YAAL;AACA,WAAKC,UAAL;AACA,WAAKC,UAAL;AACA,WAAKC,WAAL;;AAEA,aAAOvvB,cAAcwvB,eAArB;AACD;;;mCAEc;AACb,aAAO,KAAKtQ,UAAZ;AACA,aAAO,KAAKE,YAAZ;AACA,aAAO,KAAK9a,MAAZ;AACA,aAAO,KAAKhB,IAAZ;;AAEA,aAAOtD,cAAc8Q,cAArB;AACD;;;oCAEe;AACd,aAAO,KAAK8M,SAAZ;AACD;;;kCAEa;AACZ,UAAIjZ,OAAO,KAAKN,KAAL,CAAWM,IAAtB;AACA,UAAIA,IAAJ,EAAU,OAAOA,KAAKG,KAAL,CAAWwP,KAAlB;AACX;;;sCAEiB;AAAA;AAAA;AAAA;;AAAA;AAChB,+BAAwB,KAAKN,aAA7B,wIAA4C;AAAA;;AAAA;;AAAA,cAAhCyb,OAAgC;;AAC1ClmB,iBAAOmmB,mBAAP,CAA2B,SAA3B,EAAsCD,OAAtC,EAD0C,CACM;AAChDlmB,iBAAOmmB,mBAAP,CAA2B,OAA3B,EAAoCD,OAApC,EAF0C,CAEI;AAC/C;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKjB;;;mCAEc;AACb,aAAO,KAAKhc,MAAZ;AACD;;;iCAEY;AACX,aAAO,KAAK1J,IAAZ;AACA,aAAO,KAAKR,MAAZ;AACA,WAAKN,KAAL,CAAW0mB,iBAAX;AACA,aAAO,KAAK1mB,KAAZ;AACA,aAAO,KAAKrH,MAAZ;AACD;;;iCAEY;AACX,aAAO,KAAKT,IAAZ;AACD;;;kCAEa;AACZ,aAAO,KAAKkD,KAAZ;AACA,aAAO,KAAKP,OAAZ;AACA,aAAO,KAAKjB,KAAZ;AACD;;;4BAEO,CAEP;;;iCAEY;AACX,UAAIyR,KAAJ;AACA,UAAI,KAAKhQ,MAAT,EAAiB,IAAIgQ,QAAQ,KAAKhQ,MAAL,CAAYgQ,KAAxB,EAA+BA,MAAMsb,KAAN;AACjD;;;qCAEgB3rB,E,EAAI;AACnB,UAAIK,SAAS,KAAKR,OAAL,CAAawI,GAAb,CAAiBrI,EAAjB,CAAb;AACA,UAAIK,MAAJ,EAAY;AACVA,eAAO4e,YAAP,GAAsB,IAAtB;AACA5e,eAAOC,IAAP,CAAYmB,QAAZ,GAAuB,IAAvB;AACA,YAAI,KAAKjF,QAAT,EAAmB,KAAKmT,aAAL,CAAmB1C,MAAnB,CAA0B5M,MAA1B;;AAEnB;AACA,YAAI,CAAC,KAAK7D,QAAV,EAAoB;AAClB,cAAG6D,OAAOhB,IAAP,KAAgB,KAAKA,IAAxB,EAA8B,KAAKqhB,KAAL,CAC5B3kB,cAAc4kB,mBAAd,CAAkCC,MAAlC,CAAyC,uBAAzC,EAAkE,KAAKzjB,QAAvE,EACEkD,OAAOJ,IADT,CAD4B;AAK/B;AACF,OAbD,MAaO;AACLpC,+CAAqCmC,EAArC;AACD;AACF;;;2BAtjIahE,I,EAAMC,O,EAAS;AAC3B,UAAIF,cAAcwvB,eAAlB,EAAmCxvB,cAAcwvB,eAAd,CAA8BK,MAA9B;AACnC,aAAO7vB,cAAcwvB,eAAd,GAAgC,IAAIxvB,aAAJ,CAAkBC,IAAlB,EAAwBC,OAAxB,CAAvC;AACD;;;;;;AAujIHF,cAAcoL,QAAd,GAAyB;AACvBoC,eAAa,qBAACb,KAAD,EAAQmjB,IAAR;AAAA,WAAiB,IAAI5mB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCqjB,UAAzC,CAAoD,CAApD,EAAuD,CAAvD,EAA0DF,IAA1D,CAAjB;AAAA,GADU;AAEvBliB,eAAa,qBAACjB,KAAD,EAAQmjB,IAAR,EAAcG,SAAd;AAAA,WAA4B,IAAI/mB,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DF,SAA1D,EAAqED,UAArE,CAAgF,CAAhF,EAAmF,CAAnF,EAAsFF,IAAtF,CAA5B;AAAA,GAFU;;AAIvBM,aAAW,mBAACzjB,KAAD,EAAQ0jB,CAAR,EAAWC,CAAX;AAAA,WAAiB,IAAIpnB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCrB,QAAzC,CAAkD,CAAlD,EAAqD,CAArD,EAAwD+kB,CAAxD,EAA2DC,CAA3D,CAAjB;AAAA,GAJY;AAKvBC,mBAAiB,yBAAC5jB,KAAD,EAAQ0jB,CAAR,EAAWC,CAAX;AAAA,WAAiB,IAAIpnB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCrB,QAAzC,CAAkD,CAAlD,EAAsD,CAACglB,CAAD,GAAG,CAAzD,EAA6DD,CAA7D,EAAgEC,CAAhE,CAAjB;AAAA,GALM;;AAOvB/sB,cAAY,oBAACoJ,KAAD;AAAA,WAAW,IAAIzD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0D,CAA1D,EAA6DH,UAA7D,CAAwE,CAAxE,EAA2E,CAA3E,EAA8E,EAA9E,CAAX;AAAA,GAPW;AAQvBpjB,mBAAiB,yBAACD,KAAD;AAAA,WAAW,IAAIzD,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCqjB,UAAzC,CAAoD,CAApD,EAAuD,CAAvD,EAA0D,EAA1D,CAAX;AAAA,GARM;AASvB;AACAzrB,QAAM;AACJ;AACA,GAAC,UAACoI,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEwqB,MAAjE,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EC,MAA9E,CAAqF,CAAC,CAAtF,EAAyF,CAAC,CAA1F,EAA6FA,MAA7F,CAAoG,CAAC,CAArG,EAAwG,CAAxG,EAA2GA,MAA3G,CAAkH,CAAlH,EAAqH,CAArH,EAAwHA,MAAxH,CAA+H,CAAC,CAAhI,EAAmI,CAAC,CAApI,CAAlB;AAAA,GAAD,EACE,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEqF,SAAjE,CAA2EsB,KAA3E,EAAkF6jB,MAAlF,CAAyF,CAAzF,EAA4F,CAA5F,EAA+FC,MAA/F,CAAsG,CAAC,CAAvG,EAA0G,CAAC,CAA3G,EAA8GA,MAA9G,CAAqH,CAAC,CAAtH,EAAyH,CAAzH,EAA4HA,MAA5H,CAAmI,CAAnI,EAAsI,CAAtI,EAAyIA,MAAzI,CAAgJ,CAAC,CAAjJ,EAAoJ,CAAC,CAArJ,CAAlB;AAAA,GADF,CAFI;;AAKJ;AACA,GAAC,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEwqB,MAAjE,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EC,MAA9E,CAAqF,CAAC,GAAtF,EAA2F,CAAC,CAA5F,EAA+FA,MAA/F,CAAsG,CAAC,CAAvG,EAA0G,CAA1G,EAA6GA,MAA7G,CAAoH,CAAC,GAArH,EAA0H,CAA1H,EAA6HA,MAA7H,CAAoI,CAApI,EAAuI,CAAvI,EAA0IA,MAA1I,CAAiJ,CAAC,GAAlJ,EAAuJ,CAAC,CAAxJ,CAAlB;AAAA,GAAD,EACE,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEqF,SAAjE,CAA2EsB,KAA3E,EAAkF6jB,MAAlF,CAAyF,CAAzF,EAA4F,CAA5F,EAA+FC,MAA/F,CAAsG,CAAC,GAAvG,EAA4G,CAAC,CAA7G,EAAgHA,MAAhH,CAAuH,CAAC,CAAxH,EAA2H,CAA3H,EAA8HA,MAA9H,CAAqI,CAAC,GAAtI,EAA2I,CAA3I,EAA8IA,MAA9I,CAAqJ,CAArJ,EAAwJ,CAAxJ,EAA2JA,MAA3J,CAAkK,CAAC,GAAnK,EAAwK,CAAC,CAAzK,CAAlB;AAAA,GADF,CANI;;AASJ;AACA,GAAC,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEwqB,MAAjE,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EC,MAA9E,CAAqF,CAAC,CAAtF,EAAyF,CAAC,CAA1F,EAA6FA,MAA7F,CAAoG,CAAC,GAArG,EAA0G,CAA1G,EAA6GA,MAA7G,CAAoH,CAAC,CAArH,EAAwH,CAAxH,EAA2HA,MAA3H,CAAkI,CAAlI,EAAqI,CAArI,EAAwIA,MAAxI,CAA+I,CAAC,CAAhJ,EAAmJ,CAAC,CAApJ,CAAlB;AAAA,GAAD,EACE,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEqF,SAAjE,CAA2EsB,KAA3E,EAAkF6jB,MAAlF,CAAyF,CAAzF,EAA4F,CAA5F,EAA+FC,MAA/F,CAAsG,CAAC,CAAvG,EAA0G,CAAC,CAA3G,EAA8GA,MAA9G,CAAqH,CAAC,GAAtH,EAA2H,CAA3H,EAA8HA,MAA9H,CAAqI,CAAC,CAAtI,EAAyI,CAAzI,EAA4IA,MAA5I,CAAmJ,CAAnJ,EAAsJ,CAAtJ,EAAyJA,MAAzJ,CAAgK,CAAC,CAAjK,EAAoK,CAAC,CAArK,CAAlB;AAAA,GADF,CAVI;;AAaJ;AACA,GAAC,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEwqB,MAAjE,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EC,MAA9E,CAAqF,GAArF,EAA0F,CAAC,CAA3F,EAA8FA,MAA9F,CAAqG,CAAC,CAAtG,EAAyG,CAAC,CAA1G,EAA6GA,MAA7G,CAAoH,CAAC,CAArH,EAAwH,CAAxH,EAA2HA,MAA3H,CAAkI,GAAlI,EAAuI,CAAvI,EAA0IA,MAA1I,CAAiJ,CAAjJ,EAAoJ,CAApJ,EAAuJA,MAAvJ,CAA8J,GAA9J,EAAmK,CAAC,CAApK,CAAlB;AAAA,GAAD,EACE,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEqF,SAAjE,CAA2EsB,KAA3E,EAAkF6jB,MAAlF,CAAyF,CAAzF,EAA4F,CAA5F,EAA+FC,MAA/F,CAAsG,GAAtG,EAA2G,CAAC,CAA5G,EAA+GA,MAA/G,CAAsH,CAAC,CAAvH,EAA0H,CAAC,CAA3H,EAA8HA,MAA9H,CAAqI,CAAC,CAAtI,EAAyI,CAAzI,EAA4IA,MAA5I,CAAmJ,GAAnJ,EAAwJ,CAAxJ,EAA2JA,MAA3J,CAAkK,CAAlK,EAAqK,CAArK,EAAwKA,MAAxK,CAA+K,GAA/K,EAAoL,CAAC,CAArL,CAAlB;AAAA,GADF,CAdI;;AAiBJ;AACA,GAAC,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEwqB,MAAjE,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EC,MAA9E,CAAqF,GAArF,EAA0F,CAAC,CAA3F,EAA8FA,MAA9F,CAAqG,CAAC,CAAtG,EAAyG,CAAC,CAA1G,EAA6GA,MAA7G,CAAoH,CAAC,GAArH,EAA0H,CAA1H,EAA6HA,MAA7H,CAAoI,CAAC,CAArI,EAAwI,CAAxI,EAA2IA,MAA3I,CAAkJ,GAAlJ,EAAuJ,CAAvJ,EAA0JA,MAA1J,CAAiK,CAAjK,EAAoK,CAApK,EAAuKA,MAAvK,CAA8K,GAA9K,EAAmL,CAAC,CAApL,CAAlB;AAAA,GAAD,EACE,UAAC9jB,KAAD,EAAQ3G,KAAR;AAAA,WAAkB,IAAIkD,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0DnqB,KAA1D,EAAiEqF,SAAjE,CAA2EsB,KAA3E,EAAkF6jB,MAAlF,CAAyF,CAAzF,EAA4F,CAA5F,EAA+FC,MAA/F,CAAsG,GAAtG,EAA2G,CAAC,CAA5G,EAA+GA,MAA/G,CAAsH,CAAC,CAAvH,EAA0H,CAAC,CAA3H,EAA8HA,MAA9H,CAAqI,CAAC,GAAtI,EAA2I,CAA3I,EAA8IA,MAA9I,CAAqJ,CAAC,CAAtJ,EAAyJ,CAAzJ,EAA4JA,MAA5J,CAAmK,GAAnK,EAAwK,CAAxK,EAA2KA,MAA3K,CAAkL,CAAlL,EAAqL,CAArL,EAAwLA,MAAxL,CAA+L,GAA/L,EAAoM,CAAC,CAArM,CAAlB;AAAA,GADF,CAlBI,CAViB;AAgCvBpf,YAAU,kBAAC1E,KAAD,EAAQmjB,IAAR;AAAA,WAAiB,IAAI5mB,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0D,CAA1D,EAA6DH,UAA7D,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EF,IAA9E,CAAjB;AAAA,GAhCa;AAiCvB;AACA;AACA7P,gBAAc,sBAACtT,KAAD,EAAQmjB,IAAR;AAAA,WAAiB,IAAI5mB,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoCvjB,KAApC,EAA2CwjB,cAA3C,CAA0D,CAA1D,EAA6DH,UAA7D,CAAwE,CAAxE,EAA2E,CAA3E,EAA8EF,IAA9E,CAAjB;AAAA,GAnCS;AAoCvB9jB,cAAY,oBAACW,KAAD,EAAQmjB,IAAR;AAAA,WAAiB,IAAI5mB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCqjB,UAAzC,CAAoD,CAApD,EAAuD,CAAvD,EAA0DF,IAA1D,CAAjB;AAAA,GApCW;AAqCvBY,gBAAc,sBAAC/jB,KAAD;AAAA,WAAW,IAAIzD,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyCqjB,UAAzC,CAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,CAAX;AAAA,GArCS;;AAuCvBW,aAAW;AAAA,WAAS,IAAIznB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAhD,EAAmD,CAAnD,EAAsDC,MAAtD,CAA6D,CAA7D,EAAgE,CAAhE,EAAmEA,MAAnE,CAA0E,CAAC,CAA3E,EAA8E,CAA9E,EAAiFA,MAAjF,CAAwF,CAAC,CAAzF,EAA4F,CAA5F,EAA+FA,MAA/F,CAAsG,CAAC,CAAvG,EAA0G,CAA1G,EAA6GA,MAA7G,CAAoH,CAAC,CAArH,EAAwH,CAAC,CAAzH,EAA4HA,MAA5H,CAAmI,CAAC,CAApI,EAAuI,CAAC,CAAxI,EAA2IA,MAA3I,CAAkJ,CAAC,CAAnJ,EAAsJ,CAAC,CAAvJ,EAA0JA,MAA1J,CAAiK,CAAjK,EAAoK,CAAC,CAArK,EAAwKA,MAAxK,CAA+K,CAA/K,EAAkL,CAAC,CAAnL,EAAsLA,MAAtL,CAA6L,CAA7L,EAAgM,CAAC,CAAjM,EAAoMA,MAApM,CAA2M,CAA3M,EAA8M,CAA9M,EAAiNA,MAAjN,CAAwN,CAAxN,EAA2N,CAA3N,CAAT;AAAA,GAvCY;AAwCvBG,YAAU;AAAA,WAAS,IAAI1nB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAhD,EAAmD,CAAC,CAApD,EAAuDC,MAAvD,CAA8D,CAA9D,EAAiE,CAAjE,EAAoEA,MAApE,CAA2E,CAAC,CAA5E,EAA+E,CAA/E,EAAkFA,MAAlF,CAAyF,CAAC,CAA1F,EAA6F,CAAC,CAA9F,EAAiGA,MAAjG,CAAwG,CAAxG,EAA2G,CAAC,CAA5G,CAAT;AAAA,GAxCa,EAwC2G;AAClII,cAAY;AAAA,WAAS,IAAI3nB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAC,EAAjD,EAAqD,CAArD,EAAwDM,KAAxD,CAA8D,CAAC,EAA/D,EAAmE,CAAC,EAApE,EAAwE,CAAxE,EAA2E,CAAC,EAA5E,EAAgF,EAAhF,EAAoFL,MAApF,CAA2F,CAA3F,EAA8F,EAA9F,EAAkGK,KAAlG,CAAwG,CAAC,CAAzG,EAA4G,CAA5G,EAA+G,CAAC,EAAhH,EAAoH,CAApH,EAAuH,EAAvH,CAAT;AAAA,GAzCW;AA0CvBC,WAAS;AAAA,WAAS,IAAI7nB,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAhD,EAAmD,CAAnD,EAAsDC,MAAtD,CAA6D,CAAC,CAA9D,EAAiE,CAAC,CAAlE,EAAqEA,MAArE,CAA4E,CAAC,CAA7E,EAAgF,CAAhF,EAAmFA,MAAnF,CAA0F,CAA1F,EAA6F,CAA7F,CAAT;AAAA,GA1Cc;;AA6CvBO,QAAM;AAAA,WAAK,IAAI9nB,SAAS6mB,QAAb,GAAwBG,WAAxB,CAAoC,SAApC,EAA+CC,cAA/C,CAA8D,EAA9D,EAAkEH,UAAlE,CAA6E,CAA7E,EAAgF,CAAhF,EAAmF/jB,CAAnF,CAAL;AAAA,GA7CiB;AA8CvB9F,QAAM;AAAA,WAAK,IAAI+C,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkC,SAAlC,EAA6C2kB,UAA7C,CAAwD,CAAxD,EAA2D,CAA3D,EAA8D/jB,CAA9D,CAAL;AAAA,GA9CiB;AA+CvB0D,eAAa;AAAA,WAAM,IAAIzG,SAASmG,MAAb,CAAoB,SAApB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,EAArC,CAAN;AAAA,GA/CU;;AAiDvBR,eAAa,qBAAClC,KAAD,EAAQyX,OAAR;AAAA,QAAiBvgB,MAAjB,uEAA0B,CAA1B;AAAA,WAAgC,IAAIqF,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAhD,EAAmD,CAAnD,EAAsDS,GAAtD,CAA0D,CAA1D,EAA6D,CAA7D,EAAgEptB,MAAhE,EAAyE,CAACkF,KAAKga,EAAN,GAAW,CAApF,EAAyF,IAAIha,KAAKga,EAAT,GAAcqB,OAAf,GAA2Brb,KAAKga,EAAL,GAAU,CAA7H,CAAhC;AAAA,GAjDU;AAkDvBhU,qBAAmB,2BAACpC,KAAD;AAAA,QAAQ9I,MAAR,uEAAiB,EAAjB;AAAA,WAAwB,IAAIqF,SAAS6mB,QAAb,GAAwB1kB,SAAxB,CAAkCsB,KAAlC,EAAyC6jB,MAAzC,CAAgD,CAAhD,EAAmD,CAAnD,EAAsDS,GAAtD,CAA0D,CAA1D,EAA6D,CAA7D,EAAgEptB,MAAhE,EAAwE,CAAxE,EAA2E,IAAIkF,KAAKga,EAApF,CAAxB;AAAA;AAlDI,CAAzB;;AAqDA/iB,cAAckxB,mBAAd,GAAoC;AAClC,iBAAe,GADmB;AAElC,6BAA2B;AAFO,CAApC;;AAKAlxB,cAAc4kB,mBAAd,GAAoC;AAClCC,UAAQ;AACNsM,oBAAgB;AACdC,UAAI,YAACzkB,KAAD;AAAA,wBAAkBA,KAAlB;AAAA;AADU,KADV;AAIN0kB,mBAAe;AACbD,UAAI;AAAA;AAAA;AADS,KAJT;AAONE,oBAAgB;AACdF,UAAI,YAACzkB,KAAD;AAAA,wBAAkBA,KAAlB;AAAA;AADU,KAPV;AAUN4kB,mBAAe;AACbH,UAAI;AAAA;AAAA;AADS,KAVT;AAaNI,cAAU;AACRJ,UAAI,YAACltB,IAAD;AAAA,4BAAqBA,IAArB;AAAA;AADI,KAbJ;AAgBNutB,eAAW;AACTL,UAAI,YAACltB,IAAD;AAAA,eAAaA,IAAb;AAAA;AADK,KAhBL;AAmBNwtB,mBAAe;AACbN,UAAI;AAAA;AAAA;AADS,KAnBT;AAsBNO,mBAAe;AACbP,UAAI;AAAA;AAAA;AADS,KAtBT;AAyBNQ,2BAAuB;AACrBR,UAAI,YAACltB,IAAD;AAAA,6BAAsBA,IAAtB;AAAA;AADiB;AAzBjB,GAD0B;AA8BlCtC,UAAQ;AACN,eAAW;AACTwvB;AADS,KADL;AAIN,eAAW;AACTA;AADS,KAJL;AAON,eAAW;AACTA;AADS,KAPL;AAUN,eAAW;AACTA;AADS,KAVL;AAaN,eAAW;AACTA;AADS,KAbL;AAgBN,eAAW;AACTA;AADS,KAhBL;AAmBN,eAAW;AACTA;AADS,KAnBL;AAsBN,eAAW;AACTA;AADS,KAtBL;AAyBN,eAAW;AACTA;AADS,KAzBL;AA4BN,eAAW;AACTA;AADS,KA5BL;;AAiCN,eAAW;AACTA;AADS,KAjCL,EAmCH;AACH,eAAW;AACTA;AADS,KApCL,EAsCH;AACH,eAAW;AACTA;AADS,KAvCL,EAyCH;AACH,eAAW;AACTA;AADS,KA1CL,CA4CH;AA5CG;;AAgDV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApHoC,CAApC,CAsHApxB,cAAc4B,MAAd,GAAuB,CACrB,SADqB,EACV;AACX,SAFqB,EAEV;AACX,SAHqB,EAGV;AACX,SAJqB,EAIV;AACX,SALqB,EAKV;AACX,SANqB,EAMV;AACX,SAPqB,EAOV;AACX,SARqB,EAQV;AACX,SATqB,EASV;AACX,SAVqB,EAUV;;AAEX;AACA,SAbqB,EAaV;AACX,SAdqB,EAcV;AACX,SAfqB,EAeV;AACX,SAhBqB,CAAvB;;AAmBA5B,cAAcc,IAAd,GAAqB,CACnB;AACEoD,QAAM,mBADR;AAEE8B,SAAO,IAFT,EAEeE,QAAQ,IAFvB;AAGE;AACAvC,SAAO,CACL,CAAC,EAACkD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAD,EAAiB,EAACD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAjB,EAAiC,EAACD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAjC,EAAiD,EAACD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAjD,CADK,EAEL,CAAC,EAACD,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAD,EAAmB,EAACD,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAnB,CAFK,EAGL,CAAC,EAACD,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAD,EAAmB,EAACD,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAnB,CAHK;AAJT,CADmB,CAArB;;AAaA9G,cAAcc,IAAd,GAAqB,CACnB,EAAE;AACAoD,QAAM,UADR;AAEE8B,SAAO,OAAO,CAFhB,EAEmBE,QAAQ,OAAO,CAFlC;AAGErD,SAAO,CAAC,CAAD,CAHT;;AAKEc,SAAO;AACL;;AAEA,GAAC,EAACkD,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CAHK,EAIL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CAJK,EAKL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CALK,EAML,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CANK,EAOL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CAPK,EAQL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CARK,EASL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CATK,EAUL,CAAC,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,GAAD,GAAM,EAAvB,EAA2BmJ,UAAUlH,KAAKga,EAA1C,EAAD,EAAgD,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,OAAO,GAAR,GAAa,EAArC,EAAyCmJ,UAAU,CAAnD,EAAhD,EAAuG,EAACpJ,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,GAAR,GAAa,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAvG,EAAgK,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,GAAD,GAAM,EAA9B,EAAkCmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAArD,EAAhK,EAAyN,EAAClc,GAAI,IAAD,GAAO,EAAX,EAAeC,GAAI,GAAD,GAAM,EAAxB,EAA4BmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAC,CAA/C,EAAzN,EAA4Q,EAAClc,GAAI,OAAO,IAAR,GAAc,EAAlB,EAAsBC,GAAI,OAAO,GAAR,GAAa,EAAtC,EAA0CmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAA5D,EAA5Q,EAA4U,EAAClc,GAAI,GAAD,GAAM,EAAV,EAAcC,GAAI,OAAO,IAAR,GAAc,EAA/B,EAAmCmJ,UAAUlH,KAAKga,EAAlD,EAA5U,EAAmY,EAAClc,GAAI,OAAO,GAAR,GAAa,EAAjB,EAAqBC,GAAI,IAAD,GAAO,EAA/B,EAAmCmJ,UAAU,CAA7C,EAAnY,CAVK,CALT;AAiBE1I,gBAAc;AACZO,YAAQ,CADI;AAEZN,YAAQ,CACN,CAAC,EAAD,EAAK;AACH,KAAE,IAAF,EAAQ,GAAR,CADF,EAEE,CAAE,GAAF,EAAO,GAAP,CAFF,EAGE,CAAE,IAAF,EAAQ,EAAR,CAHF,EAIE,CAAE,IAAF,EAAQ,GAAR,CAJF,EAKE,CAAE,IAAF,EAAQ,GAAR,CALF,EAME,CAAE,GAAF,EAAO,IAAP,CANF,EAOE,CAAE,GAAF,EAAO,IAAP,CAPF,EAQE,CAAE,IAAF,EAAQ,GAAR,CARF,EASE,CAAE,GAAF,EAAO,IAAP,CATF,EAUE,CAAE,GAAF,EAAO,IAAP,CAVF,EAWE,CAAE,GAAF,EAAO,IAAP,CAXF,EAYE,CAAE,GAAF,EAAO,IAAP,CAZF,EAaE,CAAE,GAAF,EAAO,IAAP,CAbF,EAcE,CAAE,EAAF,EAAM,IAAN,CAdF,EAeE,CAAE,GAAF,EAAO,IAAP,CAfF,CADM,EAkBN,CAAC,EAAD,EACE,CAAE,IAAF,EAAQ,GAAR,CADF,EAEE,CAAE,IAAF,EAAQ,GAAR,CAFF,EAGE,CAAE,IAAF,EAAQ,IAAR,CAHF,EAIE,CAAE,GAAF,EAAO,IAAP,CAJF,EAKE,CAAE,GAAF,EAAO,IAAP,CALF,EAME,CAAE,GAAF,EAAO,GAAP,CANF,CAlBM,EA0BN,CAAC,EAAD,EACE,CAAE,GAAF,EAAO,GAAP,CADF,EAEE,CAAE,GAAF,EAAO,GAAP,CAFF,EAGE,CAAE,GAAF,EAAO,GAAP,CAHF,EAIE,CAAE,IAAF,EAAQ,GAAR,CAJF,EAKE,CAAE,GAAF,EAAO,GAAP,CALF,EAME,CAAE,GAAF,EAAO,IAAP,CANF,CA1BM,EAkCN,CAAC,EAAD,EACE,CAAE,GAAF,EAAO,GAAP,CADF,EAEE,CAAE,GAAF,EAAO,GAAP,CAFF,EAGE,CAAE,IAAF,EAAQ,GAAR,CAHF,CAlCM,EAuCN,CAAC,GAAD,EACE,CAAC,IAAD,EAAO,GAAP,CADF,CAvCM;AAFI;AAjBhB,CADmB,EAiEnB,EAAE;AACAtD,QAAM,UADR;AAEE8B,SAAO,OAAO,CAFhB,EAEmBE,QAAQ,OAAO,CAFlC;AAGErD,SAAO,CAAC,CAAD,CAHT;;AAKE;AACA;AACA;AACAc,SAAO;AACL;;AAEA,GAAC,EAACkD,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAnC,EAAD,EAAwC,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,OAAO,GAA1B,EAA+BmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAlD,EAAxC,EAA8F,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,GAAnB,EAAwBmJ,UAAUlH,KAAKga,EAAvC,EAA9F,EAA0I,EAAClc,GAAG,GAAJ,EAASC,GAAG,OAAO,GAAnB,EAAwBmJ,UAAU,CAAlC,EAA1I,CAHK,EAIL,CAAC,EAACpJ,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAnC,EAAD,EAAwC,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,OAAO,GAA1B,EAA+BmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAlD,EAAxC,EAA8F,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,GAAnB,EAAwBmJ,UAAUlH,KAAKga,EAAvC,EAA9F,EAA0I,EAAClc,GAAG,GAAJ,EAASC,GAAG,OAAO,GAAnB,EAAwBmJ,UAAU,CAAlC,EAA1I,CAJK,EAKL,CAAC,EAACpJ,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAnC,EAAD,EAAwC,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,OAAO,GAA1B,EAA+BmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAlD,EAAxC,EAA8F,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,GAAnB,EAAwBmJ,UAAUlH,KAAKga,EAAvC,EAA9F,EAA0I,EAAClc,GAAG,GAAJ,EAASC,GAAG,OAAO,GAAnB,EAAwBmJ,UAAU,CAAlC,EAA1I,CALK,EAML,CAAC,EAACpJ,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAAnC,EAAD,EAAwC,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,OAAO,GAA1B,EAA+BmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAlD,EAAxC,EAA8F,EAAClc,GAAG,OAAO,GAAX,EAAgBC,GAAG,GAAnB,EAAwBmJ,UAAUlH,KAAKga,EAAvC,EAA9F,EAA0I,EAAClc,GAAG,GAAJ,EAASC,GAAG,OAAO,GAAnB,EAAwBmJ,UAAU,CAAlC,EAA1I,CANK,CART;AAgBE1I,gBAAc;AACZO,YAAQ,CADI;AAEZN,YAAQ,CACN,CAAC,EAAD,EAAK;AACH,KAAC,GAAD,EAAM,GAAN,CADF,EAEE,CAAC,GAAD,EAAM,EAAN,CAFF,EAGE,CAAC,GAAD,EAAM,GAAN,CAHF,EAIE,CAAC,IAAD,EAAO,IAAP,CAJF,EAKE,CAAC,IAAD,EAAO,IAAP,CALF,EAME,CAAC,IAAD,EAAO,IAAP,CANF,EAOE,CAAC,GAAD,EAAM,IAAN,CAPF,EAQE,CAAC,GAAD,EAAM,IAAN,CARF,EASE,CAAC,IAAD,EAAO,GAAP,CATF,EAUE,CAAC,IAAD,EAAO,GAAP,CAVF,EAWE,CAAC,GAAD,EAAM,IAAN,CAXF,EAYE,CAAC,GAAD,EAAM,GAAN,CAZF,EAaE,CAAC,GAAD,EAAM,GAAN,CAbF,EAcE,CAAC,GAAD,EAAM,GAAN,CAdF,EAeE,CAAC,GAAD,EAAM,GAAN,CAfF,CADM,EAkBN,CAAC,EAAD,EACE,CAAC,IAAD,EAAO,GAAP,CADF,EAEE,CAAC,IAAD,EAAO,GAAP,CAFF,EAGE,CAAC,GAAD,EAAM,IAAN,CAHF,EAIE,CAAC,IAAD,EAAO,IAAP,CAJF,EAKE,CAAC,GAAD,EAAM,GAAN,CALF,EAME,CAAC,GAAD,EAAM,GAAN,CANF,CAlBM,EA0BN,CAAC,EAAD,EACE,CAAC,IAAD,EAAO,GAAP,CADF,EAEE,CAAC,GAAD,EAAM,GAAN,CAFF,EAGE,CAAC,GAAD,EAAM,GAAN,CAHF,EAIE,CAAC,IAAD,EAAO,GAAP,CAJF,EAKE,CAAC,IAAD,EAAO,IAAP,CALF,EAME,CAAC,IAAD,EAAO,IAAP,CANF,CA1BM,EAkCN,CAAC,EAAD,EACE,CAAC,GAAD,EAAM,GAAN,CADF,EAEE,CAAC,GAAD,EAAM,GAAN,CAFF,CAlCM,EAsCN,CAAC,GAAD,EACE,CAAC,GAAD,EAAM,GAAN,CADF,CAtCM;AAFI;AAhBhB,CAjEmB;AA+HnB;AAuCA;AACEtD,QAAM,QADR;AAEE8B,SAAO,IAFT,EAEeE,QAAQ,IAFvB;AAGErD,SAAO,CAAC,CAAD,CAHT;AAIEnB,QAAM,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,CAJR;;AAME;AACA;AACA;AACAiC,SAAO;AACL;;AAEA,GACE,EAACkD,GAAG,IAAJ,EAAUC,GAAG,GAAb,EAAkBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAApC,EADF,EAEE,EAAClc,GAAG,OAAO,IAAX,EAAiBC,GAAG,OAAO,GAA3B,EAAgCmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAnD,EAFF,CAHK,EAOL,CACE,EAAClc,GAAG,IAAJ,EAAUC,GAAG,GAAb,EAAkBmJ,UAAUlH,KAAKga,EAAL,GAAQ,CAApC,EADF,EAEE,EAAClc,GAAG,OAAO,IAAX,EAAiBC,GAAG,OAAO,GAA3B,EAAgCmJ,UAAU,CAAClH,KAAKga,EAAN,GAAS,CAAnD,EAFF,CAPK,CATT;AAqBExb,gBAAc;AACZO,YAAQ,CADI;AAEZN,YAAQ,CACN,CAAC,EAAD,EAAK;AACH,KAAE,GAAF,EAAO,GAAP,CADF,EAEE,CAAE,GAAF,EAAO,IAAP,CAFF,EAGE,CAAE,GAAF,EAAO,IAAP,CAHF,EAIE,CAAE,IAAF,EAAQ,GAAR,CAJF,EAKE,CAAE,IAAF,EAAQ,IAAR,CALF,EAME,CAAE,GAAF,EAAO,IAAP,CANF,EAOE,CAAE,IAAF,EAAQ,IAAR,CAPF,EAQE,CAAE,IAAF,EAAQ,GAAR,CARF,EASE,CAAE,IAAF,EAAQ,GAAR,CATF,EAUE,CAAE,IAAF,EAAQ,GAAR,CAVF,EAWE,CAAE,IAAF,EAAQ,GAAR,CAXF,EAYE,CAAE,IAAF,EAAQ,GAAR,CAZF,EAaE,CAAE,IAAF,EAAQ,GAAR,CAbF,EAcE,CAAE,IAAF,EAAQ,GAAR,CAdF,EAeE,CAAE,GAAF,EAAO,IAAP,CAfF,EAgBE,CAAE,IAAF,EAAQ,IAAR,CAhBF,EAiBE,CAAE,IAAF,EAAQ,IAAR,CAjBF,EAkBE,CAAE,IAAF,EAAQ,IAAR,CAlBF,EAmBE,CAAE,IAAF,EAAQ,IAAR,CAnBF,EAoBE,CAAE,IAAF,EAAQ,GAAR,CApBF,CADM,EAuBN,CAAC,EAAD,EACE,CAAC,GAAD,EAAK,IAAL,CADF,EACa,CAAC,GAAD,EAAK,IAAL,CADb,EACwB,CAAC,IAAD,EAAM,IAAN,CADxB,EACoC,CAAC,IAAD,EAAM,IAAN,CADpC,EACgD,CAAC,IAAD,EAAM,GAAN,CADhD,EAC2D,CAAC,IAAD,EAAM,GAAN,CAD3D,CAvBM,EA0BN,CAAC,EAAD,EACE,CAAC,IAAD,EAAM,IAAN,CADF,EACc,CAAC,IAAD,EAAM,GAAN,CADd,EACyB,CAAC,GAAD,EAAK,IAAL,CADzB,EACoC,CAAC,IAAD,EAAM,EAAN,CADpC,EAC8C,CAAC,IAAD,EAAM,IAAN,CAD9C,EAC0D,CAAC,GAAD,EAAK,GAAL,CAD1D,EACoE,CAAC,IAAD,EAAM,IAAN,CADpE,EACgF,CAAC,GAAD,EAAK,IAAL,CADhF,EAC2F,CAAC,GAAD,EAAK,IAAL,CAD3F,EACsG,CAAC,IAAD,EAAM,GAAN,CADtG,EACiH,CAAC,GAAD,EAAK,GAAL,CADjH,EAC2H,CAAC,GAAD,EAAK,GAAL,CAD3H,EACqI,CAAC,IAAD,EAAM,GAAN,CADrI,EACgJ,CAAC,IAAD,EAAM,GAAN,CADhJ,EAC2J,CAAC,IAAD,EAAM,GAAN,CAD3J,EACsK,CAAC,IAAD,EAAM,EAAN,CADtK,EACgL,CAAC,IAAD,EAAM,GAAN,CADhL,EAC2L,CAAC,IAAD,EAAM,GAAN,CAD3L,EACsM,CAAC,IAAD,EAAM,GAAN,CADtM,CA1BM,EA6BN,CAAC,EAAD,EACE,CAAC,GAAD,EAAK,GAAL,CADF,EACY,CAAC,GAAD,EAAK,GAAL,CADZ,EACsB,CAAC,IAAD,EAAM,GAAN,CADtB,EACiC,CAAC,GAAD,EAAK,GAAL,CADjC,EAC2C,CAAC,GAAD,EAAK,GAAL,CAD3C,EACqD,CAAC,IAAD,EAAM,GAAN,CADrD,EACgE,CAAC,IAAD,EAAM,GAAN,CADhE,EAC2E,CAAC,IAAD,EAAM,IAAN,CAD3E,EACuF,CAAC,IAAD,EAAM,GAAN,CADvF,CA7BM,EAgCN,CAAC,GAAD,EACE,CAAC,IAAD,EAAM,GAAN,CADF,EACa,CAAC,GAAD,EAAK,IAAL,CADb,EACwB,CAAC,GAAD,EAAK,GAAL,CADxB,EACkC,CAAC,IAAD,EAAM,GAAN,CADlC,EAC6C,CAAC,IAAD,EAAM,GAAN,CAD7C,EACwD,CAAC,GAAD,EAAK,IAAL,CADxD,EACmE,CAAC,IAAD,EAAM,GAAN,CADnE,EAC8E,CAAC,IAAD,EAAM,GAAN,CAD9E,CAhCM;AAFI;AArBhB,CAtKmB,EAmOnB;AACEtD,QAAM,WADR;AAEE8B,SAAO,IAFT,EAEeE,QAAQ,IAFvB;AAGErD,SAAO,CAAC,CAAD,CAHT;AAIEnB,QAAM,CAAC,GAAD,EAAM,SAAN,EAAiB,SAAjB,CAJR;;AAME;AACA;AACA;AACAiC,SAAO;AACL;;AAEA,GACE,EAACkD,GAAG,IAAJ,EAAUC,GAAG,GAAb,EAAkBmJ,UAAU,CAA5B,EADF,EAEE,EAACpJ,GAAG,OAAO,IAAX,EAAiBC,GAAG,OAAO,GAA3B,EAAgCmJ,UAAUlH,KAAKga,EAA/C,EAFF,CAHK,EAOL,CACE,EAAClc,GAAG,IAAJ,EAAUC,GAAG,GAAb,EAAkBmJ,UAAU,CAA5B,EADF,EAEE,EAACpJ,GAAG,OAAO,IAAX,EAAiBC,GAAG,OAAO,GAA3B,EAAgCmJ,UAAUlH,KAAKga,EAA/C,EAFF,CAPK,CATT;AAqBExb,gBAAc;AACZO,YAAQ,CADI;AAEZN,YAAQ,CACN,CAAC,EAAD,EAAK;AACH,KAAC,GAAD,EAAK,IAAL,CADF,EACa,CAAC,GAAD,EAAK,IAAL,CADb,EACwB,CAAC,IAAD,EAAM,GAAN,CADxB,EACmC,CAAC,IAAD,EAAM,GAAN,CADnC,EAC8C,CAAC,GAAD,EAAK,IAAL,CAD9C,EACyD,CAAC,IAAD,EAAM,GAAN,CADzD,EACoE,CAAC,IAAD,EAAM,GAAN,CADpE,EAC+E,CAAC,IAAD,EAAM,GAAN,CAD/E,EAC0F,CAAC,GAAD,EAAK,GAAL,CAD1F,EACoG,CAAC,IAAD,EAAM,GAAN,CADpG,EAC+G,CAAC,IAAD,EAAM,GAAN,CAD/G,EAC0H,CAAC,IAAD,EAAM,GAAN,CAD1H,EACqI,CAAC,IAAD,EAAM,GAAN,CADrI,CADM,EAIN,CAAC,EAAD,EACE,CAAC,GAAD,EAAK,EAAL,CADF,EACW,CAAC,GAAD,EAAK,IAAL,CADX,EACsB,CAAC,GAAD,EAAK,IAAL,CADtB,EACiC,CAAC,GAAD,EAAK,GAAL,CADjC,EAC2C,CAAC,IAAD,EAAM,GAAN,CAD3C,EACsD,CAAC,GAAD,EAAK,GAAL,CADtD,EACgE,CAAC,GAAD,EAAK,IAAL,CADhE,CAJM,EAON,CAAC,EAAD,EACE,CAAC,GAAD,EAAK,GAAL,CADF,EACY,CAAC,GAAD,EAAK,GAAL,CADZ,EACsB,CAAC,GAAD,EAAK,GAAL,CADtB,EACgC,CAAC,IAAD,EAAM,EAAN,CADhC,EAC0C,CAAC,GAAD,EAAK,GAAL,CAD1C,EACoD,CAAC,GAAD,EAAK,GAAL,CADpD,EAC8D,CAAC,GAAD,EAAK,IAAL,CAD9D,EACyE,CAAC,GAAD,EAAK,IAAL,CADzE,EACoF,CAAC,GAAD,EAAK,IAAL,CADpF,EAC+F,CAAC,IAAD,EAAM,GAAN,CAD/F,EAC0G,CAAC,IAAD,EAAM,GAAN,CAD1G,EACqH,CAAC,GAAD,EAAK,GAAL,CADrH,EAC+H,CAAC,IAAD,EAAM,GAAN,CAD/H,CAPM,EAUN,CAAC,EAAD,EACE,CAAC,GAAD,EAAK,GAAL,CADF,EACY,CAAC,GAAD,EAAK,GAAL,CADZ,EACsB,CAAC,GAAD,EAAK,GAAL,CADtB,CAVM;AAFI;AArBhB,CAnOmB,CAArB;;AA4QAxH,cAAc6xB,eAAd,GAAgC,CAC9B,CAAC,EAAChrB,GAAG,CAAJ,EAAOC,GAAG,CAAV,EAAD,CAD8B,EACd;AAChB,CAAC,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAX,EAAD,EAAgB,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAZ,EAAhB,CAF8B,EAEG;AACjC,CAAC,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAX,EAAD,EAAgB,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,EAAZ,EAAhB,EAAiC,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAC,EAAb,EAAjC,CAH8B,EAGsB;AACpD,CAAC,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAX,EAAD,EAAgB,EAACD,GAAG,CAAJ,EAAOC,GAAG,EAAV,EAAhB,EAA+B,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAZ,EAA/B,EAA+C,EAACD,GAAG,CAAJ,EAAOC,GAAG,CAAC,EAAX,EAA/C,CAJ8B,EAIkC;AAChE,CAAC,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAX,EAAD,EAAgB,EAACD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAhB,EAAgC,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,EAAZ,EAAhC,EAAiD,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAC,EAAb,EAAjD,EAAmE,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAC,EAAZ,EAAnE,CAL8B,EAKuD;AACrF,CAAC,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAX,EAAD,EAAgB,EAACD,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAhB,EAAgC,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,EAAZ,EAAhC,EAAiD,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAZ,EAAjD,EAAiE,EAACD,GAAG,CAAC,EAAL,EAASC,GAAG,CAAC,EAAb,EAAjE,EAAmF,EAACD,GAAG,EAAJ,EAAQC,GAAG,CAAC,EAAZ,EAAnF,CAN8B,CAMsE;AANtE,CAAhC;;AASA9G,cAAcyP,KAAd,GAAsB;AACpBqiB,OAAK,EAAE;AACLC,iBAAa,GADV;AAEHriB,iBAAa,EAFV;AAGHsiB,gBAAYC,OAAOC,IAAP,CAAY,CAAZ;AAHT;AADe,CAAtB","file":"deepspace.js","sourcesContent":["// deep space js by david ruiz.\r\r\rclass DeepSpaceGame {\r\r  // at initialization we can assume the environment\r  // knows certain game parameters:\r  // - map\r  // - game mode\r  // - players: amount, names, ship types, indexes,\r  constructor(data, network) {\r    this.interpret(data, network);\r    this.setup();\r    // this.loop();\r  }\r\r  static create(data, network) {\r    if (DeepSpaceGame.runningInstance) DeepSpaceGame.runningInstance.deinit();\r    return DeepSpaceGame.runningInstance = new DeepSpaceGame(data, network);\r  }\r\r  start() {\r    this.loop();\r    this.timer.start(() => {\r      this.timerExpire()\r    });\r  }\r\r  interpret(data, network) {\r    // anything pertaining to game\r    // object itself gets set\r    this.spectate = ENV.spectate;\r    this.isHost = data.host;\r    this.mapInfo = DeepSpaceGame.maps[data.options.map];\r    this.gameMode = data.options.mode;\r    this.game = {}\r    this.language = 'en';\r    this.timer = new Timer(data.duration - TIME.sec(1.5));\r\r    this.network = network;\r    this.network.game = this;\r\r\r    // SoundHelper.start(); // new\r    // this.soundHelper = SoundHelper.start(); // olc\r\r    try {\r      // if (TINT) TINT.load(...data.colors[1])\r      if (TINT) {\r        if(this.mapInfo.tint) { TINT.load(...this.mapInfo.tint) }\r        else { TINT.load(...data.colors[1]) }\r      }\r    } catch (e) {\r      log('tint load failed')\r    }\r\r    // everything else:\r    this.setupData = data;\r  }\r\r  setup() {\r    this.setupPhysics();\r    this.setupModel();\r    this.setupView();\r    this.setupListeners();\r    this.setupLoop();\r    this.setupReferences();\r\r    // if (this.spectate) this.actualize();\r  }\r\r  setupModel() {\r    this.setupTeams();\r    this.setupPlayers();\r    this.setupShips();\r    this.setupBubbles();\r    this.setupObjectPools();\r\r    this.setupGame();\r    this.setupMap();\r  }\r\r  setupTeams() {\r    this.teams = [];\r    let teamCount = this.setupData.teams.length;\r    teamCount.times((i) => {\r      this.teams.push(new Team(this, i))\r    });\r\r    this.setupSpawnCamps();\r  }\r\r  setupSpawnCamps() {\r    this.teams.forEach(team => {\r      team.spawn_camp = {\r        position: V2D.new(this.mapInfo.spawn[team.game.teams.length - 1][team.number]),\r        radius: 64,\r        team: team.number\r      }\r    });\r  }\r\r  setupPlayers() {\r    this.players = new Map();\r    this.teams.forEach((team, i) => {\r      this.setupData.teams[i].forEach((playerIndex)=>{\r        var [id, name, , , , type] = this.setupData.players[playerIndex];\r        team.createPlayer(id, name, type);\r      });\r    });\r  }\r\r  setupShips() {\r    this.ships = [];\r    this.players.forEach((player) => {\r      var ship;\r      if (localIDMatches(player.id) && !this.spectate) {\r        ship = new Ship(player);\r        ship.isMain = true;\r        this.ships.main = ship;\r      } else {\r        ship = new BasicShip(player);\r      }\r      this.ships.push(ship);\r      player.ship = ship;\r    });\r  }\r\r  setupBubbles() {\r    this.ships.forEach(ship => {\r      const our_ship = this.ships.main === ship;\r      const data = {\r        id: ship.owner.id,\r        team: ship.owner.team.number,\r        target: ship,\r      };\r      const bubbleClass = our_ship ? Bubble : SimpleBubble;\r      ship.bubble = new bubbleClass(data);\r      if(our_ship)\r        ship.bubbleCore = new BubbleCore(ship.bubble);\r    });\r  }\r\r  setupObjectPools() {\r    var model = {};\r    model.bullets = new Map();\r    model.blocks = new Map();\r    model.subs = new Map();\r\r    this.model = model;\r  }\r\r  setupGame() {\r    this.game = {};\r    this.game.disabled = false; // interaction disabled\r    this.game.ended = false; // game over happened\r    this.game.overtime = false; // game overtime happened\r\r    this.game.scores = new Array(this.teams.length);\r\r    // this.timer = DeepSpaceGame.modes[this.gameMode];\r    switch (this.gameMode) {\r      case 0: // ctf\r\r        // flag whatevers\r        var centerX = this.mapInfo.width / 2;\r        var centerY = this.mapInfo.height / 2;\r        let flag = new Flag(new V2D(centerX, centerY));\r        flag.collision_groups = [this.physics.collision_groups.FLAG];\r        this.setCollisionDivisions(flag);\r        this.game.flag = flag;\r\r        // actual game stats\r        this.game.scores.fill(0);\r        this.game.max = Physics.distance(this.teams[0].spawn_camp.position, {x: centerX, y: centerY});\r        this.game.lead = undefined; // team in the lead\r\r        // this.game.scores.fill(100);\r        // this.game.max = Physics.distance(this.teams[0].spawn_camp.position, {x: centerX, y: centerY});\r        // this.game.lead = undefined; // team in the lead\r\r        break;\r\r      case 1:\r\r        this.game.scores.fill(0);\r\r        break;\r    }\r  }\r\r  setupMap() {\r    let map = this.model.map = {},\r      info = this.mapInfo;\r\r    let cX = info.width / 2,\r      cY = info.height / 2;\r\r\r    // IMPERMEABLES\r    let initial_impermeables = [], radii = new Set();\r    for (let radius_size_group of info.impermeables.bodies) {\r      let list = radius_size_group.slice(),\r        radius = list.shift();\r      for (let [x, y] of list) {\r        initial_impermeables.push({\r          radius: radius,\r          position: {x, y}\r        })\r      }\r      radii.add(radius);\r    }\r\r    map.impermeables = [];\r    map.impermeables.radii = radii;\r    // in the future use the 'copies' variable on impermeables\r    // and make it odd symmetry\r    map.impermeables.push(...initial_impermeables)\r    if (info.impermeables.copies >= 2) {\r\r      map.impermeables.push(...(initial_impermeables.map(obj => {\r        return {\r          radius: obj.radius,\r          position: {x: info.width - obj.position.x, y: info.width - obj.position.y}\r        }\r      })));\r\r      if (info.impermeables.copies == 4) {\r\r        map.impermeables.push(...(initial_impermeables.map(obj => {\r          return {\r            radius: obj.radius,\r            position: {x: info.width - obj.position.y, y: obj.position.x}\r          }\r        })));\r\r        map.impermeables.push(...(initial_impermeables.map(obj => {\r          return {\r            radius: obj.radius,\r            position: {x: obj.position.y, y: info.width - obj.position.x}\r          }\r        })));\r\r      }\r\r    }\r\r    for (let imp of map.impermeables) {\r      imp.collision_groups = [this.physics.collision_groups.IMPERMEABLES]\r      this.setCollisionDivisions(imp);\r    }\r\r  }\r\r  setupView() {\r    this.setupPalette();\r    this.configureCreateJS();\r    this.configureProton();\r    this.setupCamera();\r  }\r\r  setupPalette() {\r    this.colors = this.setupData.colors;\r  }\r\r  configureCreateJS() {\r    this.setupCanvas();\r    // populate stage\r    this.createViews();\r  }\r\r  setupCanvas() { // TODO: (revise)\r    var canvas = $('#canvas')[0];\r    canvas.width = document.body.clientWidth;\r    canvas.height = document.body.clientHeight;\r    // if (canvas.width > 1024) canvas.width = 1024;\r    // if (canvas.height > 768) canvas.height = 768;\r    \r    this.scale = Math.sqrt(canvas.width * canvas.height) / Math.sqrt(1024 * 768);\r    // this.scale ;\r\r    var stage = new createjs.StageGL(canvas);\r    // stage.canvas = canvas;\r    stage.snapToPixel = true;\r    // gui.add(stage, 'snapToPixel');\r\r    this.stage = stage;\r\r    this.HDPSupport();\r  }\r\r  HDPSupport() {\r    this.HDPScale = 1; return // todo fix support for high pixel dense screens...\r    if (window.devicePixelRatio) {\r      const stage = this.stage;\r      const canvas = stage.canvas;\r\r      // grab the width and height from canvas\r      var height = canvas.getAttribute('height');\r      var width = canvas.getAttribute('width');\r      // reset the canvas width and height with window.devicePixelRatio applied\r      canvas.setAttribute('width', Math.round(width * window.devicePixelRatio));\r      canvas.setAttribute('height', Math.round( height * window.devicePixelRatio));\r      // force the canvas back to the original size using css\r      canvas.style.width = width+\"px\";\r      canvas.style.height = height+\"px\";\r      // set CreateJS to render scaled\r      stage.scaleX = stage.scaleY = window.devicePixelRatio;\r      this.HDPScale = 1/window.devicePixelRatio\r    }\r  }\r\r  createViews() {\r    this.view = {\r      grid: {width: 100, height: 100},\r    };\r    this.window = {\r      width: this.stage.canvas.width * this.HDPScale,\r      height: this.stage.canvas.height * this.HDPScale,\r    };\r\r    this.createLayers();\r    this.createBackgroundViews();\r    this.createGameModeSpecificViewsAction();\r    this.createSpawnCampViews();\r    this.createBubbleViews();\r    this.createShipViews();\r    this.createPoolViews();\r    this.createOverlayViews();\r  }\r\r  snapToGrid(position) {\r    position.x = Math.round(position.x / this.view.grid.width) * this.view.grid.width\r    position.y = Math.round(position.y / this.view.grid.height) * this.view.grid.height\r  }\r\r  createLayers() {\r    var layer = {}\r\r    layer.background = new createjs.Container();\r    layer.action = new createjs.Container();\r    layer.overlay = new createjs.Container();\r\r    layer.action.back = new createjs.Container();\r    layer.action.front = new createjs.Container();\r    layer.action.addChild(layer.action.back);\r    layer.action.addChild(layer.action.front);\r\r    layer.action.scaleX = layer.action.scaleY = this.scale;\r\r    this.stage.addChild(layer.background);\r    this.stage.addChild(layer.action);\r    this.stage.addChild(layer.overlay);\r\r    this.view.layer = layer;\r  }\r\r  createBackgroundViews() {\r    // var canvas = this.stage.canvas, background = new createjs.Shape();\r    // // background.graphics.beginFill('#37474F').drawRect(0, 0, canvas.width, canvas.height);\r    // // background.cache(0, 0, canvas.width, canvas.height);\r    // // this.view.layer.background.addChild(background);\r    // //\r    // // background = new createjs.Shape();\r    // background.graphics.beginFill('#455A64').drawRect(0, 0, canvas.width, canvas.height);\r    // background.cache(0, 0, canvas.width, canvas.height);\r    // this.view.layer.background.map_background = background;\r    // this.view.layer.background.addChild(background);\r\r\r    var canvas = this.stage.canvas, canvasBackground = new createjs.Shape(), mapBackground = new createjs.Shape();\r    canvasBackground.graphics.beginFill('#37474F').drawRect(0, 0, this.window.width, this.window.height);\r    canvasBackground.cache(0, 0, canvas.width, canvas.height);\r    this.view.layer.background.addChild(canvasBackground);\r\r    const background_width = this.window.width * 2\r    const background_height = this.window.width * 2\r    const hypotenuse = Math.sqrt(Math.sqr(this.window.width) + Math.sqr(this.window.height)) / this.scale;\r    mapBackground.graphics.beginFill('#455A64').drawRect(0, 0, hypotenuse, hypotenuse);\r    mapBackground.cache(0, 0, hypotenuse, hypotenuse);\r    mapBackground.regX = hypotenuse/2;\r    mapBackground.regY = hypotenuse/2;\r    this.view.layer.background.map_background = mapBackground;\r    this.view.layer.action.back.addChild(mapBackground);\r\r  }\r\r  createGameModeSpecificViewsAction() {\r    /*switch(this.gameMode) {\r     case \"ctf\":\r     // ring and flag\r\r     var centerX = this.mapInfo.width / 2;\r     var centerY = this.mapInfo.height / 2;\r\r     var r = DeepSpaceGame.modes[\"ctf\"].ring_radius, s = r * 1.2;\r     var ring = new createjs.Shape(\r     DeepSpaceGame.graphics.ring(r)\r     );\r     ring.cache(-s, -s, s*2, s*2);\r\r     // var r = DeepSpaceGame.modes[\"ctf\"].flag_radius, s = r * 1.2;\r     // var flag = new createjs.Shape(\r     //   DeepSpaceGame.graphics.flag(DeepSpaceGame.modes[\"ctf\"].flag_radius)\r     // );\r     // flag.shadow = DeepSpaceGame.graphics.flag_shadow();\r     // flag.cache(-s, -s, s*2, s*2);\r     //\r     ring.x = centerX; ring.y = centerY;\r     // flag.x = centerX; flag.y = centerY;\r\r\r     this.view.layer.action.back.addChild(ring);\r     // this.view.layer.action.back.addChild(flag);\r\r     // this.view.flag = flag;\r\r     // actual game things\r\r\r     break;\r     }*/\r\r    // create caches\r    var caches = new Map();\r    this.model.map.impermeables.radii.forEach(r => {\r      var view = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r));\r      var s = r * 1.2;\r      view.cache(-s, -s, s * 2, s * 2);\r\r      caches.set(r, view.cacheCanvas);\r    })\r\r    // create views\r    this.view.map = {impermeables: []}\r    this.model.map.impermeables.forEach(block => {\r      var view = new createjs.Bitmap(caches.get(block.radius)),\r        pos = block.position;\r      view.x = pos.x - block.radius * 1.2;\r      view.y = pos.y - block.radius * 1.2;\r      this.view.map.impermeables.push(view)\r      this.view.layer.action.front.addChild(view);\r    });\r\r  }\r\r  createSpawnCampViews() {\r\r    // this.view.teams = { spawn_camp: []}\r\r    // DeepSpaceGame.maps[0].spawn[this.owner.team.game.teams.length][this.owner.team.number]\r    var s = 64 + 3; // radius + border-half\r    this.teams.forEach((team, i) => {\r      var group = new createjs.Container(),\r        camp = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp(team.color)),\r        fill = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp_fill(team.color)),\r        pos = team.spawn_camp.position;\r      fill.alpha = 0.08;\r      group.x = pos.x;\r      group.y = pos.y;\r      group.addChild(fill);\r      group.addChild(camp);\r      group.cache(-s, -s, s * 2, s * 2);\r      team.spawn_camp.view = group;\r      this.view.layer.action.back.addChild(group);\r    });\r  }\r\r  createBubbleViews() {\r\r    // variables for reference in loop\r    const our_ship = this.ships.main;\r\r    const maxRadius = Bubble.stats.OUTER_RADIUS;\r    const innerCircleScale = Bubble.stats.INNER_RADIUS / Bubble.stats.OUTER_RADIUS;\r\r    const s = maxRadius * 1.2;\r\r    const bubbles = this.view.bubbles = new Map();\r\r    // loop\r    this.ships.forEach(ship => {\r\r      const teamColor = ship.owner.team.color;\r\r      const container = new createjs.Container();\r\r      let handle;\r      if(ship === our_ship) {\r        const r = BubbleCore.stats.RADIUS;\r        handle = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(teamColor, r));\r        handle.alpha = 0.7;\r        handle.cache(-r, -r, r * 2, r * 2);\r        container.addChild(handle);\r      }\r\r      const fullRange = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(teamColor, maxRadius)),\r            growingCircle = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(teamColor, maxRadius)),\r            growingCircleEdge = new createjs.Shape(DeepSpaceGame.graphics.circle_edge(teamColor, maxRadius, 8));\r\r      const c1 = new createjs.Container();\r      const c2 = new createjs.Container();\r      const c3 = new createjs.Container();\r\r      fullRange.alpha = 0.1;\r      growingCircle.alpha = 0.3;\r      growingCircleEdge.alpha = 1.0;\r\r      c1.addChild(fullRange);\r      c2.addChild(growingCircle);\r      c3.addChild(growingCircleEdge);\r\r      c1.cache(-s, -s, s * 2, s * 2);\r      c2.cache(-s, -s, s * 2, s * 2);\r      c3.cache(-s, -s, s * 2, s * 2);\r\r      const fullRangeBitmap = new createjs.Bitmap(c1.cacheCanvas),\r            growingCircleBitmap = new createjs.Bitmap(c2.cacheCanvas),\r            growingCircleEdgeBitmap = new createjs.Bitmap(c3.cacheCanvas);\r\r      fullRangeBitmap.regX = fullRangeBitmap.regY = s;\r      growingCircleBitmap.regX = growingCircleBitmap.regY = s;\r      growingCircleEdgeBitmap.regX = growingCircleEdgeBitmap.regY = s;\r\r      container.addChild(fullRangeBitmap);\r      container.addChild(growingCircleBitmap);\r      container.addChild(growingCircleEdgeBitmap);\r      this.view.layer.action.back.addChild(container);\r\r      const views = {\r        container,\r        handle,\r        fullRange: fullRangeBitmap,\r        growingCircle: growingCircleBitmap,\r        growingCircleEdge: growingCircleEdgeBitmap,\r      };\r\r      bubbles.set(ship, views);\r\r    })\r  }\r\r  createShipViews() {\r    let our_ship = this.ships.main, our_team;\r    if (our_ship) our_team = our_ship.owner.team;\r    this.ships.forEach((ship) => {\r      let container = new createjs.Container();\r      var hollow = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][0](ship.owner.team.color, ship.isMain ? 4 : 2)),\r        filled = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][1](ship.owner.team.color, ship.isMain ? 4 : 2)),\r        s = ship.radius * 1.2;\r      hollow.cache(-s, -s, s * 2, s * 2);\r      filled.cache(-s, -s, s * 2, s * 2);\r      var view = new createjs.Bitmap(hollow.cacheCanvas);\r      view.regX = view.regY = s;\r      view.hollow = hollow.cacheCanvas, view.filled = filled.cacheCanvas; // TODO cache ships with interchangable bitmap instead\r      container.ship = view;\r      container.addChild(view);\r\r      //text\r      if (ship.owner.team == our_team && ship != our_ship) {\r        var text = new createjs.Text(ship.owner.name, \"14px Roboto\", our_team.color);\r        text.textAlign = \"center\";\r        // text.cache(-50, -30, 100, 60)\r        container.text = text;\r        container.addChild(text);\r      }\r\r      // if(ship == our_ship) {\r      //   let color = this.ships.main.owner.team.color,\r      //     view = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\r      //     shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\r      //     offset = { x: 22, y: -22 };\r      //\r      //   view.x = shadow.x = offset.x;\r      //   view.y = shadow.y = offset.y;\r      //\r      //   container.addChild(container.meter_shadow = view.shadow = shadow);\r      //   container.addChild(container.meter = view);\r      // }\r\r\r      this.view.layer.action.front.addChild(ship.view = container);\r    });\r\r    if (our_ship) {\r      let container = our_ship.view,\r        color = this.ships.main.owner.team.color,\r        innerRadius = 9,\r        outerRadius = 12,\r        meter = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\r        shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\r        offset = {x: 39 * this.scale, y: -39 * this.scale}\r\r      shadow.cache(-outerRadius, -outerRadius, outerRadius*2, outerRadius*2);\r      meter.cache(-innerRadius, -innerRadius, innerRadius*2, innerRadius*2);\r\r      meter.x = shadow.x = offset.x;\r      meter.y = shadow.y = offset.y;\r\r      container.addChild(container.meter_shadow = meter.shadow = shadow);\r      container.addChild(container.meter = meter);\r    }\r  }\r\r  createPoolViews() {\r    this.view.bullets = new Map()\r    this.view.blocks = new Map()\r    this.view.subs = new Map()\r  }\r\r  createOverlayViews() {\r    var overlay = {};\r\r    overlay.score = new createjs.Container();\r    overlay.score.team = [];\r    var imagined_width = 120;\r    this.teams.forEach((team, i) => {\r      var text = new createjs.Text(this.game.scores[i].toString(), \"48px Unica One\", team.color);\r      text.x = (i * imagined_width) + (imagined_width / 2);\r      text.textAlign = \"center\";\r      text.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\r      text.cache(-100, 0, 200, 60);\r      overlay.score.addChild(text);\r      overlay.score.team.push(text);\r    });\r    overlay.score.x = (this.window.width / 2) - ((this.teams.length * imagined_width) / 2)\r    overlay.score.y = 12;\r\r    this.view.layer.overlay.addChild(overlay.score);\r\r\r\r    // MINI MAP\r    if (!this.spectate) this.createOverlayMinimapViews(overlay, this.view.layer.overlay);\r\r\r\r    // energy meter\r    // if(!this.spectate) {\r    //   overlay.energyMeter = {};\r    //   const color = this.ships.main.owner.team.color,\r    //         white = '#ECEFF1',\r    //         darkColor = COLOR.mix(color, '#37474F', 30),\r    //         lightColor = COLOR.mix(color, white, 30),\r    //         padding = 32,\r    //         minimapSpace = overlay.minimap.x + overlay.minimap.width,\r    //         remainingWidth = (this.window.width - minimapSpace) - (2 * padding),\r    //         width = remainingWidth,\r    //         height = 16 * this.scale,\r    //         meterContainer = new createjs.Container(),\r    //         barBackdropView = new createjs.Shape(DeepSpaceGame.graphics.energy_bar_rect(darkColor, width, height)),\r    //         chargeBarView = new createjs.Shape(DeepSpaceGame.graphics.energy_bar_rect(white, width, height)),\r    //         colorBarView = new createjs.Shape(DeepSpaceGame.graphics.energy_bar_rect(color, width, height));\r    //\r    //\r    //   meterContainer.addChild(barBackdropView);\r    //   meterContainer.addChild(chargeBarView);\r    //   meterContainer.addChild(colorBarView);\r    //\r    //   meterContainer.x = minimapSpace; // + (width / 2);\r    //   meterContainer.y = this.window.height - (padding + (height / 2));\r    //\r    //   overlay.energyMeter.container = meterContainer;\r    //   overlay.energyMeter.colorBar = colorBarView;\r    //   overlay.energyMeter.chargeBar = chargeBarView;\r    //\r    //   this.view.layer.overlay.addChild(meterContainer);\r    // }\r\r\r    // var imagined_width = 512;\r    overlay.message = new createjs.Text(\"\", \"24px Roboto Condensed\");\r    overlay.message.textAlign = \"center\";\r    overlay.message.x = (this.window.width / 2);\r    overlay.message.y = 76;\r    overlay.message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\r    overlay.message.cache(-(this.window.width/2), 0, this.window.width, 28);\r\r    this.view.layer.overlay.addChild(overlay.message);\r\r    // var imagined_width = 512;\r    overlay.kill_message = new createjs.Text(\"\", \"24px Roboto Condensed\");\r    overlay.kill_message.textAlign = \"center\";\r    overlay.kill_message.x = (this.window.width / 2);\r    overlay.kill_message.y = this.window.height - 76;\r    overlay.kill_message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\r    overlay.kill_message.cache(-(this.window.width/2), 0, this.window.width, 28);\r\r    this.view.layer.overlay.addChild(overlay.kill_message);\r\r    switch (this.gameMode) {\r      case 0: // ctf\r        // var centerX = this.mapInfo.width / 2;\r        // var centerY = this.mapInfo.height / 2;\r\r        var r = DeepSpaceGame.modes[\"ctf\"].flag_radius * this.scale, s = r * 1.2;\r        var flag = new createjs.Shape(\r          DeepSpaceGame.graphics.flag(r)\r        );\r        flag.shadow = DeepSpaceGame.graphics.flag_shadow();\r        flag.cache(-s, -s, s * 2, s * 2);\r\r        // flag.x = centerX; flag.y = centerY;\r\r        this.view.layer.overlay.addChild(flag);\r        this.view.flag = flag;\r\r        break;\r    }\r\r\r    this.view.overlay = overlay;\r  }\r\r  createOverlayMinimapViews(overlay_model, overlay_view) {\r\r    let mini = overlay_model.minimap = new createjs.Container();\r\r    mini.width = mini.height = 168;\r    mini.relativeScale = mini.width / this.mapInfo.width;\r    mini.regX = mini.width/2;\r    mini.regY = mini.height/2;\r    mini.rotation = Math.degrees(-this.ships.main.spawnRotation) - 90;\r\r    let padd = this.window.width < 600 ? 0 : 32;\r    mini.x = (padd) + mini.width/2;\r    mini.y = this.window.height - (padd + mini.height) + mini.height/2\r\r    // background\r    let background = mini.background = new createjs.Shape();\r    background.graphics.beginFill('#263238').drawRect(0, 0, mini.width, mini.height);\r    background.cache(0, 0, mini.width, mini.height);\r    mini.addChild(background);\r\r    // map obstacles\r    var max = 128,\r      r = max * mini.relativeScale,\r      block = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r)),\r      s = r * 1.2;\r    block.cache(-s, -s, s * 2, s * 2);\r    var cache = block.cacheCanvas;\r\r    this.model.map.impermeables.forEach(block => {\r      var scale = (block.radius * mini.relativeScale) / r,\r        view = new createjs.Bitmap(cache),\r        pos = block.position;\r      view.scaleX = view.scaleY = scale;\r      view.x = (pos.x * mini.relativeScale) - (scale * cache.width / 2);\r      view.y = (pos.y * mini.relativeScale) - (scale * cache.height / 2);\r      mini.addChild(view);\r    });\r\r    // spawns\r    this.teams.forEach(team => {\r      let camp = team.spawn_camp,\r        radius = team == this.ships.main.owner.team ? 8 : 6,\r        // radius = camp.radius*mini.relativeScale,\r        view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(team.color, 6)),\r        pos = camp.position;\r      view.x = pos.x * mini.relativeScale;\r      view.y = pos.y * mini.relativeScale;\r      var s = radius * 1.2;\r      view.cache(-s, -s, s * 2, s * 2);\r      mini.addChild(view);\r    });\r\r    // bubbles\r    if(this.gameMode === 0) {\r      const this_player = this.ships.main.owner;\r      const maxR = Bubble.stats.OUTER_RADIUS * mini.relativeScale;\r      const s = maxR * 1.2;\r      mini.playerBubbles = new Map();\r      this.players.forEach((player, id) => {\r        const bubbleContainer = new createjs.Container();\r        const teamColor = player.team.color;\r        const color = player === this_player ? '#ECEFF1' : teamColor;\r        const bubbleEdge = new createjs.Shape(DeepSpaceGame.graphics.circle_edge(color, maxR, 4));\r        const bubbleFill = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(player.team.color, maxR));\r        bubbleFill.alpha = 0.3;\r        bubbleFill.cache(-s, -s, s*2, s*2);\r        bubbleEdge.cache(-s, -s, s*2, s*2);\r        bubbleContainer.addChild(bubbleFill);\r        bubbleContainer.addChild(bubbleEdge);\r        mini.playerBubbles.set(id, [bubbleContainer, bubbleFill]);\r        mini.addChild(bubbleContainer);\r      });\r    }\r\r    // flag\r    if(this.gameMode == 0) {\r      const r = 6;\r      let flag_view = mini.flag = new createjs.Shape(DeepSpaceGame.graphics.circle_fill('#ECEFF1', r));\r      flag_view.cache(-r, -r, r*2, r*2);\r      mini.addChild(flag_view);\r    }\r\r    // ships .. hmmm.. intel >.>\r    // (only same team for now)\r    let this_player = this.ships.main.owner, this_team = this_player.team\r    mini.players = [];\r    const miniShipRadii = 4;\r    this_team.players.forEach(player => {\r      let view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(this_team.color, miniShipRadii));\r      view.alpha = player == this_player ? 1 : 0.6;\r      view.cache(-miniShipRadii, -miniShipRadii, miniShipRadii*2, miniShipRadii*2);\r      mini.players.push(view);\r      mini.addChild(view);\r    });\r\r    // and also eventually blocks\r    mini.blocks = new Map();\r\r\r    overlay_view.addChild(mini);\r  }\r\r  createOverlayMinimapBlockViewFor(block) {\r    let cache = DeepSpaceGame.graphicsCaches.minimap.blocks[block.team],\r      blv = new createjs.Bitmap(cache),\r      mini = this.view.overlay.minimap,\r      scale = mini.relativeScale;\r\r    // blv.alpha = 0.2\r    blv.x = block.position.x * scale;\r    blv.y = block.position.y * scale;\r\r    blv.regX = blv.regY = (cache.width / 2);\r\r    mini.addChild(blv);\r    mini.setChildIndex(blv, 1)\r    mini.blocks.set(block.id, blv);\r\r    // flag always on top\r    // mini.setChildIndex(mini.flag, mini.numChildren-1)\r  }\r\r  destroyOverlayMinimapBlockViewFor(id) {\r    if (!this.spectate) {\r      var v = this.view.overlay.minimap.blocks.get(id);\r      if (v) {\r        this.view.overlay.minimap.blocks.delete(id);\r        this.view.overlay.minimap.removeChild(v);\r      }\r    }\r  }\r\r  configureProton() {\r\r    // functions\r    const bitmapOfColor = (color) => {\r      const graphics = DeepSpaceGame.graphics.block_fill(color, 6);\r      const particle = new createjs.Shape(graphics);\r      particle.cache(-10, -10, 20, 20);\r      const cache = particle.cacheCanvas;\r      return new createjs.Bitmap(cache);\r    };\r\r    // vars and references\r    this.view.proton = {};\r    const stage = this.stage;\r    const canvas = stage.canvas;\r    const view = this.view.layer.action.back;\r    const proton = this.view.proton.main = new Proton();\r    const renderer = this.view.proton.renderer = new Proton.Renderer('easel', proton, view);\r    const emitters = this.view.proton.emitters = new Map();\r\r    const imageTargets = this.view.proton.imageTargets = {};\r    imageTargets.teams = [];\r    imageTargets.death = new Proton.ImageTarget(bitmapOfColor('#FFFFFF'));\r    imageTargets.stars = new Proton.ImageTarget(bitmapOfColor('#FFFFFF'));\r    imageTargets.starTeams = [];\r    for(let team of this.teams) {\r      imageTargets.teams.push(new Proton.ImageTarget(bitmapOfColor(team.color)));\r      imageTargets.starTeams.push(new Proton.ImageTarget(bitmapOfColor(team.color)))\r    }\r\r    const util = this.view.proton.util = {};\r    util.hasInitializer = (emitter, initializer) => {\r      return (emitter.initializes.indexOf(initializer) > -1);\r    };\r    \r\r\r\r\r    // for each ship\r    for(let ship of this.ships) {\r      const local = ship === this.ships.main;\r\r      const emitter = new Proton.Emitter();\r      const color = ship.owner.team.color;\r\r      // setup and config\r      const graphics = DeepSpaceGame.graphics.block_fill(color, 6);\r      const particle = new createjs.Shape(graphics);\r      particle.cache(-10, -10, 20, 20);\r      const cache = particle.cacheCanvas;\r      const bitmap = new createjs.Bitmap(cache);\r\r      emitter.rate = new Proton.Rate(1, 0.2);\r      emitter.addInitialize(imageTargets.teams[ship.owner.team.number]);\r      emitter.addInitialize(new Proton.Life(1, 2.5));\r      const force = new Proton.V(new Proton.Span(0.2, 0.6), new Proton.Span(150, 210), 'polar');\r      emitter.addInitialize(force);\r      emitter.force = force;\r\r      emitter.addBehaviour(new Proton.Scale(1, 5));\r      emitter.addBehaviour(new Proton.Alpha(0.2, 0));\r\r      emitter.emit();\r      proton.addEmitter(emitter);\r      emitters.set(ship, emitter);\r\r    }\r\r    {\r\r      const starEmitter = new Proton.Emitter();\r\r      // setup and config\r\r      starEmitter.rate = new Proton.Rate(20, 0.1);\r      starEmitter.addInitialize(imageTargets.stars);\r      starEmitter.addInitialize(new Proton.Life(1));\r      const zone = new Proton.P(new Proton.CircleZone(0, 0, 1000));\r      starEmitter.addInitialize(zone);\r      const force = new Proton.V(new Proton.Span(0.2, 0.6), new Proton.Span(150, 210), 'polar');\r      starEmitter.addInitialize(force);\r      starEmitter.force = force;\r\r      starEmitter.addBehaviour(new Proton.Alpha(0.4, 0));\r      starEmitter.addBehaviour(new Proton.Scale(0, 0.7));\r\r      starEmitter.emit();\r      proton.addEmitter(starEmitter);\r      this.starEmitter = starEmitter;\r\r    }\r\r\r\r    renderer.start();\r\r    // // refresh proton\r    // proton.update();\r\r\r  }\r\r  setupCamera() {\r    this.view.layer.action.width = this.mapInfo.width;\r    this.view.layer.action.height = this.mapInfo.height;\r    this.camera = new Camera(this.stage.canvas, this.view.layer.action, this.scale, this.HDPScale);\r\r    if (this.spectate) {\r      this.activePlayerIndex = 0;\r      // this.playerShipViews = new Map();\r      // this.setupData.players.forEach((p, i)=>{\r      //   this.playerShipViews.set(i, this.players.get(p.id).ship.view);\r      // });\r      this.activePlayers = this.setupData.players.map(p => this.players.get(p[0]));\r      this.updateCameraFocus();\r    } else {\r      this.camera.focus = this.ships.main.view;\r    }\r\r    this.camera.width = this.window.width;\r    this.camera.height = this.window.height;\r  }\r\r  setupListeners() { // (needs (even more) work)\r    this.inputHandlers = new Map();\r    var receiver = window;\r\r    if (this.spectate) {\r      var keyHandler = (e) => {\r        if (e.keyCode == 37) { // left: ◀︎\r          this.activePlayerIndex--;\r          if (this.activePlayerIndex < 0) this.activePlayerIndex = this.activePlayers.length - 1;\r        }\r        if (e.keyCode == 39) { // right: ▶︎\r          this.activePlayerIndex++;\r          if (this.activePlayerIndex >= this.activePlayers.length) this.activePlayerIndex = 0;\r        }\r        this.updateCameraFocus();\r      }\r      receiver.addEventListener('keydown', keyHandler); // onkeydown\r      this.inputHandlers.set('keydown', keyHandler);\r    } else {\r\r\r      const inputs = this.input = {\r        acceleration: 0,\r        angularAcceleration: 0,\r        angularVelocity: null,\r        shoot: false,\r        shootAngle: 0,\r        block: false,\r        sub: false,\r      };\r\r\r      // KEYBOARD\r      // key mappings, have multiple ('values') so you can switch between key bindings\r      // the default values are true / false\r\r      const keyboard = new KeyboardInput();\r\r      const keyboardStack = new InputStack();\r      window.stack = keyboardStack; window.keyboard = keyboard;\r      const keymap = [\r        // up: ▲\r        [\"up\", [38]],\r        // left: ◀︎\r        [\"lt\", [37]],\r        // right: ▶︎\r        [\"rt\", [39]],\r        // block: space, v\r        [\"shoot\", [32, 86]],\r        // sub: d\r        [\"sub\", [68]],\r        // shoot: wsad\r        // [\"shoot\", [87, 83, 65, 68]],\r      ];\r\r      for(const [item, mappings] of keymap) {\r        for(const keycode of mappings) {\r          keyboardStack.addItemWhen(item, keyboard.button(keycode).ontrue);\r          keyboardStack.removeItemWhen(item, keyboard.button(keycode).onfalse);\r        }\r      }\r      keyboardStack.on('change', () => flattenStack(keyboardStack));\r\r      const buttonWeight = 1;\r      const flattenStack = stack => {\r\r        // setup\r        inputs.acceleration = 0;\r        inputs.angularAcceleration = 0;\r        inputs.angularVelocity = null;\r        let x2 = 0, y2 = 0, shoot = false, block = false, sub = false;\r\r        // cycle through\r        for (let [input, value] of stack.items) {\r          let noValue = typeof value === 'undefined';\r          switch (input) {\r            case 'up':\r              inputs.acceleration = noValue ? buttonWeight : value;\r              break;\r            case 'dn':\r              inputs.acceleration = noValue ? -buttonWeight : -value;\r              break;\r            case 'rt':\r              inputs.angularAcceleration = noValue ? buttonWeight : value;\r              break;\r            case 'lt':\r              inputs.angularAcceleration = noValue ? -buttonWeight : -value;\r              break;\r            case 'rt+':\r              inputs.angularVelocity = noValue ? buttonWeight : value;\r              break;\r            case 'lt+':\r              inputs.angularVelocity = noValue ? -buttonWeight : -value;\r              break;\r            case 'up2':\r              x2 = 1;\r              shoot = true;\r              break;\r            case 'dn2':\r              x2 = -1;\r              shoot = true;\r              break;\r            case 'lt2':\r              y2 = -1;\r              shoot = true;\r              break;\r            case 'rt2':\r              y2 = 1;\r              shoot = true;\r              break;\r            case 'shoot':\r              shoot = true;\r              break;\r            case 'block':\r              block = true;\r              break;\r            case 'sub':\r              sub = true;\r              break;\r          }\r        }\r\r        // evaluate\r        const directionV = new V2D(x2, y2);\r        inputs.shootAngle = directionV.angle;\r        inputs.shoot = shoot;\r        inputs.block = block;\r        inputs.sub = sub;\r\r      };\rwindow.flatten = flattenStack;\r      // let keyHandler = (e) => {\r      //   var type = e.type;\r      //\r      //   if (type == 'keyup' || type == 'keydown') {\r      //     var eventCode = e.keyCode;\r      //\r      //     keymap.forEach((row) => {\r      //       row[1].forEach((code) => {\r      //         if (code == eventCode) {\r      //\r      //           // row[0] e.g. 'up' or 'block'\r      //           // row[2] is value on keydown\r      //           // row[3] is value on keyup\r      //\r      //           if (!type.is('keyup')) {\r      //             if (!inputStack.has(row[0])) {\r      //               inputStack.add(row[0]);\r      //               inputStack.changed = true;\r      //             }\r      //           } else {\r      //             inputStack.delete(row[0])\r      //             inputStack.changed = true;\r      //           }\r      //\r      //           // inputStack.delete(row[0])\r      //           // if(keydown)\r      //           // if(!type.is('keyup')) inputStack.add(row[0]);\r      //\r      //           // NetworkHelper.out_input_stack(Array.from(inputStack));\r      //           // inputStack.changed = true;\r      //           // log(Array.from(inputStack));\r      //         }\r      //       });\r      //     });\r      //\r      //     if(inputStack.changed) flattenStack(inputStack);\r      //   }\r      // };\r\r      // receiver.addEventListener('keydown', keyHandler); // onkeydown\r      // receiver.addEventListener('keyup', keyHandler); // onkeyup\r      //\r      // this.inputHandlers.set('keydown', keyHandler);\r      // this.inputHandlers.set('keyup', keyHandler);\r\r\r\r\r      // GAMEPAD\r\r      /*\r      receiver.addEventListener(\"gamepadconnected\", (e) => this.gamepad = e.gamepad);\r      // this closure has access to the inputStack variable.. the alias for this.ships.main.owner.input\r      // .. thus it is left here .. please revise\r      this.updateGamepadInput = (!navigator.getGamepads) ? () => {\r        } : () => {\r          var gamepad = navigator.getGamepads()[0];\r          if (!gamepad) return;\r\r\r\r\r          // NEW :)\r          const deadZone = 0.15;\r          const buttonMap = new Map([\r\r            ['up', [\r\r              // - y axis\r              gamepad.axes[1] < -deadZone,\r\r              // l trigger\r              gamepad.axes[3] > 0,\r\r              // d-pad north\r\r            ]],\r\r            ['dn', [\r\r              // + y axis\r              gamepad.axes[1] > deadZone,\r\r              // r trigger\r              gamepad.axes[4] > 0,\r\r            ]],\r\r            ['lt', [\r\r              // - x axis\r              gamepad.axes[0] < -deadZone,\r\r            ]],\r\r            ['rt', [\r\r              // - x axis\r              gamepad.axes[0] > deadZone,\r\r            ]],\r\r            ['up2', [\r\r              // - y axis 2\r              gamepad.axes[5] < -deadZone,\r\r            ]],\r\r            ['dn2', [\r\r              // + y axis 2\r              gamepad.axes[5] > deadZone,\r\r            ]],\r\r            ['lt2', [\r\r              // - x axis 2\r              gamepad.axes[2] < -deadZone,\r\r            ]],\r\r            ['rt2', [\r\r              // + x axis 2\r              gamepad.axes[2] > deadZone,\r\r            ]],\r\r            ['shoot', [\r\r              // buttons a & b\r              gamepad.buttons[0].pressed,\r              gamepad.buttons[1].pressed,\r\r            ]],\r\r            ['block', [\r\r              // r shoulder button\r              gamepad.buttons[7].pressed,\r\r            ]],\r\r            ['sub', [\r\r              // buttons x & y\r              gamepad.buttons[3].pressed,\r              gamepad.buttons[4].pressed,\r\r              // l shoulder button\r              gamepad.buttons[6].pressed,\r\r              // r joystick press\r              gamepad.buttons[14].pressed,\r\r            ]],\r\r          ]);\r\r          for(let [code, bindings] of buttonMap) {\r\r            const activation = _(bindings).contains(true);\r\r            if(activation) {\r\r              if(inputStack.has(code)) continue;\r\r              inputStack.add(code);\r              inputStack.changed = true;\r\r            } else {\r\r              if(!inputStack.has(code)) continue;\r\r              inputStack.delete(code);\r              inputStack.changed = true;\r\r            }\r\r          }\r\r\r\r        };\r      */\r\r      // newer :D\r\r      const gamepad = new GamepadInput();\r\r      // const buttonMap = new Map([\r      //\r      //   ['up', [\r      //\r      //     // - y axis\r      //     gamepad.axes[1] < -deadZone,\r      //\r      //     // l trigger\r      //     gamepad.axes[3] > 0,\r      //\r      //     // d-pad north\r      //\r      //   ]],\r      //\r      //   ['dn', [\r      //\r      //     // + y axis\r      //     gamepad.axes[1] > deadZone,\r      //\r      //     // r trigger\r      //     gamepad.axes[4] > 0,\r      //\r      //   ]],\r      //\r      //   ['lt', [\r      //\r      //     // - x axis\r      //     gamepad.axes[0] < -deadZone,\r      //\r      //   ]],\r      //\r      //   ['rt', [\r      //\r      //     // - x axis\r      //     gamepad.axes[0] > deadZone,\r      //\r      //   ]],\r      //\r      //   ['up2', [\r      //\r      //     // - y axis 2\r      //     gamepad.axes[5] < -deadZone,\r      //\r      //   ]],\r      //\r      //   ['dn2', [\r      //\r      //     // + y axis 2\r      //     gamepad.axes[5] > deadZone,\r      //\r      //   ]],\r      //\r      //   ['lt2', [\r      //\r      //     // - x axis 2\r      //     gamepad.axes[2] < -deadZone,\r      //\r      //   ]],\r      //\r      //   ['rt2', [\r      //\r      //     // + x axis 2\r      //     gamepad.axes[2] > deadZone,\r      //\r      //   ]],\r      //\r      //   ['shoot', [\r      //\r      //     // buttons a & b\r      //     gamepad.buttons[0].pressed,\r      //     gamepad.buttons[1].pressed,\r      //\r      //   ]],\r      //\r      //   ['block', [\r      //\r      //     // r shoulder button\r      //     gamepad.buttons[7].pressed,\r      //\r      //   ]],\r      //\r      //   ['sub', [\r      //\r      //     // buttons x & y\r      //     gamepad.buttons[3].pressed,\r      //     gamepad.buttons[4].pressed,\r      //\r      //     // l shoulder button\r      //     gamepad.buttons[6].pressed,\r      //\r      //     // r joystick press\r      //     gamepad.buttons[14].pressed,\r      //\r      //   ]],\r      //\r      // ]);\r\r      const deadzone = 0.2;\r      const max = 1;\r      const diff = max - deadzone;\r\r\r      // axes\r\r      keyboardStack.addItemWhen('up', gamepad.axis(1).onlessthan(-deadzone), n => (max + n / diff));\r      keyboardStack.addItemWhen('up', gamepad.axis(3).onmorethan(0));\r      keyboardStack.removeItemWhen('up', gamepad.axis(1).onmorethan(-deadzone));\r      keyboardStack.removeItemWhen('up', gamepad.axis(3).onlessthan(0));\r\r      keyboardStack.addItemWhen('dn', gamepad.axis(1).onmorethan(deadzone), n => (max - n / diff));\r      keyboardStack.addItemWhen('dn', gamepad.axis(4).onmorethan(0));\r      keyboardStack.removeItemWhen('dn', gamepad.axis(1).onlessthan(deadzone));\r      keyboardStack.removeItemWhen('dn', gamepad.axis(4).onlessthan(0));\r\r      keyboardStack.addItemWhen('lt', gamepad.axis(0).onlessthan(-deadzone), n => (max + n / diff));\r      keyboardStack.removeItemWhen('lt', gamepad.axis(0).onmorethan(-deadzone));\r\r      keyboardStack.addItemWhen('rt', gamepad.axis(0).onmorethan(deadzone), n => (max - n / diff));\r      keyboardStack.removeItemWhen('rt', gamepad.axis(0).onmorethan(deadzone));\r\r\r      keyboardStack.addItemWhen('up2', gamepad.axis(5).onlessthan(-deadzone), n => (max + n / diff));\r      keyboardStack.removeItemWhen('up2', gamepad.axis(5).onmorethan(-deadzone));\r\r      keyboardStack.addItemWhen('dn2', gamepad.axis(5).onmorethan(deadzone), n => (max - n / diff));\r      keyboardStack.removeItemWhen('dn2', gamepad.axis(5).onmorethan(deadzone));\r\r      keyboardStack.addItemWhen('lt2', gamepad.axis(2).onlessthan(-deadzone), n => (max + n / diff));\r      keyboardStack.removeItemWhen('lt2', gamepad.axis(2).onmorethan(-deadzone));\r\r      keyboardStack.addItemWhen('rt2', gamepad.axis(2).onmorethan(deadzone), n => (max - n / diff));\r      keyboardStack.removeItemWhen('rt2', gamepad.axis(2).onmorethan(deadzone));\r\r      // buttons\r\r      keyboardStack.addItemWhen('shoot', gamepad.button(0).ontrue);\r      keyboardStack.removeItemWhen('shoot', gamepad.button(0).onfalse);\r      keyboardStack.addItemWhen('shoot', gamepad.button(1).ontrue);\r      keyboardStack.removeItemWhen('shoot', gamepad.button(1).onfalse);\r\r      keyboardStack.addItemWhen('block', gamepad.button(7).ontrue);\r      keyboardStack.removeItemWhen('block', gamepad.button(7).onfalse);\r\r      keyboardStack.addItemWhen('sub', gamepad.button(3).ontrue);\r      keyboardStack.removeItemWhen('sub', gamepad.button(3).onfalse);\r      keyboardStack.addItemWhen('sub', gamepad.button(4).ontrue);\r      keyboardStack.removeItemWhen('sub', gamepad.button(4).onfalse);\r      keyboardStack.addItemWhen('sub', gamepad.button(6).ontrue);\r      keyboardStack.removeItemWhen('sub', gamepad.button(6).onfalse);\r      keyboardStack.addItemWhen('sub', gamepad.button(14).ontrue);\r      keyboardStack.removeItemWhen('sub', gamepad.button(14).onfalse);\r\r\r\r\r\r\r\r\r      // MOBILE\r\r      const mobile = new MobileInput();\r      window.mobile = mobile;\r\r      const left = document.querySelector('#touch_layer > .left');\r      const rightTop = document.querySelector('#touch_layer > .right > .top');\r      const rightBottom = document.querySelector('#touch_layer > .right > .bottom');\r\r      const deadzone1 = 10;\r      const max1 = 110;\r      const diff1 = max1 - deadzone1;\r      const maxExtended = 150;\r\r      // mobile.createButton('whole-screen', whole);\r      mobile.createButton('left-screen', left);\r      mobile.createButton('right-top', rightTop);\r      mobile.createButton('right-bottom', rightBottom);\r      mobile.createVerticalAxis('leftY', left);\r\r\r      keyboardStack.addItemWhen('up', mobile.button('left-screen').ontrue);\r      keyboardStack.removeItemWhen('up', mobile.button('left-screen').onfalse);\r      keyboardStack.addItemWhen('lt+', mobile.axis('leftY').onlessthan(-deadzone1), n => (diff1 - (max1 + n)) / diff1);\r      keyboardStack.removeItemWhen('lt+', mobile.axis('leftY').onmorethan(-deadzone1));\r      keyboardStack.addItemWhen('rt+', mobile.axis('leftY').onmorethan(deadzone1), n => (diff1 - (max1 - n)) / diff1);\r      keyboardStack.removeItemWhen('rt+', mobile.axis('leftY').onlessthan(deadzone1));\r\r      keyboardStack.addItemWhen('sub', mobile.button('right-top').ontrue);\r      keyboardStack.removeItemWhen('sub', mobile.button('right-top').onfalse);\r      keyboardStack.addItemWhen('shoot', mobile.button('right-bottom').ontrue);\r      keyboardStack.removeItemWhen('shoot', mobile.button('right-bottom').onfalse);\r\r      // gamepad.axis('leftY').onlessthan(0)((value)=>{\r      //   $('#clock').text(`value: ${value}`);\r      // })\r\r      // const mobile = new MobileInput({\r      //   draggableAxes: true,\r      // });\r      // mobile.accelerometer.start();\r      // mobile.accelerometer.stop();\r      // mobile.accelerometer.reset();\r      // mobile.axis('tiltX').onlessthan(3);\r      // mobile.addSurface('left-screen', 890);\r      // mobile.addSurface('right-bottom', 891);\r      //\r      //\r      // keyboardStack.addItemWhen('rt2', mobile.axis('left-screen').onmorethan(deadzone), n => (max - n / diff));\r      // keyboardStack.removeItemWhen('rt2', mobile.axis('left-screen').onmorethan(deadzone));\r\r      let raw_acc_data = [0, 0], applied_acc_data = [0, 0]; // [x, y]\r      let threshold = 1, bias = [0, 0]; // deadzone\r      const minThreshhold = 1;\r      const maxThreshhold = 7;\r      const thresholdSpan = maxThreshhold - minThreshhold;\r      bias = ENV.storage.calibration = (ENV.storage.calibration) ? ENV.storage.calibration.split(\",\").map(Number) : [0, 0];\r      // let origin = [0, bias];\r      if (ENV.mobile && false && window.DeviceMotionEvent != undefined) {\r        window.ondevicemotion = function (e) {\r          raw_acc_data = [e.accelerationIncludingGravity.x, e.accelerationIncludingGravity.y];\r          // if ( e.rotationRate )  {\r          //   document.getElementById(\"rotationAlpha\").innerHTML = e.rotationRate.alpha;\r          //   document.getElementById(\"rotationBeta\").innerHTML = e.rotationRate.beta;\r          //   document.getElementById(\"rotationGamma\").innerHTML = e.rotationRate.gamma;\r          // }\r        }\r\r        inputs.updateMotion = function () {\r\r          // generate the data\r          \r          let orientation = window.orientation,\r            [raw_x, raw_y] = raw_acc_data, [x, y] = [raw_x, raw_y];\r\r          if (orientation === 90) {\r            x = -raw_y, y = raw_x\r          }\r          else if (orientation === -90) {\r            x = raw_y, y = -raw_x\r          }\r          else if (orientation === 180 || orientation === -180) {\r            x = -x, y = -y\r          }\r\r          applied_acc_data = [x, y];\r          x -= bias[0]; // bias towards player;\r          y -= bias[1];\r\r          if(ENV.options.input.invertControls) { x = -x; y = -y }\r\r          // apply the data\r\r\r          if(x > minThreshhold) { // more\r            if(x < maxThreshhold) inputs.angularAcceleration = (maxThreshhold - x) / thresholdSpan;\r            else inputs.angularAcceleration = 1;\r          } else if(x < -minThreshhold) { // less\r            if(x > -maxThreshhold) inputs.angularAcceleration = (-maxThreshhold - x) / thresholdSpan;\r            else inputs.angularAcceleration = -1;\r          } else { // neither\r            inputs.angularAcceleration = 0;\r          }\r\r          if(y > minThreshhold) { // more\r            if(y < maxThreshhold) inputs.acceleration = (maxThreshhold - y) / thresholdSpan;\r            else inputs.acceleration = 1;\r          } else if(y < -minThreshhold) { // less\r            if(y > -maxThreshhold) inputs.acceleration = (-maxThreshhold - y) / thresholdSpan;\r            else inputs.acceleration = -1;\r          } else { // neither\r            inputs.acceleration = 0;\r          }\r\r          // if (x > threshold) {\r          //   inputStack.add('rt')\r          // } else {\r          //   inputStack.delete('rt')\r          // }\r          // if (x < -threshold) {\r          //   inputStack.add('lt')\r          // } else {\r          //   inputStack.delete('lt')\r          // }\r          // if (y > threshold) {\r          //   inputStack.add('up')\r          // } else {\r          //   inputStack.delete('up')\r          // }\r          // if (y < -threshold) {\r          //   inputStack.add('dn')\r          // } else {\r          //   inputStack.delete('dn')\r          // }\r\r          $('#clock').text(`x: ${x.round(0)}, y: ${y.round(0)}`);\r\r        };\r      }\r\r      // var left = document.querySelector('#touch_layer > .left');\r      // left.addEventListener('touchstart', e => {\r      //   keyboardStack.setItem('block')\r      //   // inputStack.add('block')\r      // });\r      // left.addEventListener('touchend', e => {\r      //   keyboardStack.clearItem('block')\r      //   // inputStack.delete('block')\r      // });\r      //\r      // let joystick = new V2D(), joystick_deadzone_radius = 30;\r      // var right = document.querySelector('#touch_layer > .right');\r      // right.addEventListener('touchstart', e => {\r      //   keyboardStack.setItem('shoot')\r      //   // inputStack.add('shoot')\r      // });\r      // right.addEventListener('touchend', e => {\r      //   keyboardStack.clearItem('shoot');\r      //   keyboardStack.clearItem('up2');\r      //   keyboardStack.clearItem('dn2');\r      //   keyboardStack.clearItem('lt2');\r      //   keyboardStack.clearItem('rt2');\r      //   // inputStack.delete('shoot');\r      //   // inputStack.delete('up2');\r      //   // inputStack.delete('dn2');\r      //   // inputStack.delete('lt2');\r      //   // inputStack.delete('rt2');\r      // });\r      // var right_hammer = new Hammer(right);\r      // right_hammer.on('panmove', function (e) {\r      //   var v = new V2D(e.deltaX, e.deltaY), a = v.angle;\r      //   if (v.length > joystick_deadzone_radius) {\r      //     if (a < -0.39 && a > -2.74) {\r      //       keyboardStack.setItem('up2')\r      //       // inputStack.add('up2')\r      //     } else {\r      //       keyboardStack.clearItem('up2')\r      //       // inputStack.delete('up2')\r      //     }\r      //     if (a > 0.39 && a < 2.74) {\r      //       keyboardStack.setItem('dn2')\r      //       // inputStack.add('dn2')\r      //     } else {\r      //       keyboardStack.clearItem('dn2')\r      //       // inputStack.delete('dn2')\r      //     }\r      //     if (a > 1.96 || a < -1.96) {\r      //       keyboardStack.setItem('lt2')\r      //       // inputStack.add('lt2')\r      //     } else {\r      //       keyboardStack.clearItem('lt2')\r      //       // inputStack.delete('lt2')\r      //     }\r      //     if (a > -1.18 && a < 1.18) {\r      //       keyboardStack.setItem('rt2')\r      //       // inputStack.add('rt2')\r      //     } else {\r      //       keyboardStack.clearItem('rt2')\r      //       // inputStack.delete('rt2')\r      //     }\r      //   } else {\r      //\r      //   }\r      //   // console.log(e)\r      // });\r      //\r      // var hammertime = new Hammer(document.querySelector('#touch_layer'));\r      // hammertime.get('tap').set({taps: 2})\r      // hammertime.get('swipe').set({direction: Hammer.DIRECTION_LEFT})\r      // hammertime.on('tap', function (ev) {\r      //   keyboardStack.setItem('sub');\r      //   // inputStack.add('sub');\r      //   ( () => keyboardStack.clearItem('sub') ).wait(200);\r      //   // ( () => inputStack.delete('sub') ).wait(200);\r      // });\r      // hammertime.on('swipe', function (e) {\r      //   // calibrate\r      //   bias = applied_acc_data;\r      //   ENV.storage.calibration = bias;\r      // });\r\r\r    }\r\r  }\r\r  setupPhysics() {\r    this.setupCollisionSystem();\r    this.assignCollisionPatterns();\r    this.setupReferenceGroups();\r  }\r\r  setupCollisionSystem() {\r    let physics = this.physics = {};\r\r    physics.block_size = 512;\r    physics.world_size = {width: this.mapInfo.width, height: this.mapInfo.height};\r\r    let rows = Math.ceil(physics.world_size.width / physics.block_size),\r      cols = Math.ceil(physics.world_size.height / physics.block_size);\r\r    physics.divisions = [];\r    // rows.times(i => {\r    //   physics.divisions.push([]);\r    //   cols.times(() => {\r    //     physics.divisions[i].push(new Set())\r    //   })\r    // })\r\r    physics.division_index = function (x, y) {\r      return (y * cols) + x;\r    }\r\r    physics.division_coordinates = function (i) {\r      return [i % rows, Math.floor(i / cols)]\r    }\r\r    /* collision testing will be composed of the following:\r\r     within each division, all the tests will be performed\r     with the objects available\r\r     each division will contain all the collision groups within..\r     they will be populated accordingly so when the tests are run\r     tests between objects listed in the groups in the division\r     will be tested. */\r    physics.collision_checks = [];\r    physics.collision_groups = {\r      SHIPS: Symbol('SHIPS'),\r      OUR_SHIP: Symbol('OUR_SHIP'),\r      OUR_SHIPS: Symbol('OUR_SHIPS'),\r      ENEMY_SHIPS: Symbol('ENEMY_SHIPS'),\r\r      BULLETS: Symbol('BULLETS'),\r      MY_BULLETS: Symbol('MY_BULLETS'),\r      OUR_BULLETS: Symbol('OUR_BULLETS'),\r      ENEMY_BULLETS: Symbol('ENEMY_BULLETS'),\r\r      BLOCKS: Symbol('BLOCKS'),\r      OUR_BLOCKS: Symbol('OUR_BLOCKS'),\r      ENEMY_BLOCKS: Symbol('ENEMY_BLOCKS'),\r\r      BUBBLES: Symbol('BUBBLES'),\r      MY_BUBBLE: Symbol('MY_BUBBLE'),\r      MY_BUBBLE_CORE: Symbol('MY_BUBBLE_CORE'),\r      OUR_BUBBLES: Symbol('OUR_BUBBLES'),\r      ENEMY_BUBBLES: Symbol('ENEMY_BUBBLES'),\r\r      OUR_PROJ_SUBS: Symbol('OUR_PROJ_SUBS'),\r\r      SPAWN_CAMPS: Symbol('SPAWN_CAMPS'),\r      OUR_SPAWN_CAMP: Symbol('OUR_SPAWN_CAMP'),\r      ENEMY_SPAWN_CAMPS: Symbol('ENEMY_SPAWN_CAMPS'),\r\r      REFUGE: Symbol('REFUGE'), // block or camp\r      OUR_REFUGE: Symbol('OUR_REFUGE'),\r\r      FLAG: Symbol('FLAG'),\r      IMPERMEABLES: Symbol('IMPERMEABLES')\r    };\r\r\r    (rows * cols).times(() => {\r      let obj = {};\r      for (let group of Object.keys(physics.collision_groups)) obj[physics.collision_groups[group]] = new Set();\r      physics.divisions.push(obj);\r    })\r\r    /*\r     END RESULT LOOKS SOMETHING LIKE:\r     [.. {...}, {SHIPS: [Set], OUR_BULLETS: Set [b, b, ..], ...}, {...}, ...]\r\r     */\r  }\r\r  setCollisionDivisions(physics_body) {\r    this.clearCollisionDivisions(physics_body)\r\r    let d = physics_body.divisions = new Set(),\r      r = physics_body.radius,\r      [x, y] = [physics_body.position.x, physics_body.position.y];\r\r    [[1, 0], [0, -1], [-1, 0], [0, 1]].forEach(unit_offset_array => {\r      let check_x = x + (r * unit_offset_array[0]),\r        check_y = y + (r * unit_offset_array[1]);\r\r      let division_x = Math.floor(check_x / this.physics.block_size),\r        division_y = Math.floor(check_y / this.physics.block_size),\r        division_index = this.physics.division_index(division_x, division_y);\r\r      if (this.physics.divisions[division_index]) d.add(division_index);\r    });\r\r    for (let division_index of d)\r      for (let group of physics_body.collision_groups)\r        this.physics.divisions[division_index][group].add(physics_body);\r  }\r\r  clearCollisionDivisions(physics_body) {\r    if (physics_body.divisions) {\r      for (let i of physics_body.divisions)\r        for (let group of physics_body.collision_groups)\r          this.physics.divisions[i][group].delete(physics_body);\r    }\r  }\r\r  assignCollisionPatterns() {\r    let checks = this.physics.collision_checks,\r      groups = this.physics.collision_groups;\r\r\r    if (!this.spectate) {\r\r      // MY BULLET <-> ENEMY SHIPS\r      checks.push([\r        groups.MY_BULLETS,\r        groups.ENEMY_SHIPS,\r        (bullet, ship) => {\r          if (!bullet.disabled && !ship.disabled) {\r            this.damageShip(ship.owner.id, bullet.hp, bullet.creator)\r            this.removeBullet(bullet.id)\r          }\r        }]\r      );\r\r      // MY BULLET <-> ENEMY BLOCKS\r      checks.push([\r        groups.MY_BULLETS,\r        groups.ENEMY_BLOCKS,\r        (bullet, block) => {\r          if (!bullet.disabled && !block.disabled) {\r            this.damageBlock(block.id, bullet.hp)\r            if (bullet.hp < block.hp) this.removeBullet(bullet.id);\r          }\r        }]\r      );\r\r      // MY BULLET <-> ENEMY SPAWN_CAMPS\r      checks.push([\r        groups.MY_BULLETS,\r        groups.ENEMY_SPAWN_CAMPS,\r        (bullet, spawn_camp) => {\r          if (!bullet.disabled) {\r            this.removeBullet(bullet.id);\r          }\r        }]\r      );\r\r      // MY BULLET <-> ENEMY BULLETS\r      checks.push([\r        groups.MY_BULLETS,\r        groups.ENEMY_BULLETS,\r        (bulletA, bulletB) => {\r          if (!bulletA.disabled && !bulletB.disabled) {\r            this.removeBullet(bulletA.id);\r            this.removeBullet(bulletB.id);\r          }\r        }]\r      );\r\r      // MY BULLET <-> ENEMY BUBBLES\r      checks.push([\r        groups.MY_BULLETS,\r        groups.ENEMY_BUBBLES,\r        (bullet, bubble) => {\r          if (!bullet.used && bubble.locked && !bullet.disabled && !bubble.complete && !bubble.disabled) {\r            // this.removeBullet(bullet.id);\r            bullet.used = true;\r            this.damageBubble(bubble.target.owner.id, bullet.hp, bullet.creator);\r          }\r        }]\r      );\r\r      // OUR BULLET <-> IMPERMEABLES\r      // checks.push([\r      //   groups.OUR_BULLETS,\r      //   groups.IMPERMEABLES,\r      //   (bullet, imp) => {\r      //     if(!bullet.disabled) {\r      //       NetworkHelper.bullet_destroy(bullet.id);\r      //     }\r      //   }]\r      // );\r\r      // // OUR SHIP <-> OUR REFUGE\r      // checks.push([\r      //   groups.OUR_SHIP,\r      //   groups.OUR_REFUGE,\r      //   (ship, refuge) => {\r      //     if(!ship.disabled) ship.charging = true;\r      //   }]\r      // );\r\r      // OUR SHIP <-> FLAG\r      checks.push([\r        groups.OUR_SHIP,\r        groups.FLAG,\r        (ship, flag) => {\r          if (!ship.disabled && flag.idle)\r            if(ship.canPickupFlag())\r              this.assumeFlag(ship);\r        }]\r      );\r\r      // OUR SHIP <-> BUBBLE CORE\r      checks.push([\r        groups.OUR_SHIP,\r        groups.MY_BUBBLE_CORE,\r        (ship, core) => {\r          if(!ship.bubble.ready) {\r            ship.bubble.resetDropCooldownCounter();\r          } else if (!core.disabled && ship.canPickupBubble())\r            ship.bubble.locked = false;\r        }]\r      );\r\r      // OUR SHIP <-> MY BUBBLE\r      checks.push([\r        groups.OUR_SHIPS,\r        groups.MY_BUBBLE,\r        (ship, bubble) => {\r          if (!ship.disabled && !!ship.flag && !bubble.complete)\r            bubble.growing = true;\r        }]\r      );\r\r      // OUR SUBS <-> ENEMY BLOCKS\r      checks.push([\r        groups.OUR_PROJ_SUBS,\r        groups.ENEMY_BLOCKS,\r        (sub, block) => {\r          if (!sub.disabled && !block.disabled) {\r            switch (sub.type) {\r              case 'attractor':\r              case 'repulsor':\r                // NetworkHelper.sub_destroy(sub.id);\r                // NetworkHelper.block_destroy(block.id);\r                break;\r              case 'block_bomb':\r              case 'missile':\r                sub.explode();\r                break;\r            }\r          }\r        }]\r      );\r\r      // OUR SUBS <-> ENEMY SHIPS\r      checks.push([\r        groups.OUR_PROJ_SUBS,\r        groups.ENEMY_SHIPS,\r        (sub, ship) => {\r          if (!sub.disabled && !ship.disabled) {\r            if (sub.type == 'missile') {\r              this.damageShip(ship.owner.id, sub.hp, sub.player);\r              this.removeSub(sub.id)\r            }\r          }\r        }]\r      );\r\r      // OUR SUBS <-> ENEMY SPAWN_CAMPS\r      checks.push([\r        groups.OUR_PROJ_SUBS,\r        groups.ENEMY_SPAWN_CAMPS,\r        (sub, spawn_camp) => {\r          if (!sub.disabled) this.removeSub(sub.id);\r        }]\r      );\r\r      // OUR SUBS <-> ENEMY BUBBLES\r      checks.push([\r        groups.OUR_PROJ_SUBS,\r        groups.ENEMY_BUBBLES,\r        (sub, bubble) => {\r          if (!sub.disabled && bubble.locked && !bubble.complete && !bubble.disabled) {\r            switch (sub.type) {\r              case 'attractor':\r              case 'repulsor':\r                // NetworkHelper.sub_destroy(sub.id);\r                // NetworkHelper.block_destroy(block.id);\r                break;\r              case 'block_bomb':\r              case 'missile':\r                sub.explode();\r                break;\r            }\r          }\r        }]\r      );\r\r      // OUR BLOCKS <-> OUR BLOCKS\r      checks.push([\r        groups.OUR_BLOCKS,\r        groups.OUR_BLOCKS,\r        (block_a, block_b) => {\r          if (block_a != block_b && !block_a.disabled && !block_b.disabled)\r            if (Physics.overlap(block_a, block_b) > 0.8) // 0.8\r              this.removeBlock(block_a.id);\r        }]\r      );\r\r    }\r\r    // SHIPS <-> WALL OR CAMP (REFUGE)\r    checks.push([\r      groups.SHIPS,\r      groups.REFUGE,\r      (ship, refuge) => {\r        if (!ship.disabled) {\r          if (ship.owner.team.number != refuge.team) {\r            // Physics.bounce(ship, refuge);\r          } else {\r            ship.charging = true;\r          }\r        }\r      }]\r    );\r\r    // SHIPS <-> IMPERMEABLES\r    checks.push([\r      groups.SHIPS,\r      groups.IMPERMEABLES,\r      (ship, imp) => {\r        if (!ship.disabled) {\r          Physics.bounce(ship, imp);\r        }\r      }]\r    );\r\r    // BULLETS <-> IMPERMEABLES\r    checks.push([\r      groups.BULLETS,\r      groups.IMPERMEABLES,\r      (bullet, imp) => {\r        if (!bullet.disabled) {\r          if (Physics.overlap(bullet, imp) < 0.1) {\r            Physics.bounce(bullet, imp);\r          } else {\r            this.removeBullet(bullet.id);\r          }\r        }\r      }]\r    );\r\r    // MY_BUBBLE <-> FLAG\r    checks.push([\r      groups.BUBBLES,\r      groups.FLAG,\r      (bubble, flag) => {\r        if (!bubble.locked) {\r          Physics.bounce(bubble.target, flag);\r        }\r      }]\r    );\r\r    // BUBBLES <-> BUBBLES\r    checks.push([\r      groups.BUBBLES,\r      groups.BUBBLES,\r      (bubbleA, bubbleB) => {\r        if (!bubbleA.locked && bubbleB.locked) {\r          Physics.bounce(bubbleA.target, bubbleB);\r        } else\r        if (!bubbleB.locked && bubbleA.locked) {\r          Physics.bounce(bubbleB.target, bubbleA);\r        }\r      }]\r    );\r\r  }\r\r  setupReferenceGroups() {\r    var refGroups = {};\r\r    refGroups.enemyBlocks = new Set();\r    refGroups.enemySubs = new Set();\r\r    refGroups.animate = new Set();\r\r    // this.collisionGroups = groups;\r    this.refGroups = refGroups;\r  }\r\r  setupLoop() {\r    var FPS = n => 1000 / n;\r    window.getAnimationFrame =\r      window.requestAnimationFrame ||\r      window.webkitRequestAnimationFrame ||\r      window.mozRequestAnimationFrame ||\r      window.oRequestAnimationFrame ||\r      window.msRequestAnimationFrame ||\r      function (callback) {\r        window.setTimeout(callback, FPS(60))\r      };\r\r    this.setupDT();\r  }\r\r  setupDT() {\r    this.last_time = (new Date()).getTime();\r\r    // the variable percentage of a second that has gone by since the last frame\r    // usually expressed: 0.016 when running 60 fps\r    this.dt = 0;\r  }\r\r  updateDT() {\r    let now = (new Date()).getTime();\r    this.dt = (now - this.last_time) / 1000;\r    this.last_time = now;\r  }\r\r  setupReferences() {\r    this.setupShortcutsToCommonCalls();\r    this.setupFinishCollisionAssignment();\r    this.setupGraphicsCaches();\r  }\r\r  setupShortcutsToCommonCalls() {\r    if (!this.spectate) {\r      // model references\r      this.enemyTeams = this.teams.filter(team => team.number != this.ships.main.owner.team.number);\r      this.enemyPlayers = this.enemyTeams.reduce((list, team) => list.concat(team.players), []);\r\r      this.player = this.ships.main.owner;\r      this.team = this.player.team;\r    }\r  }\r\r  setupFinishCollisionAssignment() {\r    /*\r     this method is run near end of the setup since things like ships and players\r     and teams and everything else is assigned and references can be made to the\r     local players team and such..\r     */\r\r    // spawn camps\r    this.teams.forEach(team => {\r      let spawn_c = team.spawn_camp;\r      spawn_c.collision_groups = [this.physics.collision_groups.SPAWN_CAMPS, this.physics.collision_groups.REFUGE] // TODO COLLISION OR PHYSICS CLASS PROTOCOLS\r      if (team == this.team) {\r        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_SPAWN_CAMP);\r        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_REFUGE);\r      } else {\r        spawn_c.collision_groups.push(this.physics.collision_groups.ENEMY_SPAWN_CAMPS);\r      }\r      this.setCollisionDivisions(spawn_c);\r    });\r\r    // ships\r    this.ships.forEach(ship => {\r      ship.collision_groups = [this.physics.collision_groups.SHIPS];\r      if (ship == this.ships.main) ship.collision_groups.push(this.physics.collision_groups.OUR_SHIP);\r      ship.collision_groups.push((ship.owner.team == this.team) ? this.physics.collision_groups.OUR_SHIPS : this.physics.collision_groups.ENEMY_SHIPS)\r    });\r\r    // bubbles\r    this.ships.forEach(ship => {\r      const bubble = ship.bubble;\r      bubble.collision_groups = [this.physics.collision_groups.REFUGE, this.physics.collision_groups.BUBBLES];\r      if (ship.owner.team === this.team) {\r        bubble.collision_groups.push(this.physics.collision_groups.OUR_BUBBLES);\r      } else {\r        bubble.collision_groups.push(this.physics.collision_groups.ENEMY_BUBBLES);\r      }\r      if(this.player.ship === ship) {\r        bubble.collision_groups.push(this.physics.collision_groups.MY_BUBBLE);\r        ship.bubbleCore.collision_groups = [this.physics.collision_groups.MY_BUBBLE_CORE];\r      }\r    });\r  }\r\r  setupGraphicsCaches() {\r    // TODO: deinit graphics caches\r\r    // cache background\r    // this.view.layer.background.cache(0, 0, this.mapInfo.width, this.mapInfo.height);\r\r    // create single cache for common objects\r    this.setupCommonGraphicsCachePool();\r  }\r\r\r  setupCommonGraphicsCachePool() {\r    let gc = DeepSpaceGame.graphicsCaches = {};\r\r    // bullets\r    gc.bullets = [];\r    this.teams.forEach(team => {\r\r      // always caching the largest version\r      let radius = Bullet.stats.MAX_RADIUS;\r\r      let v = new createjs.Shape(\r        DeepSpaceGame.graphics.block_fill(this.teams[team.number].color, radius)\r      );\r\r      var s = radius * 1.2;\r      let c = new createjs.Container();\r      v.alpha = 0.5;\r      c.addChild(v);\r      c.cache(-s, -s, s * 2, s * 2);\r      // v.cache(-s, -s, s * 2, s * 2);\r\r      gc.bullets[team.number] = c.cacheCanvas;\r    });\r\r    // blocks\r    gc.blocks = {\r      unlocked: [],\r      locked: [],\r      enemy: []\r    };\r    this.teams.forEach(team => {\r\r      // always caching the largest version\r      let radius = Block.stats.MAX_RADIUS;\r\r\r      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(this.teams[team.number].color, radius)),\r        border = new createjs.Shape(DeepSpaceGame.graphics.block_border(this.teams[team.number].color, radius));\r\r      var s = radius * 1.2;\r      let c;\r\r      // enemy\r      c = new createjs.Container();\r      fill.alpha = 0.24;\r      c.addChild(fill);\r      c.cache(-s, -s, s * 2, s * 2);\r      gc.blocks.enemy[team.number] = c.cacheCanvas;\r\r      // unlocked\r      // fill.alpha = 0.16;\r      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius))\r      c = new createjs.Container();\r      c.addChild(fill);\r      c.cache(-s, -s, s * 2, s * 2);\r      gc.blocks.unlocked[team.number] = c.cacheCanvas;\r\r      // locked\r      // fill.alpha = 1;\r      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#455A64', 40), radius))\r      c = new createjs.Container();\r      c.addChild(fill);\r      // c.addChild(border);\r      c.cache(-s, -s, s * 2, s * 2);\r      gc.blocks.locked[team.number] = c.cacheCanvas;\r    });\r\r    // minimap\r    if (this.spectate) return; // TODO make minimap accesible to all even spectators\r    gc.minimap = {blocks: []};\r    this.teams.forEach(team => {\r      // '#37474F'\r      let radius = Block.stats.MAX_RADIUS * this.view.overlay.minimap.scale;\r\r      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius));\r\r      var s = radius * 1.2;\r      // fill.alpha = 0.16;\r      fill.cache(-s, -s, s * 2, s * 2);\r      gc.minimap.blocks[team.number] = fill.cacheCanvas;\r    });\r    // (()=>{\r    //   let radius = 128 * this.view.overlay.minimap.scale;\r    //\r    //   let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(, radius));\r    //\r    //   var s = radius * 1.2;\r    //   // fill.alpha = 0.16;\r    //   fill.cache(-s, -s, s*2, s*2);\r    //   gc.minimap.blocks[team.number] = fill.cacheCanvas;\r    //\r    //   gc.minimap.impermeables = ;\r    // })\r  }\r\r  actualize() {\r    // bring an outside game up to speed\r    // DEPRECIATED :: .. no client can join match after start\r\r    // scores\r    // this.setupData.state.scores.forEach((entry) => {\r    //   this.game.scores[entry.t] = entry.s\r    // });\r    this.setupData.teams.forEach((team, i) => {\r      this.game.scores[i] = 100\r    });\r\r    // flag\r    // var holder;\r    // setTimeout(() => {\r    //   if (holder = this.setupData.state.flagHolder) this.pickupFlag(holder);\r    // }, 100);\r\r    // disconnects\r    // this.setupData.disconnects.forEach(id => this.disconnectPlayer(id))\r\r  }\r\r\r  loop() {\r    // stats.begin();\r    this.updateDT();\r    this.update();\r    this.log();\r    // stats.end();\r\r    // NetworkHelper.release();\r\r    getAnimationFrame(() => this.game.ended ? true : this.loop())\r  }\r\r  update() {\r    // this function duty is as follows:\r    // to update all the moving parts pertaining to the current/local user.\r    // any collisions should be sent back to the server to sync the changes.\r    var over = this.game.disabled;\r    if (!over) this.updateInput();\r    this.updateModel(); // TODO: improve performance\r    if (!over) this.checkForCollisions();\r    // if(this.isHost) this.generateMapEntities();\r\r    if (!over) this.updateGame();\r\r    this.updateView();\r  }\r\r  updateInput() {\r    // if(!this.spectate) this.updateGamepadInput();\r    if(!this.spectate) if(this.input.updateMotion) this.input.updateMotion();\r  }\r\r  // updateGamepadInput() {}\r\r  updateModel() {\r    this.updateShips();\r    this.broadcastShip();\r\r    this.updateBullets();\r    this.updateBlocks();\r    this.updateSubs();\r    this.updateBubble();\r  }\r\r  updateShips() {\r    for (var ship of this.ships) {\r\r      ship.update(this.dt);\r\r      if (ship == this.ships.main && !ship.disabled) {\r\r        const input = this.input;\r\r        // new abstraction\r        ship.acceleration = ship.LINEAR_ACCELERATION_LIMIT * input.acceleration;\r        ship.angular_acceleration = ship.ANGULAR_ACCELERATION_LIMIT * input.angularAcceleration;\r        ship.relative_shoot_angle = input.shootAngle;\r        if(input.angularVelocity !== null)\r          ship.angular_velocity = ship.ANGULAR_VELOCITY_LIMIT_MIN * input.angularVelocity;\r\r        if(input.shoot) {\r          if(ship.bubble.locked) {\r            if(ship.canShoot())\r              this.addBullet(ship);\r          } else {\r            ship.bubble.locked = true;\r          }\r        }\r\r\r        if(input.block) {\r          if(ship.canBlock()) {\r            while(ship.reachedBlockLimit) this.removeBlock(ship.oldestBlockID())\r            this.addBlock(ship)\r          }\r        }\r        if(input.sub) {\r          if(ship.flag) {\r            this.releaseFlag()\r          } else {\r            if(ship.canSub())\r              this.addSub(ship);\r          }\r        }\r\r\r\r\r        // var input = ship.owner.input,\r        //   x = 0, y = 0, x2 = 0, y2 = 0,\r        //   s = false;\r        //\r        // for (var prop of input) {\r        //   switch (prop) {\r        //     case 'up':\r        //       y = 1;\r        //       // y = -1;\r        //       break;\r        //     case 'dn':\r        //       y = -1;\r        //       // y = 1;\r        //       break;\r        //     case 'lt':\r        //       x = -1;\r        //       break;\r        //     case 'rt':\r        //       x = 1;\r        //       break;\r        //     case 'up2':\r        //       y2 = -1;\r        //       break;\r        //     case 'dn2':\r        //       y2 = 1;\r        //       break;\r        //     case 'lt2':\r        //       x2 = -1;\r        //       break;\r        //     case 'rt2':\r        //       x2 = 1;\r        //       break;\r        //     case 'sub':\r        //       // if(!ship.flag) ship.sub();\r        //       if(ship.flag) {\r        //         this.releaseFlag()\r        //       } else {\r        //         if(ship.canSub())\r        //           this.addSub(ship);\r        //       }\r        //       break;\r        //     case 'block':\r        //       if(ship.canBlock()) {\r        //         while(ship.reachedBlockLimit) this.removeBlock(ship.oldestBlockID())\r        //         this.addBlock(ship)\r        //       }\r        //       break;\r        //     case 'shoot':\r        //       s = true;\r        //       break;\r        //   }\r        // }\r        //\r        // // ship.acceleration.set({x, y})\r        // // if (ship.acceleration.length) ship.acceleration.length = ship.LINEAR_ACCELERATION_LIMIT;\r        // //\r        // // // if(ship.acceleration.length) ship.angle = ship.acceleration.angle\r        // // if (ship.velocity.length) ship.angle = ship.velocity.angle;\r        //\r        // var direction_v = new V2D(x2, y2)\r        // ship.relative_shoot_angle = direction_v.length ? direction_v.angle + (Math.PI/2) : 0;\r        //\r        //\r        // // new ship controls\r        // ship.acceleration = ship.LINEAR_ACCELERATION_LIMIT * y;\r        // ship.angular_acceleration = ship.ANGULAR_ACCELERATION_LIMIT * x;\r        //\r        //\r        // // if(direction_v.length) ship.shoot();\r        //\r        //\r        // if (s || direction_v.length)\r        //   if (ship.canShoot())\r        //     this.addBullet(ship);\r      }\r\r      // validate new position TODO (revise)\r      let r = ship.radius + 8;\r      if (ship.position.x - r < 0) {\r        ship.position.x = r;\r        ship.velocity.x = 0\r      }\r      if (ship.position.y - r < 0) {\r        ship.position.y = r;\r        ship.velocity.y = 0\r      }\r      if (ship.position.x + r > this.mapInfo.width) {\r        ship.position.x = this.mapInfo.width - r;\r        ship.velocity.x = 0;\r      }\r      if (ship.position.y + r > this.mapInfo.height) {\r        ship.position.y = this.mapInfo.height - r;\r        ship.velocity.y = 0;\r      }\r\r      this.setCollisionDivisions(ship);\r\r      // if(ship.position.x < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.height))\r      // if(ship.position.y < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.width))\r      // if(ship.position.x > this.mapInfo.width) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.height))\r      // if(ship.position.y > this.mapInfo.height) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.width))\r\r      // if(ship.position.x < 0) ship.position.x = this.mapInfo.width;\r      // if(ship.position.y < 0) ship.position.y = this.mapInfo.height;\r      // if(ship.position.x > this.mapInfo.width) ship.position.x = 0;\r      // if(ship.position.y > this.mapInfo.height) ship.position.y = 0;\r    }\r  }\r\r  broadcastShip() {\r    var ship, input;\r    if ((ship = this.ships.main) && (input = this.input)) {\r      if (input.changed) {\r        // log(Array.from(input));\r        // NetworkHelper.out_input_stack(Array.from(input));\r        input.changed = false;\r      }\r\r      this.network.sendShipUpdate(ship.export_update());\r\r      if ((new Date()).getTime() % 60 < 2) this.network.sendShipOverride(ship.export_override());\r      if (ship.flag && ship.disabled) this.releaseFlag();\r      // if(ship.flag && ship.disabled && !this.game.flag.idle) NetworkHelper.out_flag_drop();\r    }\r  }\r\r  updateBullets() {\r    this.model.bullets.forEach(b => {\r      b.update(this.dt);\r      this.setCollisionDivisions(b)\r    });\r    // this.model.bullets.forEach(b => { b.update(); if(b.disabled) NetworkHelper.out_bullet_destroy(b.id) });\r  }\r\r  updateBlocks() { // needs needs work\r    this.model.blocks.forEach(b => {\r      if (b.locked) return;\r      if (b.qualified) {\r        this.snapToGrid(b.position);\r        b.scale = 1;\r        this.setCollisionDivisions(b);\r        if (!this.spectate) this.createOverlayMinimapBlockViewFor(b);\r        if (!this.spectate) if (b.team != this.team.number) this.refGroups.enemyBlocks.add(b); // TODO REVISE AFTER NEW COLLISION SYSTEM!!\r        b.locked = true;\r        b.qualified = false;\r      }\r      b.update(this.dt);\r      // if(b.disabled) NetworkHelper.out_block_destroy(b.id) // due to aging\r    });\r  }\r\r  updateSubs() {\r    this.model.subs.forEach(p => {\r      p.update(this.dt);\r      if (p.collision_groups) this.setCollisionDivisions(p);\r\r      switch (p.type) {\r        case 'attractor':\r        case 'repulsor':\r\r          // field effects TODO is games responsibility..? dt is passed to subs themseves..\r          var distance, direction;\r          this.model.bullets.forEach((b) => {\r            if (!b.disabled && p.team != b.team) {\r              if ((distance = Physics.distance(b.position, p.position)) < p.RANGE) {\r                var force = new V2D();\r                direction = p.position.copy();\r                direction.sub(b.position);\r                force.length = p.INTENSITY_FUNCTION(distance);\r                force.angle = direction.angle;\r                if (p.type == 'repulsor') force.angle = force.angle - Math.PI;\r                b.velocity.add(force);\r                b.velocity.length *= 0.94; // friction TODO\r              }\r            }\r          });\r\r          break;\r        case 'block_bomb':\r\r\r          if (p.exploding) {\r\r            // only the player who created it hands out damage to the blocks so it is done once\r            let ship;\r            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\r              let distance;\r              this.teams.forEach(team => {\r                if(this.team === team) return;\r                team.players.forEach(player => {\r                  const bubble = player.ship.bubble;\r                  if(player.disconnected || !bubble.locked) return;\r                  if ((distance = Physics.distance(bubble.position, p.position)) < p.EXPLOSION_RANGE) {\r                    this.damageBubble(bubble.target.owner.id, p.EXPLOSION_DAMAGE_FUNCTION(distance));\r                  }\r                })\r              });\r            }\r\r            // the player is the only one who must wait, the others have been notified to endSub\r            this.removeSub(p.id);\r          }\r\r          break;\r        case 'stealth_cloak':\r          if(p.disabled) ENV.game.destroySub(p.id);\r          break;\r        case 'missile':\r\r          // targeting\r          if (p.target && (Physics.distance(p.target.position, p.position) > p.VISION_RANGE || p.target.stealth)) p.target = null;\r          this.ships.forEach(ship => {\r            if (ship && !ship.disabled && !ship.stealth && ship.owner.team.number != p.team) {\r              if (!p.target && ((distance = Physics.distance(ship.position, p.position)) < p.VISION_RANGE)) {\r                p.target = ship;\r              }\r            }\r          });\r\r          // exploding\r          if (p.exploding) {\r\r            // only the player who created it hands out damage to the blocks so it is done once\r            var ship;\r            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\r              var distance;\r              this.refGroups.enemyBlocks.forEach(block => {\r                if (block && !block.disabled) {\r                  if ((distance = Physics.distance(block.position, p.position) - block.radius) < p.EXPLOSION_RANGE) {\r                    this.changeBlock(block.id, ship.owner.team.number)\r                    if(!this.spectate) this.ships.main.blocks.add(block.id);\r                  }\r                }\r              });\r            }\r\r            // the player is the only one who must wait, the others have been notified to endSub\r            this.removeSub(p.id);\r          }\r\r          break;\r        default:\r          break;\r      }\r\r\r    });\r\r  }\r\r  updateBubble() {\r    this.ships.forEach(ship => {\r      ship.bubble.update(this.dt);\r      this.setCollisionDivisions(ship.bubble);\r      if(ship === this.player.ship) this.setCollisionDivisions(ship.bubbleCore);\r    });\r  }\r\r  checkForCollisions() {\r    // in theory, the user will only check\r    // collisions of those things which it\r    // created. though in practice, perhaps\r    // just it's attack moves. e.g. bullets\r\r    for (let div of this.physics.divisions) {\r      for (var [a_type, b_type, check] of this.physics.collision_checks)\r        for (let body_a of div[a_type])\r          for (let body_b of div[b_type])\r            if (Physics.doTouch(body_a, body_b))\r              check(body_a, body_b);\r    }\r\r  }\r\r  updateGame() {\r    switch(this.gameMode) {\r\r      case 0: // ctf\r\r        const flag = this.game.flag;\r        if (!flag.idle) {\r          const player = this.players.get(flag.holderID),\r                p = player.ship.last_known_position,\r                camp = player.team.spawn_camp;\r          flag.position.x = p.x;\r          flag.position.y = p.y;\r\r          this.setCollisionDivisions(flag);\r\r          // real game stuff\r          const activePlayers = player.team.players.filter(player => !player.disconnected);\r          let teamProgresses = activePlayers.map(player => player.ship.bubble.progress);\r          let percent = _.reduce(teamProgresses, (memo, num) => memo + num, 0) / player.team.players.length;\r          let high_score = this.game.scores[player.team.number];\r          let current_score = Math.round(percent * 100);\r\r          if (current_score > high_score && current_score <= 100)\r            this.game.scores[player.team.number] = current_score;\r\r          if ((percent >= 1) && player === this.player)\r            this.network.sendFlagProgress([player.team.number, current_score]);\r\r\r\r          // LEAD COMPARISON\r          // replace lead if none exists\r          if (!this.game.lead) this.game.lead = player.team;\r\r          // replace lead if record shows\r          if (current_score > this.game.scores[this.game.lead.number]) {\r\r            if (!this.spectate) {\r              // if you are replacing\r              if (player.team == this.team) {\r                let c = this.team.color;\r                this.alert(\r                  DeepSpaceGame.localizationStrings.alerts['teamTakesLead'][this.language]()\r                  , c);\r                this.network.sendFlagProgress([player.team.number, current_score])\r                // if (this.game.overtime) this.network.out_game_over(this.team.number);\r              }\r              // if you are being replaced\r              else if (this.game.lead == this.team) {\r                let c = player.team.color;\r                this.alert(\r                  DeepSpaceGame.localizationStrings.alerts['teamLosesLead'][this.language]()\r                  , c);\r              }\r            }\r\r            this.game.lead = player.team;\r          }\r\r\r        }\r\r        break;\r\r      case 1: // Territorial\r\r\r\r        break;\r\r      case 2: // Bubble Match or.. Survival?? idk\r\r        /*var flag = this.game.flag;\r        if (!flag.idle) {\r          var player = this.players.get(flag.holderID),\r            p = player.ship.last_known_position,\r            camp = player.team.spawn_camp;\r          flag.position.x = p.x;\r          flag.position.y = p.y;\r\r          this.setCollisionDivisions(flag);\r\r          // real game stuff\r          var distance = Physics.distance(p, camp.position) - camp.radius,\r            percent = distance / this.game.max,\r            low_score = this.game.scores[player.team.number],\r            current_score = Math.round(percent * 100);\r\r          if (current_score < low_score && current_score >= 0) this.game.scores[player.team.number] = current_score;\r\r          if ((percent < 0) && player == this.player) this.network.sendFlagProgress([player.team.number, current_score])\r          // this.network.out_game_over(player.team.number);\r\r\r          // LEAD COMPARISON\r          // replace lead if none exists\r          if (!this.game.lead) this.game.lead = player.team;\r\r          // replace lead if record shows\r          if (current_score < this.game.scores[this.game.lead.number]) {\r\r            if (!this.spectate) {\r              // if you are replacing\r              if (player.team == this.team) {\r                let c = this.team.color;\r                this.alert(\r                  DeepSpaceGame.localizationStrings.alerts['teamTakesLead'][this.language]()\r                  , c);\r                this.network.sendFlagProgress([player.team.number, current_score])\r                // if (this.game.overtime) this.network.out_game_over(this.team.number);\r              }\r              // if you are being replaced\r              else if (this.game.lead == this.team) {\r                let c = player.team.color;\r                this.alert(\r                  DeepSpaceGame.localizationStrings.alerts['teamLosesLead'][this.language]()\r                  , c);\r              }\r            }\r\r            this.game.lead = player.team;\r          }\r\r        }*/\r\r        break;\r\r    } // end switch\r\r\r  }\r\r  updateView() {\r    this.updateShipViews();\r    this.updateBubbleViews();\r    this.updateBulletViews();\r    this.updateBlockViews();\r    this.updateSubViews();\r\r    this.updateCamera();\r    this.updateBackground();\r    this.updateMap();\r    // this.updateTINT();\r    // this.updateGrid();\r\r    this.updateGameViews();\r\r    if (!this.spectate) this.updateMinimapView();\r\r    this.updateProton();\r\r    this.stage.update(); // render changes!!\r  }\r\r  updateShipViews() {\r    this.ships.forEach((ship) => {\r\r      const isVisible = ( ship.view.visible = this.camera.showing(ship) );\r      const shipIsVisible = ( ship.view.visible = this.camera.showing(ship) );\r\r      if (ship.view.visible = this.camera.showing(ship) || ship.view == this.camera.focus) {\r\r        let visibility = 1;\r        if(ship.disabled) {\r          visibility = 0;\r        } else {\r          if(this.game.flag && this.game.flag.holderID === ship.owner.id) {\r            visibility = 1;\r          } else {\r            // if(ship.owner.team != this.team && ship.charging) {\r            //   visibility = 0;\r            // } else\r            if(ship.stealth) {\r              if (ship.owner.team == this.team) {\r                visibility = Math.flipCoin(0.2) ? 0 : 0.4;\r              } else {\r                visibility = 0;\r              }\r            }\r          }\r        }\r\r        let ship_view = ship.view.ship;\r        ship_view.alpha = ship.health * visibility;\r        ship_view.rotation = Math.degrees(ship.angle);\r\r        ship.view.x = ship.position.x;\r        ship.view.y = ship.position.y;\r\r        // ship.view.graphics.clear();\r        ship_view.image = ((ship.flag) ? ship_view.filled : ship_view.hollow);\r      }\r\r    });\r    this.updateEnergyMeterView();\r    this.updateNameViews();\r  }\r\r  updateEnergyMeterView() {\r    if (this.spectate) return;\r\r    let ship = this.player.ship,\r      meterView = ship.view.meter,\r      shadowView = meterView.shadow,\r      percent = ship.energy / 100,\r      offset = V2D.new({angle: ship.angle + (Math.PI/4), length: 42}),\r      color = ship.charging ? this.team.color : '#90A4AE';\r    meterView.graphics = DeepSpaceGame.graphics.energyMeter(color, percent);\r    meterView.alpha = shadowView.alpha = ship.disabled ? 0 : 1;\r    meterView.x = shadowView.x = offset.x;\r    meterView.y = shadowView.y = offset.y;\r    meterView.rotation = shadowView.rotation = Math.degrees(ship.angle + Math.PI/2);\r\r    meterView.updateCache();\r\r    // const { colorBar, chargeBar } = this.view.overlay.energyMeter;\r    // colorBar.scaleX = chargeBar.scaleX = percent;\r    // colorBar.visible = !ship.charging;\r\r  }\r\r  updateNameViews() {\r    if (this.spectate) return;\r\r    let our_ship = this.ships.main, our_team;\r    if (our_ship) our_team = our_ship.owner.team;\r\r    this.ships.forEach((ship) => {\r      if (ship.owner.team == our_team && ship != our_ship) {\r        let textView = ship.view.text,\r            offset = V2D.new({angle: our_ship.angle, length: 30});\r        textView.x = offset.x\r        textView.y = offset.y\r        textView.rotation = Math.degrees(our_ship.angle + Math.PI/2)\r      }\r    });\r\r  }\r\r  updateBubbleViews() {\r    let our_ship = this.ships.main, our_team;\r    if (our_ship) our_team = our_ship.owner.team;\r\r    this.ships.forEach((ship) => {\r\r      const bubble = ship.bubble;\r      const bubbleViews = this.view.bubbles.get(ship);\r      const { container } = bubbleViews;\r\r      if(ship.owner.disconnected) {\r        container.visible = false;\r        return;\r      }\r\r      const {\r        handle,\r        fullRange,\r        growingCircle,\r        growingCircleEdge,\r      } = bubbleViews;\r\r      const bubbleVisible = ( container.visible = this.camera.showing(bubble) );\r\r      // should this be added to the if ?  >>  ( || ship.view === this.camera.focus )\r      if (bubbleVisible) {\r\r        if(bubble.disabled) {\r          container.alpha = 0;\r        } else {\r          container.alpha = 1;\r\r          if(bubble.locked) {\r            growingCircleEdge.alpha = 1;\r            growingCircle.alpha = +!bubble.complete;\r            fullRange.alpha = +!bubble.complete;\r          } else {\r            growingCircle.alpha = 0;\r            fullRange.alpha = 0;\r            if(ship === our_ship)\r              growingCircleEdge.alpha = 1;\r            else\r              growingCircleEdge.alpha = 0.3;\r          }\r\r        }\r\r      }\r\r      container.x = bubble.position.x;\r      container.y = bubble.position.y;\r\r      growingCircleEdge.scaleX = growingCircle.scaleX =\r        growingCircleEdge.scaleY = growingCircle.scaleY =\r          ( bubble.radius / bubble.OUTER_RADIUS );\r\r      if(handle) handle.visible = !ship.bubbleCore.disabled;\r\r    });\r  }\r\r  updateBulletViews() {\r    var views = this.view.bullets;\r    this.model.bullets.forEach(b => {\r      let v = views.get(b.id);\r      if(this.camera.showing(b)) {\r        if(!v) v = this.createBulletView(b)\r        v.x = b.position.x;\r        v.y = b.position.y;\r      } else {\r        if(v) this.destroyBulletView(b.id);\r      }\r    });\r  }\r\r  updateBlockViews() {\r    var views = this.view.blocks;\r    this.model.blocks.forEach(b => {\r      var v = views.get(b.id);\r\r      if(this.camera.showing(b)) {\r        if(!v) v = this.createBlockView(b)\r        v.alpha = (b.health * 0.9 + 0.1);\r        v.x = b.position.x;\r        v.y = b.position.y;\r        v.scaleX = v.scaleY = (b.radius / Block.stats.MAX_RADIUS) * b.scale;\r        if (b.qualified) {\r          let type = b.isForeign ? 'enemy' : 'locked';\r          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\r        }\r      } else {\r        if(v) this.destroyBlockView(b.id);\r      }\r\r    });\r  }\r\r  updateSubViews() {\r    var views = this.view.subs;\r    this.model.subs.forEach(s => {\r      var v = views.get(s.id);\r      if (v && (v.visible = this.camera.showing(s))) {\r        v.x = s.position.x;\r        v.y = s.position.y;\r        v.rotation = Math.degrees(s.rotation);\r      }\r    });\r  }\r\r  updateCamera() {\r    this.camera.update();\r    // if(camera.position)\r  }\r\r  updateBackground() {\r    \r    const background = this.view.layer.background.map_background;\r    const map_width = this.mapInfo.width;\r    const map_height = this.mapInfo.height;\r    const half_window_width = this.window.width/2;\r    const half_window_height = this.window.height/2;\r    const half_background_width = background.cacheCanvas.width / 2;\r    const half_background_height = background.cacheCanvas.height / 2;\r    let backgroundPositionVector = V2D.new(this.camera.focus);\r    const centerOffset = V2D.new({x: this.camera.offset.x - half_window_width, y: this.camera.offset.y - half_window_height});\r\r    centerOffset.div(this.scale)\r    centerOffset.angle = Math.radians(this.camera.focus.ship.rotation);\r    backgroundPositionVector.add(centerOffset);\r\r    // edges\r    if (backgroundPositionVector.x < half_background_width) backgroundPositionVector.x = half_background_width;\r    if (backgroundPositionVector.y < half_background_height) backgroundPositionVector.y = half_background_height;\r\r\r    if (backgroundPositionVector.x > map_width - half_background_width) backgroundPositionVector.x = map_width - half_background_width;\r    if (backgroundPositionVector.y > map_height - half_background_height) backgroundPositionVector.y = map_height - half_background_height;\r\r\r    background.x = backgroundPositionVector.x;\r    background.y = backgroundPositionVector.y;\r\r    background.rotation = - 90;\r\r\r\r\r    // let background = this.view.layer.background.map_background,\r    //     full_map_width = this.mapInfo.width,\r    //     full_map_height = this.mapInfo.height,\r    //     {x, y} = this.camera.focus,\r    //     half_window_width = this.window.width/2,\r    //     half_window_height = this.window.height/2;\r    //\r    // if(x < half_window_width) background.x = half_window_width - x;\r    // if(x > (full_map_width - half_window_width)) background.x = full_map_width - half_window_width - x;\r    //\r    // if(y < half_window_height) background.y = half_window_height - y;\r    // if(y > (full_map_height - half_window_height)) background.y = full_map_height - half_window_height - y;\r  }\r\r  updateMap() {\r    this.teams.forEach(team => {\r      team.spawn_camp.view.visible = this.camera.showing(team.spawn_camp);\r    })\r\r    this.model.map.impermeables.forEach((imp, i) => {\r      this.view.map.impermeables[i].visible = this.camera.showing(imp);\r    });\r\r  }\r\r  updateTINT() {\r    try {\r      if (TINT) TINT.setAngleOffset(-this.camera.focus.ship.rotation)\r    } catch (e) {\r      log('tint load failed')\r    }\r  }\r\r  updateGrid() {\r    var focus = this.camera.focus;\r    if (focus) GRID.offset(-focus.x, -focus.y)\r  }\r\r  updateGameViews() {\r\r    const list = this.calculateTeamScoreAppearance();\r\r    this.view.overlay.score.team.forEach((text, i) => {\r      text.text = this.game.scores[i];\r      // text.scaleX = text.scaleY = (this.teams[i] == this.game.lead ? 1 : 0.86);\r\r      if(this.gameMode == 0) // todo FIX --     export logic to another function to know which is larger\r        text.scaleX = text.scaleY = (list[i] ? 1 : 0.86);\r\r      text.updateCache();\r    })\r\r    if(this.gameMode == 0)\r      this.updateFlagView();\r\r  }\r\r  calculateTeamScoreAppearance() {\r\r    const list = [];\r\r    switch(this.gameMode) {\r\r      case 0: // ctf\r\r        for(let team of this.teams)\r          list.push(team.players.map(p => p.id).indexOf(this.game.flag.holderID) != -1)\r\r        break;\r\r      case 1: // territory\r\r        const bestScore = _(this.game.scores).max();\r        _(this.game.scores).each(score => list.push(score == bestScore))\r\r        break;\r\r    }\r\r    return list;\r  }\r\r  updateFlagView() {\r    var v = this.view.flag, flag = this.game.flag;\r\r    var not_visible = false;\r    let newPosition = new V2D(flag.position.x - this.camera.plane.regX, flag.position.y - this.camera.plane.regY)\r    newPosition.angle -= Math.radians(this.camera.focus.ship.rotation + 90)\r    newPosition.mul(this.scale)\r    newPosition.add({x: this.camera.plane.x, y: this.camera.plane.y})\r    v.x = newPosition.x;\r    v.y = newPosition.y;\r    var padding = (flag.radius * 2)\r    if (v.x < padding) {\r      v.x = padding;\r      not_visible = true;\r    }\r    if (v.x > this.window.width - padding) {\r      v.x = this.window.width - padding;\r      not_visible = true;\r    }\r    if (v.y < padding) {\r      v.y = padding;\r      not_visible = true;\r    }\r    if (v.y > this.window.height - padding) {\r      v.y = this.window.height - padding;\r      not_visible = true;\r    }\r\r    v.alpha = not_visible ? 0.3 : (flag.idle ? 1 : 0);\r\r\r    // var v = this.view.flag, flag = this.game.flag;\r    //\r    // var not_visible = false;\r    // v.x = flag.position.x + this.camera.plane.x;\r    // v.y = flag.position.y + this.camera.plane.y;\r    // var padding = (flag.radius * 2)\r    // if(v.x < padding) { v.x = padding; not_visible = true; }\r    // if(v.x > this.window.width - padding) { v.x = this.window.width - padding; not_visible = true; }\r    // if(v.y < padding) { v.y = padding; not_visible = true; }\r    // if(v.y > this.window.height - padding) { v.y = this.window.height - padding; not_visible = true; }\r    //\r    // v.alpha = not_visible ? 0.1 : (flag.idle ? 1 : 0);\r  }\r\r  updateMinimapView() {\r    let mini = this.view.overlay.minimap;\r\r    // ships\r    this.team.players.forEach((player, i) => {\r      mini.players[i].x = player.ship.position.x * mini.relativeScale;\r      mini.players[i].y = player.ship.position.y * mini.relativeScale;\r    })\r\r\r    // flag\r    if(this.gameMode == 0) {\r      let flag = this.game.flag;\r      mini.flag.x = flag.position.x * mini.relativeScale;\r      mini.flag.y = flag.position.y * mini.relativeScale;\r    }\r\r\r    // bubbles\r    this.players.forEach((player, id) => {\r      const [container, fill] = mini.playerBubbles.get(id);\r      if(player.disconnected) {\r        container.visible = false;\r        return;\r      }\r      const bubble = player.ship.bubble;\r      const scale = bubble.radius / Bubble.stats.OUTER_RADIUS;\r      container.x = player.ship.bubble.position.x * mini.relativeScale;\r      container.y = player.ship.bubble.position.y * mini.relativeScale;\r      container.scaleX = container.scaleY = scale;\r\r      let alpha = 0.3;\r      if(!bubble.locked)\r        alpha = 0;\r      else if(bubble.growing)\r        alpha = 1;\r      fill.alpha = alpha;\r    });\r  }\r\r  updateCameraFocus() {\r    this.camera.focus = this.activePlayers[this.activePlayerIndex].ship.view;\r  }\r\r  updateProton() {\r\r    const timingFunction = BezierEasing(0.0, 0.0, 0.2, 1);\r    const slowest = 0.1; const fastest = 0.02;\r    const defaultMinAngle = 150; const defaultMaxAngle = 210;\r\r    for(const [ship, emitter] of this.view.proton.emitters) {\r\r      if(ship.disabled) {\r        if(!this.view.proton.util.hasInitializer(emitter, this.view.proton.imageTargets.death)) {\r          emitter.removeInitialize(this.view.proton.imageTargets.teams[ship.owner.team.number]);\r          emitter.addInitialize(this.view.proton.imageTargets.death);\r        }\r      } else {\r        if(!this.view.proton.util.hasInitializer(emitter, this.view.proton.imageTargets.teams[ship.owner.team.number])) {\r          emitter.removeInitialize(this.view.proton.imageTargets.death);\r          emitter.addInitialize(this.view.proton.imageTargets.teams[ship.owner.team.number]);\r        }\r      }\r\r      // update ship dependencies\r      const percent = ship.velocity.length /\r        (ship.LINEAR_VELOCITY_LIMIT + ship.LINEAR_VELOCITY_LIMIT_EXTENDED);\r      let amount = ship.disabled ? 3 : (percent < 0.2 ? 0 : 1);\r      const pos = ship.back_weapon_position;\r      const minAngle = ship.disabled ? 0 : defaultMinAngle;\r      const maxAngle = ship.disabled ? 360 : defaultMinAngle;\r\r      emitter.p.x = pos.x;\r      emitter.p.y = pos.y;\r      emitter.rotation = -Math.degrees(ship.angle) - 90;\r      emitter.rate.timePan.a =\r        emitter.rate.timePan.b =\r          slowest - ((slowest - fastest) * timingFunction(percent));\r      emitter.rate.numPan.a =\r        emitter.rate.numPan.b =\r          amount;\r      emitter.force.thaPan.a = minAngle;\r      emitter.force.thaPan.b = maxAngle;\r\r\r    }\r\r    // star emmiter update // TODO .. why starEmitter on this?\r    this.starEmitter.p.x = this.camera.focus.x;\r    this.starEmitter.p.y = this.camera.focus.y;\r    const flagHolder = this.players.get(this.game.flag.holderID);\r\r    const imageTargets = this.view.proton.imageTargets;\r    const starTarget = imageTargets.stars;\r\r    if(flagHolder) {\r      const teamStarTarget = imageTargets.starTeams.cache = imageTargets.starTeams[flagHolder.team.number];\r      if(!this.view.proton.util.hasInitializer(this.starEmitter, teamStarTarget)) {\r        this.starEmitter.removeInitialize(starTarget);\r        this.starEmitter.addInitialize(teamStarTarget);\r      }\r    } else {\r      if(!this.view.proton.util.hasInitializer(this.starEmitter, starTarget)) {\r        this.starEmitter.removeInitialize(imageTargets.starTeams.cache);\r        this.starEmitter.addInitialize(starTarget);\r      }\r    }\r\r\r    // refresh proton\r    this.view.proton.main.update();\r  }\r\r  log() {\r    // var input = this.ships.main.owner.input;\r    // var ship = this.ships.main;\r    // $('#log').text(`forward: ${input.get('forward')}, turn: ${input.get('turn')}, shoot: ${input.get('shoot')}, block: ${input.get('block')}, `)\r//     $('#log').text(\r// `    x: ${ship.position.x.round(2)}\r//     y: ${ship.position.y.round(2)}\r// angle: ${ship.angle.round(2)}`\r//     );\r\r    // FPS\r    // this.last = this.last || [];\r    // this.last.push(1/this.dt)\r    // if(this.last.length > 10) this.last.shift();\r    // $('#log').text(`fps ${Math.round(this.last.average())}`);\r  }\r\r\r  // end vs stop: end happens when the local game appears to conclude; interaction with the game is stopped\r  // and the state might even be obstructed from view though the simluation continues;\r\r  disableInteraction() {\r    this.game.disabled = true;\r    if (this.player) this.resetInput();\r    this.deinitListeners();\r    this.timer.cancel();\r  }\r\r  endSimulation() {\r    this.game.ended = true;\r    // SoundHelper.stop();\r  }\r\r  timerExpire() {\r\r    // let server know TODO this should not lie here like this..\r    switch(this.gameMode) {\r\r      case 0: // ctf\r\r        const team = this.player.team.number;\r        const score = this.game.scores[team];\r        this.network.sendFlagProgress([team, score]);\r\r        break;\r\r    }\r\r    // LOBBY.disableGame();\r\r    // disconnect if no server response after 6s\r    setTimeout(() => {\r      if (!(this.game.ended || this.game.overtime)) LOBBY.disconnect();\r    }, 6000);\r  }\r\r  takeOvertime() {\r    this.game.overtime = true;\r\r    // disconnect if no server response after 40s\r    setTimeout(() => {\r      if (!(this.game.ended)) LOBBY.disconnect();\r    }, TIME.sec(40)); // OVERTIME DURATION.. todo\r  }\r\r\r  end(results) {\r\r    // this.setScoreToResults(results);\r\r    this.game.ended = true;\r    this.disableInteraction();\r  }\r\r  setScoreToResults(results) {\r    // this.game.scores = results;\r  }\r\r  // *** NEW NETWORK STRUCTURE *** //\r\r  // ** SHIP ** //\r\r  damageShip(toID, hp, fromID) {\r\r    // interpret damage data\r    const data = [toID, hp, fromID];\r\r    // adjust locally (if possible)\r    this.adjustShipHP(data)\r\r    // send through network\r    this.network.sendAdjustShipHP(data);\r\r  }\r\r  adjustShipHP([toID, hp, fromID]) {\r\r    // health on a player can only be adjusted by own player\r    if(toID !== this.player.id) return;\r\r    // damage and send death if neccessary\r    if(this.player.ship.damage(hp))\r      this.processDeath([toID, fromID]);\r\r  }\r\r  processDeath(data) {\r\r    // announce locally\r    this.deathOccurrence(data)\r\r    // send through network\r    this.network.sendDeathOccurrence(data);\r\r  }\r\r  deathOccurrence([toID, fromID]) {\r\r    const t = this.players.get(toID)\r    const g = this.players.get(fromID);\r\r    if (t) t.score.deaths++;\r    if (g) g.score.kills++;\r\r    if (this.spectate) return;\r    if (toID == this.player.id) {\r      const player = this.players.get(fromID);\r      this.alert_kill(\r        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\r          player.name\r        )\r      );\r      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\r      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\r    } else if (fromID == this.player.id) {\r      this.alert_kill(\r        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\r          this.players.get(toID).name\r        )\r      );\r    }\r\r  }\r\r  // ** BUBBLES ** //\r\r  damageBubble(toID, hp, fromID) {\r\r    // interpret damage data\r    const data = [toID, hp, fromID];\r\r    // adjust locally (if possible)\r    this.adjustBubbleHP(data);\r\r    // send through network\r    this.network.sendAdjustBubbleHP(data);\r\r  }\r\r  adjustBubbleHP([toID, hp, fromID]) {\r\r    // health on a player can only be adjusted by own player\r    if(toID !== this.player.id) return;\r\r    // damage bubble\r    this.player.ship.bubble.damage(hp)\r\r  }\r\r  // ** PROJECTILES ** //\r\r  // * BULLETS * //\r\r  addBullet(ship) {\r    \r    // interpretation ship data for bullet creation\r    const data = this.generateBulletData(ship)\r\r    // actually create bullet object\r    this.createBullet(data)\r\r    // ditribute bullet creation data to other clients\r    this.network.sendCreateBullet(data)\r\r    // notify ship\r    ship.didShoot(data.id)\r\r  }\r\r  generateBulletData(ship) {\r\r    return ({\r      id: Math.uuid(),\r      creator: ship.owner.id,\r      team: ship.owner.team.number,\r      position: ship.shoot_position,\r      angle: ship.shoot_angle + ship.shot_RNG,\r      radius: ship.ATTACK_RADIUS,\r      hp: ship.ATTACK_HP,\r      lifespan: ship.ATTACK_LIFESPAN,\r      velocity: ship.velocity,\r      speed: ship.ATTACK_SPEED\r    });\r\r  }\r\r  createBullet(data) {\r\r    const b = new Bullet(data);\r\r    // set model map\r    this.model.bullets.set(b.id, b);\r\r    // collision groups\r    b.collision_groups = [this.physics.collision_groups.BULLETS];\r    b.collision_groups.push(this.teams[b.team] == this.team ? this.physics.collision_groups.OUR_BULLETS : this.physics.collision_groups.ENEMY_BULLETS);\r    if (!this.spectate && b.creator == this.player.id) b.collision_groups.push(this.physics.collision_groups.MY_BULLETS);\r\r  }\r\r  removeBullet(id) {\r\r    // remove local copy\r    this.destroyBullet(id)\r\r    // annouce bullet demise\r    this.network.sendDestroyBullet(id)\r\r  }\r\r  destroyBullet(id) {\r\r    var b = this.model.bullets.get(id);\r    if (!b) return;\r\r    this.clearCollisionDivisions(b);\r\r    this.model.bullets.delete(id);\r    if (!this.spectate) this.ships.main.bullets.delete(id);\r\r    // erase the view for it.\r    this.destroyBulletView(id);\r\r  }\r\r  // * BLOCKS * //\r\r  addBlock(ship) {\r\r    // interpretation ship data for block creation\r    const data = this.generateBlockData(ship)\r\r    // actually create block object\r    this.createBlock(data)\r\r    // ditribute bullet creation data to other clients\r    this.network.sendCreateBlock(data)\r\r    // notify ship\r    ship.didBlock(data.id)\r\r  }\r\r  generateBlockData(ship) {\r    return ({\r      id: Math.uuid(),\r      creator: ship.owner.id,\r      team: ship.owner.team.number,\r      position: ship.front_weapon_position,\r      angle: (ship.angle) + ((ship.BLOCK_SPREAD / 2) * ((Math.random()*2) - 1)),\r      hp: ship.BLOCK_HP_CAPACITY,\r      // radius: Math.randomIntMinMax(Block.stats.MIN_RADIUS, Block.stats.MAX_RADIUS)\r      radius: Block.stats.MAX_RADIUS,\r      speed: Math.randomIntMinMax(Block.stats.MIN_SPEED, Block.stats.MAX_SPEED)\r    });\r\r  }\r\r  createBlock(data) {\r\r    var bl = new Block(data);\r\r    // misc..?\r    bl.isForeign = this.spectate || bl.team != this.team.number;\r\r    // set model map\r    this.model.blocks.set(bl.id, bl);\r\r    // collision groups\r    bl.collision_groups = [this.physics.collision_groups.REFUGE]\r    if (this.teams[bl.team] != this.team) {\r      bl.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\r    } else {\r      bl.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\r      bl.collision_groups.push(this.physics.collision_groups.OUR_BLOCKS)\r    }\r\r    // notify game\r    if(this.gameMode == 1) this.game.scores[data.team]++;\r\r  }\r\r  damageBlock(id, hp) {\r\r    // interpret damage data\r    const data = [id, hp];\r\r    // adjust locally\r    this.adjustBlockHP(data)\r\r    // send through network\r    this.network.sendAdjustBlockHP(data);\r\r  }\r\r  adjustBlockHP([id, hp]) {\r    const block = ENV.game.model.blocks.get(id);\r    if(block) block.damage(hp);\r  }\r\r  changeBlock(id, team) {\r\r    // interpret change data\r    const data = [id, team];\r\r    // adjust locally\r    this.setBlockTeam(data)\r    \r    // send through network\r    this.network.sendSetBlockTeam(data);\r\r  }\r\r  setBlockTeam([id, team]) {\r    // retrieve and store block\r    var b = this.model.blocks.get(id);\r    if (!b) return false;\r\r    // begin change if locked\r    if (b.locked) {\r\r      // skip if change is unnecessary\r      if (b.team != team) {\r\r        const oldTeam = b.team;\r\r        // assign new team\r        b.team = team;\r\r        // if not spectating add or remove from ref group\r        if (!this.spectate) {\r          if (b.team != this.team.number) {\r            this.refGroups.enemyBlocks.add(b);\r          } else {\r            this.refGroups.enemyBlocks.delete(b);\r          }\r        }\r\r        //\r        if (!this.spectate) {\r\r          this.ships.main.blocks.delete(id);\r\r        }\r\r        // replace and delete old view\r        var v = this.view.blocks.get(id);\r        if (v) {\r          let type = this.refGroups.enemyBlocks.has(b) ? 'enemy' : (b.locked ? 'locked' : 'unlocked');\r          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\r          // v.updateCache();\r        }\r\r        // collision groups\r        this.clearCollisionDivisions(b);\r        b.collision_groups = [this.physics.collision_groups.REFUGE]\r        if (this.teams[b.team] != this.team) {\r          b.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\r        } else {\r          b.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\r        }\r        this.setCollisionDivisions(b);\r\r        // notify game\r        if(this.gameMode == 1) {\r          this.game.scores[oldTeam]--;\r          this.game.scores[team]++;\r        }\r\r        \r      } // end if(b.team != team)\r    } // end if(!b.locked)\r\r\r  }\r\r  removeBlock(id) {\r\r    // remove local copy\r    this.destroyBlock(id)\r\r    // annouce blocks demise\r    this.network.sendDestroyBlock(id)\r\r  }\r\r  destroyBlock(id) {\r    var b = this.model.blocks.get(id);\r    if (!b) return false;\r\r    this.clearCollisionDivisions(b);\r\r    this.model.blocks.delete(id);\r    if (!this.spectate) this.ships.main.blocks.delete(id);\r\r    if (b.locked) this.refGroups.enemyBlocks.delete(b);\r\r    // erase the view for it.\r    this.destroyBlockView(id);\r    this.destroyOverlayMinimapBlockViewFor(id);\r\r    // notify game\r    if(this.gameMode == 1) this.game.scores[b.team]--;\r\r    return true;\r  }\r\r  // * SUBS * //\r\r  addSub(ship) {\r\r    // interpretation ship data for sub creation\r    const data = this.generateSubData(ship)\r\r    // actually create block object\r    this.createSub(data)\r\r    // ditribute bullet creation data to other clients\r    this.network.sendCreateSub(data)\r\r    // notify ship\r    ship.didSub(data.id)\r\r  }\r\r  generateSubData(ship) {\r    return ({\r      id: Math.uuid(),\r      type: ship.SUB_TYPE,\r      team: ship.owner.team.number,\r      player: ship.owner.id,\r      position: ship.front_weapon_position,\r      angle: ship.angle\r    });\r  }\r\r  createSub(data) {\r    var p;\r    switch (data.type) {\r      case 'attractor':\r        p = new Attractor(data)\r        break;\r      case 'repulsor':\r        p = new Repulsor(data)\r        break;\r      case 'block_bomb':\r        p = new BlockBomb(data)\r        break;\r      case 'stealth_cloak':\r        p = new StealthCloak(data)\r        break;\r      case 'missile':\r        p = new Missile(data)\r        break;\r      default:\r        break;\r    }\r\r    // create a view for it.\r    if (data.type != 'stealth_cloak') {\r      let graphics = DeepSpaceGame.graphics[data.type](this.teams[p.team].color);\r      var pv = new createjs.Shape(graphics);\r      pv.cache(-12, -12, 24, 24);\r      this.view.layer.action.back.addChild(pv);\r\r      this.view.subs.set(p.id, pv);\r\r      // if(this.camera.showing(p)) SoundHelper.fireSub(); // no sound for stealth\r\r      p.collision_groups = (this.teams[p.team] == this.team) ? [this.physics.collision_groups.OUR_PROJ_SUBS] : [];\r    }\r\r    this.model.subs.set(p.id, p);\r\r    if (!this.spectate) if (p.team != this.ships.main.owner.team.number) this.refGroups.enemySubs.add(p.id);\r\r    return p;\r  }\r\r  removeSub(id) {\r\r    // remove local copy\r    this.destroySub(id)\r\r    // annouce blocks demise\r    this.network.sendDestroySub(id)\r\r  }\r\r  destroySub(id) {\r    var p = this.model.subs.get(id);\r    if (!p) return false;\r\r    this.clearCollisionDivisions(p);\r\r    this.model.subs.delete(id);\r    if (!this.spectate) this.ships.main.subs.delete(id);\r\r    this.refGroups.enemySubs.delete(p.id);\r\r    // erase the view for it.\r    if (p.type != 'stealth_cloak') {\r      var v = this.view.subs.get(id);\r      if (v) {\r        this.view.subs.delete(id);\r        this.view.layer.action.back.removeChild(v);\r      }\r    }\r    return true;\r  }\r\r  // * GAME * //\r\r  // CTF //\r\r  assumeFlag(ship) {\r\r    // interpret for flag capture\r    const id = ship.owner.id\r\r    // capture flag locally\r    this.captureFlag(id)\r\r    // let other clients know\r    this.network.sendCaptureFlag(id)\r\r    // notify ship\r    ship.didPickupFlag()\r\r  }\r\r  captureFlag(id) {\r\r    // set flag and ship state\r    const player = this.players.get(id);\r    this.game.flag.holderID = id;\r    if(this.players.get(id)) this.players.get(id).ship.setFlag(this.game.flag);\r\r    // alert\r    var c = player.team.color, us = player.team == this.team;\r    // var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\r    this.alert(\r      DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\r        DeepSpaceGame.localizationStrings.colors[c][this.language]\r      )\r      , c);\r\r    // sound\r    // us ? SoundHelper.teamYay() : SoundHelper.teamNay();\r\r    // this.updateFlagView();\r\r  }\r\r  releaseFlag() {\r\r    // capture flag locally\r    this.dropFlag()\r\r    // let other clients know\r    this.network.sendDropFlag()\r\r    // let server know\r    const team = this.player.team.number;\r    const score = this.game.scores[team];\r    this.network.sendFlagProgress([team, score]);\r    console.log(`update to server: ${team} - ${score}`);\r\r  }\r\r  dropFlag() {\r\r    var id, flag = this.game.flag, ship = null;\r\r    if (id = flag.holderID) {\r      var player = this.players.get(flag.holderID)\r      if (ship = player.ship)\r        ship.clearFlag();\r\r      flag.reset();\r\r      var c = player.team.color, us = player.team == this.team;\r      var color = undefined;//us || this.spectate ? undefined : this.team.color;\r      this.alert(\r        DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\r          DeepSpaceGame.localizationStrings.colors[c][this.language]\r        )\r        , color);\r\r      // this.updateFlagView();\r    }\r\r  }\r\r  flagProgress([team, score]) {\r\r    // update local registry w/ server score\r    this.game.scores[team] = score;\r    console.log(`update from server: ${team} - ${score}`);\r\r  }\r\r\r\r\r  // pickupFlag(playerID) { // flag activation needs to go through here\r  //   var flag = this.game.flag, ship = null;\r  //   // if(!flag.idle) NetworkHelper.out_flag_drop();\r  //   flag.holderID = playerID;\r  //\r  //   var player = this.players.get(flag.holderID);\r  //\r  //\r  //   if (ship = player.ship) {\r  //     ship.setFlag(flag);\r  //     if(this.game.overtime)\r  //       if(ship.owner.team == this.game.lead)\r  //         if(ship.owner.team == this.team)\r  //           this.network.out_game_over(this.team.number);\r  //   }\r  //\r  //\r  //\r  //   var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\r  //   this.alert(\r  //     DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\r  //       DeepSpaceGame.localizationStrings.colors[c][this.language]\r  //     )\r  //     , c);\r  //\r  //   // sound\r  //   us ? SoundHelper.teamYay() : SoundHelper.teamNay();\r  //\r  //   // this.updateFlagView();\r  // }\r\r  // dropFlag() {\r  //   var id, flag = this.game.flag, ship = null;\r  //   if (id = flag.holderID) {\r  //     var player = this.players.get(flag.holderID)\r  //     if (ship = player.ship)\r  //       ship.clearFlag();\r  //\r  //     flag.reset();\r  //\r  //     var c = player.team.color, us = player.team == this.team;\r  //     this.alert(\r  //       DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\r  //         DeepSpaceGame.localizationStrings.colors[c][this.language]\r  //       )\r  //       , us || this.spectate ? undefined : this.team.color);\r  //\r  //     // this.updateFlagView();\r  //   }\r  //\r  // }\r\r  \r\r  alert(msg, color = \"#ECEFF1\") {\r    clearTimeout(this.alertTimeout)\r    var v = this.view.overlay.message;\r    v.text = msg;\r    v.color = color;\r    v.updateCache();\r    if (msg.trim() !== '') this.alertTimeout = setTimeout(() => {\r      this.alert(\"\")\r    }, 4000)\r  }\r\r  alert_kill(msg, color = \"#ECEFF1\") {\r    clearTimeout(this.alertKillTimeout)\r    var v = this.view.overlay.kill_message;\r    v.text = msg;\r    v.color = color;\r    v.updateCache();\r    if (msg.trim() !== '') this.alertKillTimeout = setTimeout(() => {\r      this.alert_kill(\"\")\r    }, 4000)\r  }\r\r\r  msgShipKill(takerID, giverID) {//alert(`takerID ${takerID}, giverID ${giverID},`)\r    var t = this.players.get(takerID), g = this.players.get(giverID);\r    if (t) t.score.deaths++;\r    if (g) g.score.kills++;\r\r    if (this.spectate) return;\r    if (takerID == this.player.id) {\r      const player = this.players.get(giverID);\r      this.alert_kill(\r        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\r          player.name\r        )\r      );\r      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\r      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\r    } else if (giverID == this.player.id) {\r      this.alert_kill(\r        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\r          this.players.get(takerID).name\r        )\r      );\r    }\r  }\r\r\r\r  /* NEW DYNAMIC GRAPHICS */\r  // Size has grown. It is now ineffective to keep copies\r  // of views for all map objects and choose to render\r  // based on visibility. Views will be created and\r  // destroyed dynamically. This will hopefully have\r  // great performance benefits 09/17/17\r\r  createBulletView(b) {\r\r    const cache = DeepSpaceGame.graphicsCaches.bullets[b.team];\r    const bv = new createjs.Bitmap(cache);\r    bv.scaleX = bv.scaleY = b.radius / Bullet.stats.MAX_RADIUS;\r    bv.regX = bv.regY = (cache.width / 2);\r    this.view.layer.action.back.addChild(bv);\r\r    // set view map\r    this.view.bullets.set(b.id, bv);\r\r    return bv\r\r  }\r\r  destroyBulletView(id) {\r\r    const v = this.view.bullets.get(id);\r    if (v) {\r      this.view.bullets.delete(id);\r      this.view.layer.action.back.removeChild(v);\r    }\r\r  }\r\r  createBlockView(bl) {\r    \r    // a block can either look fluid or locked\r    // these being either ours or theirs\r\r    // create a view for it.\r    let type = 'unlocked';\r    if(bl.locked || bl.qualified) type = bl.isForeign ? 'enemy' : 'locked';\r    let cache = DeepSpaceGame.graphicsCaches.blocks[type][bl.team];\r    var blv = new createjs.Bitmap(cache);\r    blv.scaleX = blv.scaleY = bl.radius / Block.stats.MAX_RADIUS;\r    blv.regX = blv.regY = (cache.width / 2);\r    this.view.layer.action.back.addChild(blv);\r\r    // set view map\r    this.view.blocks.set(bl.id, blv);\r\r    return blv\r\r  }\r\r  destroyBlockView(id) {\r\r    const v = this.view.blocks.get(id);\r    if (v) {\r      this.view.blocks.delete(id);\r      this.view.layer.action.back.removeChild(v);\r    }\r\r  }\r\r  /* DEINITIALIZATION */\r\r  deinit() {\r    // it must go in reverse order\r    // as children of root objects will\r    // need to know what to get removed from\r    this.deinitCaches();\r    this.deinitPhysics();\r    this.deinitInput();\r    this.deinitListeners();\r    this.deinitCamera();\r    this.deinitView();\r    this.deinitGame();\r    this.deinitModel();\r\r    delete DeepSpaceGame.runningInstance;\r  }\r\r  deinitCaches() {\r    delete this.enemyTeams;\r    delete this.enemyPlayers;\r    delete this.player;\r    delete this.team;\r\r    delete DeepSpaceGame.graphicsCaches;\r  }\r\r  deinitPhysics() {\r    delete this.refGroups;\r  }\r\r  deinitInput() {\r    var main = this.ships.main;\r    if (main) delete main.owner.input;\r  }\r\r  deinitListeners() {\r    for (let [, handler] of this.inputHandlers) {\r      window.removeEventListener('keydown', handler); // onkeydown\r      window.removeEventListener('keyup', handler); // onkeyup\r    }\r  }\r\r  deinitCamera() {\r    delete this.camera;\r  }\r\r  deinitView() {\r    delete this.view;\r    delete this.window;\r    this.stage.removeAllChildren();\r    delete this.stage;\r    delete this.colors;\r  }\r\r  deinitGame() {\r    delete this.game;\r  }\r\r  deinitModel() {\r    delete this.ships;\r    delete this.players;\r    delete this.teams;\r  }\r\r  reset() {\r\r  }\r\r  resetInput() {\r    var input;\r    if (this.player) if (input = this.player.input) input.clear();\r  }\r\r  disconnectPlayer(id) {\r    var player = this.players.get(id);\r    if (player) {\r      player.disconnected = true;\r      player.ship.disabled = true;\r      if (this.spectate) this.activePlayers.delete(player);\r      \r      // alert team members\r      if (!this.spectate) {\r        if(player.team === this.team) this.alert(\r          DeepSpaceGame.localizationStrings.alerts['teamMemberDisconnects'][this.language](\r            player.name\r          )\r        )\r      }\r    } else {\r      log(`ERR in disconnectPlayer :: id(${id}) not found`)\r    }\r  }\r\r}\r\rDeepSpaceGame.graphics = {\r  circle_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\r  circle_edge: (color, size, thickness) => new createjs.Graphics().beginStroke(color).setStrokeStyle(thickness).drawCircle(0, 0, size),\r\r  rect_fill: (color, w, h) => new createjs.Graphics().beginFill(color).drawRect(0, 0, w, h),\r  energy_bar_rect: (color, w, h) => new createjs.Graphics().beginFill(color).drawRect(0, (-h/2), w, h),\r\r  spawn_camp: (color) => new createjs.Graphics().beginStroke(color).setStrokeStyle(6).drawCircle(0, 0, 64),\r  spawn_camp_fill: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 64),\r  // spawn_camp: () => new createjs.Graphics().beginStroke(\"#37474F\").setStrokeStyle(4).drawCircle(0, 0, 64),\r  ship: [\r    // 0 \"standard\"\r    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\r      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\r\r    // 1 \"rate\"\r    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8),\r      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8)],\r\r    // 2 \"speed\"\r    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\r      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\r\r    // 3 \"defense\"\r    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4),\r      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4)],\r\r    // 4 \"damage\"\r    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8),\r      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8)],\r\r  ],\r  particle: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(4).drawCircle(0, 0, size),\r  // bullet: (color) => DeepSpaceGame.graphics.particle(color)\r  // block: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\r  block_border: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(2).drawCircle(0, 0, size),\r  block_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\r  block_center: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 2),\r\r  attractor: color => new createjs.Graphics().beginFill(color).moveTo(2, 2).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, 2).lineTo(-8, 2).lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\r  repulsor: color => new createjs.Graphics().beginFill(color).moveTo(2, -8).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, -8).lineTo(2, -8),//.lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\r  block_bomb: color => new createjs.Graphics().beginFill(color).moveTo(-10, 0).arcTo(-10, -10, 0, -10, 10).lineTo(0, 10).arcTo(-9, 9, -10, 0, 10),\r  missile: color => new createjs.Graphics().beginFill(color).moveTo(6, 0).lineTo(-6, -6).lineTo(-6, 6).lineTo(6, 0),\r\r\r  ring: r => new createjs.Graphics().beginStroke(\"#ECEFF1\").setStrokeStyle(16).drawCircle(0, 0, r),\r  flag: r => new createjs.Graphics().beginFill(\"#ECEFF1\").drawCircle(0, 0, r),\r  flag_shadow: () => new createjs.Shadow(\"#ECEFF1\", 0, 0, 10),\r\r  energyMeter: (color, percent, radius = 9) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius, (-Math.PI / 2), (2 * Math.PI * percent) - (Math.PI / 2)),\r  energyMeterShadow: (color, radius = 12) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius, 0, 2 * Math.PI)\r};\r\rDeepSpaceGame.renderingParameters = {\r  'bulletCount': 100,\r  'shipThrustParticleCount': 80\r}\r\rDeepSpaceGame.localizationStrings = {\r  alerts: {\r    enemyTakesFlag: {\r      en: (color) => `The ${color} team has the moon!`\r    },\r    teamTakesFlag: {\r      en: () => `We have the moon!`\r    },\r    enemyDropsFlag: {\r      en: (color) => `The ${color} team dropped the moon!`\r    },\r    teamDropsFlag: {\r      en: () => `We dropped the moon!`\r    },\r    yourKill: {\r      en: (name) => `you got ${name}`\r    },\r    yourDeath: {\r      en: (name) => `${name} got you!`\r    },\r    teamTakesLead: {\r      en: () => `We took the lead!`\r    },\r    teamLosesLead: {\r      en: () => `We lost the lead!`\r    },\r    teamMemberDisconnects: {\r      en: (name) => `Teammate ${name} disconnected`\r    }\r  },\r  colors: {\r    '#FF4081': {\r      en: `pink`\r    },\r    '#FF5252': {\r      en: `red`\r    },\r    '#FFEA00': {\r      en: `yellow`\r    },\r    '#00E676': {\r      en: `green`\r    },\r    '#00B0FF': {\r      en: `blue`\r    },\r    '#BB33FF': {\r      en: `purple`\r    },\r    '#ECEFF1': {\r      en: `white`\r    },\r    '#90A4AE': {\r      en: `light`\r    },\r    '#37474F': {\r      en: `dark`\r    },\r    '#263238': {\r      en: `black`\r    },\r\r\r    '#FFA33F': {\r      en: `orange`\r    }, // 10 orange\r    '#82E600': {\r      en: `lime`\r    }, // 11 grass\r    '#00FFE2': {\r      en: `aqua`\r    }, // 12 aqua\r    '#F93FFF': {\r      en: `magenta`\r    }, // 13 magenta\r  }\r}\r\r// DeepSpaceGame.colorNames = [\r//   '#FF4081': `pink`,\r//   '#FF5252': `red`,\r//   '#FFEA00': `yellow`,\r//   '#00E676': `green`,\r//   '#00B0FF': `blue`,\r//   '#AA00FF': `purple`,\r//   '#ECEFF1': `white`,\r//   '#90A4AE': `light`,\r//   '#37474F': `dark`,\r//   '#263238': `black`\r// ];\r\r// DeepSpaceGame.colorNames = [\r//   '#FF4081', // 0 pink\r//   '#FF5252', // 1 red\r//   '#FFEA00', // 2 yellow\r//   '#00E676', // 3 green\r//   '#00B0FF', // 4 blue\r//   '#AA00FF', // 5 purple\r//   '#ECEFF1', // 6 white\r//   '#90A4AE', // 7 light\r//   '#37474F', // 8 dark\r//   '#263238'  // 9 black\r// ];\r//\r// DeepSpaceGame.colorCombinations = new Map([2, [\r//   [1, 4], // red, blue\r//   [1, 2], // red, yellow\r//   [5, 2], // purple, yellow\r//   [2, 4], // yellow, blue\r//   [2, 0], // yellow, pink\r//   [0, 4], // pink, blue\r//   [4, 3]  // blue, green\r// ]],\r// [3,[\r//\r// ]]\r// );\r\rDeepSpaceGame.colors = [\r  '#FF4081', // 0 pink\r  '#FF5252', // 1 red\r  '#FFEA00', // 2 yellow\r  '#00E676', // 3 green\r  '#00B0FF', // 4 blue\r  '#BB33FF', // 5 purple AA00FF old\r  '#ECEFF1', // 6 white\r  '#90A4AE', // 7 light\r  '#37474F', // 8 dark\r  '#263238', // 9 black\r\r  // added colors\r  '#FFA33F', // 10 orange\r  '#82E600', // 11 grass\r  '#00FFE2', // 12 aqua\r  '#F93FFF', // 13 bubble gum\r];\r\rDeepSpaceGame.maps = [\r  {\r    name: \"The Event Horizon\",\r    width: 1920, height: 1920,\r    // width: 1024, height: 1024,\r    spawn: [\r      [{x: 30, y: 30}, {x: 30, y: 60}, {x: 60, y: 60}, {x: 60, y: 30}],\r      [{x: 450, y: 290}, {x: 450, y: 260}],\r      [{x: 450, y: 290}, {x: 450, y: 260}]\r    ]\r  }\r];\r\rDeepSpaceGame.maps = [\r  { // 0\r    name: \"Wide Sky\",\r    width: 3072 * 1, height: 3072 * 1,\r    teams: [2],\r\r    spawn: [\r      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\r\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\r    ],\r    impermeables: {\r      copies: 4,\r      bodies: [\r        [32, // radius\r          [ 1192, 382 ],\r          [ 716, 414 ],\r          [ 1496, 87 ],\r          [ 1668, 441 ],\r          [ 1670, 849 ],\r          [ 869, 1320 ],\r          [ 276, 1270 ],\r          [ 1380, 681 ],\r          [ 344, 1228 ],\r          [ 632, 1022 ],\r          [ 427, 1256 ],\r          [ 728, 1150 ],\r          [ 140, 1096 ],\r          [ 76, 1146 ],\r          [ 716, 1064 ]\r        ],\r        [48,\r          [ 1332, 585 ],\r          [ 1021, 265 ],\r          [ 1224, 1006 ],\r          [ 520, 1308 ],\r          [ 812, 1006 ],\r          [ 536, 974 ]\r        ],\r        [64,\r          [ 408, 942 ],\r          [ 856, 878 ],\r          [ 684, 537 ],\r          [ 1160, 274 ],\r          [ 957, 761 ],\r          [ 840, 1210 ]\r        ],\r        [96,\r          [ 491, 169 ],\r          [ 860, 601 ],\r          [ 1338, 409 ]\r        ],\r        [128,\r          [1540, 569],\r        ]\r      ]\r    }\r  },\r  { // 0\r    name: \"Nautical\",\r    width: 3072 * 1, height: 3072 * 1,\r    teams: [2],\r\r    // first array is for the number of teams coresponding to the teams array\r    // second is place in the arrangement for that number of teams\r    // object is position\r    spawn: [\r      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\r\r      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\r      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\r      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\r      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}]\r    ],\r    impermeables: {\r      copies: 4,\r      bodies: [\r        [32, // radius\r          [325, 764],\r          [989, 98],\r          [746, 898],\r          [1054, 1308],\r          [1179, 1260],\r          [1514, 1308],\r          [993, 1356],\r          [534, 1308],\r          [1546, 194],\r          [1488, 130],\r          [173, 1028],\r          [173, 892],\r          [470, 880],\r          [325, 764],\r          [667, 892]\r        ],\r        [48,\r          [1218, 274],\r          [1242, 786],\r          [618, 1260],\r          [1139, 1340],\r          [238, 960],\r          [794, 818]\r        ],\r        [64,\r          [1084, 475],\r          [422, 322],\r          [914, 784],\r          [1654, 546],\r          [1279, 1219],\r          [1423, 1228]\r        ],\r        [96,\r          [298, 539],\r          [967, 610]\r        ],\r        [128,\r          [831, 411]\r        ]\r      ]\r    }\r  },\r  /*{ // 1\r    name: \"Liftor\",\r    width: 1920, height: 1920,\r    teams: [2],\r\r    // first array is for the number of teams coresponding to the teams array\r    // second is place in the arrangement for that number of teams\r    // object is position\r    spawn: [\r      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\r\r      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\r      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\r      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\r      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}]\r    ],\r    impermeables: {\r      copies: 2,\r      bodies: [\r        [32, // radius\r          [929, 76],\r          [582, 128],\r          [696, 176],\r          [811, 226],\r          [173, 892],\r          [173, 1028]\r        ],\r        [48,\r          [1218, 274],\r          [1242, 786],\r          [238, 960]\r        ],\r        [64,\r          [1654, 546],\r          [637, 578]\r        ]\r      ]\r    }\r  },*/\r  {\r    name: \"Nebula\",\r    width: 3072, height: 3072,\r    teams: [2],\r    tint: [180, '#FFFFFF', '#000000', ],\r\r    // first array is for the number of teams coresponding to the teams array\r    // second is place in the arrangement for that number of teams\r    // object is position\r    spawn: [\r      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\r\r      [\r        {x: 1791, y: 160, rotation: Math.PI/2},\r        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\r      ],\r      [\r        {x: 1791, y: 160, rotation: Math.PI/2},\r        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\r      ],\r    ],\r    impermeables: {\r      copies: 2,\r      bodies: [\r        [32, // radius\r          [ 456, 549 ],\r          [ 692, 1238 ],\r          [ 787, 1367 ],\r          [ 2013, 176 ],\r          [ 1199, 1175 ],\r          [ 555, 1731 ],\r          [ 1276, 1143 ],\r          [ 1507, 192 ],\r          [ 1587, 224 ],\r          [ 1443, 391 ],\r          [ 3030, 697 ],\r          [ 2609, 847 ],\r          [ 1727, 920 ],\r          [ 1911, 643 ],\r          [ 898, 1303 ],\r          [ 1078, 1358 ],\r          [ 1503, 1341 ],\r          [ 1575, 1316 ],\r          [ 1639, 1358 ],\r          [ 2798, 859 ]\r        ],\r        [48,\r          [898,1207],[510,1183],[1110,1206],[1343,1214],[1459,274],[2888,863]\r        ],\r        [64,\r          [1372,1079],[1631,845],[946,1422],[1515,86],[1007,1278],[341,660],[2166,1047],[541,1348],[421,1271],[1395,160],[992,847],[566,537],[2449,560],[2936,751],[2699,909],[2077,86],[1497,811],[2417,697],[2737,258]\r        ],\r        [96,\r          [231,304],[330,485],[1355,911],[276,822],[820,879],[1853,845],[2045,920],[2221,1213],[2277,592]\r        ],\r        [128,\r          [2609,421],[385,1037],[641,724],[1267,334],[1215,613],[427,1519],[2149,278],[2289,857]\r        ]\r      ]\r    }\r  },\r  {\r    name: \"Clockwise\",\r    width: 2048, height: 2048,\r    teams: [2],\r    tint: [180, '#207272', '#000000', ],\r\r    // first array is for the number of teams coresponding to the teams array\r    // second is place in the arrangement for that number of teams\r    // object is position\r    spawn: [\r      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\r\r      [\r        {x: 1023, y: 119, rotation: 0},\r        {x: 2048 - 1023, y: 2048 - 119, rotation: Math.PI},\r      ],\r      [\r        {x: 1023, y: 119, rotation: 0},\r        {x: 2048 - 1023, y: 2048 - 119, rotation: Math.PI},\r      ],\r    ],\r    impermeables: {\r      copies: 2,\r      bodies: [\r        [32, // radius\r          [557,1059],[509,1367],[1000,876],[1077,844],[678,1420],[1897,192],[1977,224],[1162,344],[589,173],[1613,398],[1367,299],[1439,274],[1485,211]\r        ],\r        [48,\r          [589,77],[481,1009],[587,1415],[911,907],[1144,915],[941,372],[745,1491]\r        ],\r        [64,\r          [278,205],[541,748],[635,276],[1865,86],[507,521],[826,661],[370,1091],[420,1312],[317,1219],[1056,320],[1266,332],[497,883],[1549,302]\r        ],\r        [96,\r          [806,292],[656,617],[118,662]\r        ],\r      ]\r    }\r  },\r];\r\rDeepSpaceGame.spawn_structure = [\r  [{x: 0, y: 0}], // 1 player\r  [{x: 18, y: 0}, {x: -18, y: 0}], // 2\r  [{x: 26, y: 0}, {x: -13, y: 22}, {x: -13, y: -22}], // 3\r  [{x: 34, y: 0}, {x: 0, y: 34}, {x: -34, y: 0}, {x: 0, y: -34}], //4\r  [{x: 34, y: 0}, {x: 10, y: 32}, {x: -28, y: 20}, {x: -28, y: -20}, {x: 10, y: -32}], // 5\r  [{x: 34, y: 0}, {x: 17, y: 30}, {x: -17, y: 30}, {x: -34, y: 0}, {x: -17, y: -30}, {x: 17, y: -30}] // 6\r]\r\rDeepSpaceGame.modes = {\r  ctf: { // capture the flag\r    ring_radius: 720,\r    flag_radius: 18,\r    time_limit: FRAMES.mins(3)\r  }\r};\r"]}