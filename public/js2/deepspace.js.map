{"version":3,"sources":["../js/deepspace.js"],"names":["DeepSpaceGame","data","network","interpret","setup","loop","timer","start","timerExpire","spectate","ENV","isHost","host","mapInfo","maps","options","map","gameMode","mode","game","language","Timer","duration","TIME","sec","TINT","tint","load","colors","e","log","setupData","setupPhysics","setupModel","setupView","setupListeners","setupLoop","setupReferences","setupTeams","setupPlayers","setupShips","setupObjectPools","setupGame","setupMap","teams","teamCount","length","times","i","push","Team","setupSpawnCamps","forEach","team","spawn_camp","position","V2D","new","spawn","number","radius","players","Map","playerIndex","id","name","type","createPlayer","ships","player","ship","localIDMatches","Ship","isMain","main","BasicShip","model","bullets","blocks","subs","disabled","ended","overtime","scores","Array","centerX","width","centerY","height","flag","Flag","collision_groups","physics","FLAG","setCollisionDivisions","fill","max","Physics","distance","x","y","lead","undefined","info","cX","cY","initial_impermeables","radii","Set","impermeables","bodies","radius_size_group","list","slice","shift","add","copies","obj","imp","IMPERMEABLES","setupPalette","configureCreateJS","configureProton","setupCamera","setupCanvas","createViews","canvas","$","document","body","clientWidth","clientHeight","scale","Math","sqrt","stage","createjs","Stage","snapToPixel","HDPSupport","HDPScale","window","devicePixelRatio","getAttribute","setAttribute","round","style","scaleX","scaleY","view","grid","createLayers","createBackgroundViews","createGameModeSpecificViewsAction","createSpawnCampViews","createShipViews","createPoolViews","createOverlayViews","layer","background","Container","action","overlay","back","front","addChild","canvasBackground","Shape","mapBackground","graphics","beginFill","drawRect","cache","background_width","background_height","hypotenuse","sqr","regX","regY","map_background","caches","block_fill","r","s","set","cacheCanvas","Bitmap","get","block","pos","group","camp","color","spawn_camp_fill","alpha","our_ship","our_team","owner","container","hollow","filled","text","Text","textAlign","innerRadius","outerRadius","meter","energyMeter","shadow","energyMeterShadow","offset","meter_shadow","score","imagined_width","toString","Shadow","createOverlayMinimapViews","message","kill_message","modes","flag_radius","flag_shadow","overlay_model","overlay_view","mini","minimap","rotation","degrees","spawnRotation","padd","circle_fill","flag_view","this_player","this_team","graphicsCaches","blv","setChildIndex","v","delete","removeChild","bitmapOfColor","particle","proton","Proton","renderer","Renderer","emitters","imageTargets","death","ImageTarget","util","hasInitializer","emitter","initializer","initializes","indexOf","local","Emitter","bitmap","rate","Rate","addInitialize","Life","force","V","Span","addBehaviour","Scale","Alpha","emit","addEmitter","camera","Camera","activePlayerIndex","activePlayers","p","updateCameraFocus","focus","inputHandlers","receiver","keyHandler","keyCode","addEventListener","inputs","input","acceleration","angularAcceleration","shoot","shootAngle","sub","keyboard","KeyboardInput","keyboardStack","InputStack","stack","keymap","item","mappings","keycode","addItemWhen","button","ontrue","removeItemWhen","onfalse","on","flattenStack","buttonWeight","x2","y2","items","directionV","angle","PI","gamepad","GamepadInput","deadzone","diff","axis","onlessthan","n","onmorethan","raw_acc_data","applied_acc_data","threshold","bias","minThreshhold","maxThreshhold","thresholdSpan","storage","calibration","split","Number","mobile","DeviceMotionEvent","ondevicemotion","accelerationIncludingGravity","updateMotion","orientation","raw_x","raw_y","invertControls","left","querySelector","inputStack","joystick","joystick_deadzone_radius","right","right_hammer","Hammer","deltaX","deltaY","a","hammertime","taps","direction","DIRECTION_LEFT","ev","wait","setupCollisionSystem","assignCollisionPatterns","setupReferenceGroups","block_size","world_size","rows","ceil","cols","divisions","division_index","division_coordinates","floor","collision_checks","SHIPS","Symbol","OUR_SHIP","OUR_SHIPS","ENEMY_SHIPS","BULLETS","MY_BULLETS","OUR_BULLETS","ENEMY_BULLETS","BLOCKS","OUR_BLOCKS","ENEMY_BLOCKS","OUR_PROJ_SUBS","SPAWN_CAMPS","OUR_SPAWN_CAMP","ENEMY_SPAWN_CAMPS","REFUGE","OUR_REFUGE","Object","keys","physics_body","clearCollisionDivisions","check_x","unit_offset_array","check_y","division_x","division_y","d","checks","groups","bullet","damageShip","hp","creator","removeBullet","damageBlock","idle","canPickupFlag","assumeFlag","explode","removeSub","block_a","block_b","overlap","removeBlock","refuge","bounce","charging","refGroups","enemyBlocks","enemySubs","animate","FPS","getAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","setupDT","last_time","Date","getTime","dt","now","setupShortcutsToCommonCalls","setupFinishCollisionAssignment","setupGraphicsCaches","enemyTeams","filter","enemyPlayers","reduce","concat","spawn_c","setupCommonGraphicsCachePool","gc","Bullet","stats","MAX_RADIUS","unlocked","locked","enemy","Block","border","block_border","c","COLOR","mix","updateDT","update","over","updateInput","updateModel","checkForCollisions","updateGame","updateView","updateShips","broadcastShip","updateBullets","updateBlocks","updateSubs","LINEAR_ACCELERATION_LIMIT","angular_acceleration","ANGULAR_ACCELERATION_LIMIT","relative_shoot_angle","canShoot","addBullet","canBlock","reachedBlockLimit","oldestBlockID","addBlock","releaseFlag","canSub","addSub","velocity","changed","sendShipUpdate","export_update","sendShipOverride","export_override","b","qualified","snapToGrid","createOverlayMinimapBlockViewFor","RANGE","copy","INTENSITY_FUNCTION","exploding","has","EXPLOSION_RANGE","EXPLOSION_DAMAGE_FUNCTION","destroySub","target","VISION_RANGE","stealth","changeBlock","div","a_type","b_type","check","body_a","body_b","doTouch","holderID","last_known_position","percent","low_score","current_score","sendFlagProgress","alert","localizationStrings","alerts","updateShipViews","updateBulletViews","updateBlockViews","updateSubViews","updateCamera","updateBackground","updateMap","updateGameViews","updateMinimapView","updateProton","isVisible","visible","showing","shipIsVisible","visibility","flipCoin","ship_view","health","image","updateEnergyMeterView","updateNameViews","meterView","shadowView","energy","textView","views","createBulletView","destroyBulletView","createBlockView","isForeign","destroyBlockView","map_width","map_height","half_window_width","half_window_height","half_background_width","half_background_height","backgroundPositionVector","centerOffset","radians","setAngleOffset","GRID","calculateTeamScoreAppearance","updateFlagView","bestScore","_","each","not_visible","newPosition","plane","mul","padding","timingFunction","BezierEasing","slowest","fastest","defaultMinAngle","defaultMaxAngle","removeInitialize","LINEAR_VELOCITY_LIMIT","LINEAR_VELOCITY_LIMIT_EXTENDED","amount","back_weapon_position","minAngle","maxAngle","timePan","numPan","thaPan","resetInput","deinitListeners","cancel","LOBBY","disconnect","results","disableInteraction","toID","fromID","adjustShipHP","sendAdjustShipHP","damage","processDeath","deathOccurrence","sendDeathOccurrence","t","g","deaths","kills","alert_kill","animateFocus","generateBulletData","createBullet","sendCreateBullet","didShoot","uuid","shoot_position","shoot_angle","shot_RNG","ATTACK_RADIUS","ATTACK_HP","lifespan","ATTACK_LIFESPAN","speed","ATTACK_SPEED","destroyBullet","sendDestroyBullet","generateBlockData","createBlock","sendCreateBlock","didBlock","front_weapon_position","BLOCK_SPREAD","random","BLOCK_HP_CAPACITY","randomIntMinMax","MIN_SPEED","MAX_SPEED","bl","adjustBlockHP","sendAdjustBlockHP","setBlockTeam","sendSetBlockTeam","oldTeam","destroyBlock","sendDestroyBlock","destroyOverlayMinimapBlockViewFor","generateSubData","createSub","sendCreateSub","didSub","SUB_TYPE","Attractor","Repulsor","BlockBomb","StealthCloak","Missile","pv","sendDestroySub","captureFlag","sendCaptureFlag","didPickupFlag","setFlag","us","dropFlag","sendDropFlag","clearFlag","reset","msg","clearTimeout","alertTimeout","trim","alertKillTimeout","takerID","giverID","bv","deinitCaches","deinitPhysics","deinitInput","deinitCamera","deinitView","deinitGame","deinitModel","runningInstance","handler","removeEventListener","removeAllChildren","clear","disconnected","deinit","size","Graphics","drawCircle","beginStroke","setStrokeStyle","moveTo","lineTo","block_center","attractor","repulsor","block_bomb","arcTo","missile","ring","arc","renderingParameters","enemyTakesFlag","en","teamTakesFlag","enemyDropsFlag","teamDropsFlag","yourKill","yourDeath","teamTakesLead","teamLosesLead","teamMemberDisconnects","spawn_structure","ctf","ring_radius","time_limit","FRAMES","mins"],"mappings":"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","file":"deepspace.js","sourcesContent":["// deep space js by david ruiz.\n\n\nclass DeepSpaceGame {\n\n  // at initialization we can assume the environment\n  // knows certain game parameters:\n  // - map\n  // - game mode\n  // - players: amount, names, ship types, indexes,\n  constructor(data, network) {\n    this.interpret(data, network);\n    this.setup();\n    // this.loop();\n  }\n\n  static create(data, network) {\n    if (DeepSpaceGame.runningInstance) DeepSpaceGame.runningInstance.deinit();\n    return DeepSpaceGame.runningInstance = new DeepSpaceGame(data, network);\n  }\n\n  start() {\n    this.loop();\n    this.timer.start(() => {\n      this.timerExpire()\n    });\n  }\n\n  interpret(data, network) {\n    // anything pertaining to game\n    // object itself gets set\n    this.spectate = ENV.spectate;\n    this.isHost = data.host;\n    this.mapInfo = DeepSpaceGame.maps[data.options.map];\n    this.gameMode = data.options.mode;\n    this.game = {}\n    this.language = 'en';\n    this.timer = new Timer(data.duration - TIME.sec(1.5));\n\n    this.network = network;\n    this.network.game = this;\n\n\n    // SoundHelper.start(); // new\n    // this.soundHelper = SoundHelper.start(); // olc\n\n    try {\n      // if (TINT) TINT.load(...data.colors[1])\n      if (TINT) {\n        if(this.mapInfo.tint) { TINT.load(...this.mapInfo.tint) }\n        else { TINT.load(...data.colors[1]) }\n      }\n    } catch (e) {\n      log('tint load failed')\n    }\n\n    // everything else:\n    this.setupData = data;\n  }\n\n  setup() {\n    this.setupPhysics();\n    this.setupModel();\n    this.setupView();\n    this.setupListeners();\n    this.setupLoop();\n    this.setupReferences();\n\n    // if (this.spectate) this.actualize();\n  }\n\n  setupModel() {\n    this.setupTeams();\n    this.setupPlayers();\n    this.setupShips();\n    this.setupObjectPools();\n\n    this.setupGame();\n    this.setupMap();\n  }\n\n  setupTeams() {\n    this.teams = [];\n    let teamCount = this.setupData.teams.length;\n    teamCount.times((i) => {\n      this.teams.push(new Team(this, i))\n    });\n\n    this.setupSpawnCamps();\n  }\n\n  setupSpawnCamps() {\n    this.teams.forEach(team => {\n      team.spawn_camp = {\n        position: V2D.new(this.mapInfo.spawn[team.game.teams.length - 1][team.number]),\n        radius: 64,\n        team: team.number\n      }\n    });\n  }\n\n  setupPlayers() {\n    this.players = new Map();\n    this.teams.forEach((team, i) => {\n      this.setupData.teams[i].forEach((playerIndex)=>{\n        var [id, name, , , , type] = this.setupData.players[playerIndex];\n        team.createPlayer(id, name, type);\n      });\n    });\n  }\n\n  setupShips() {\n    this.ships = [];\n    this.players.forEach((player) => {\n      var ship;\n      if (localIDMatches(player.id) && !this.spectate) {\n        ship = new Ship(player);\n        ship.isMain = true;\n        this.ships.main = ship;\n      } else {\n        ship = new BasicShip(player);\n      }\n      this.ships.push(ship);\n      player.ship = ship;\n    });\n  }\n\n  setupObjectPools() {\n    var model = {};\n    model.bullets = new Map();\n    model.blocks = new Map();\n    model.subs = new Map();\n\n    this.model = model;\n  }\n\n  setupGame() {\n    this.game = {};\n    this.game.disabled = false; // interaction disabled\n    this.game.ended = false; // game over happened\n    this.game.overtime = false; // game overtime happened\n\n    this.game.scores = new Array(this.teams.length);\n\n    // this.timer = DeepSpaceGame.modes[this.gameMode];\n    switch (this.gameMode) {\n      case 0: // ctf\n\n        // flag whatevers\n        var centerX = this.mapInfo.width / 2;\n        var centerY = this.mapInfo.height / 2;\n        let flag = new Flag(new V2D(centerX, centerY));\n        flag.collision_groups = [this.physics.collision_groups.FLAG];\n        this.setCollisionDivisions(flag);\n        this.game.flag = flag;\n\n        // actual game stats\n        this.game.scores.fill(100);\n        this.game.max = Physics.distance(this.teams[0].spawn_camp.position, {x: centerX, y: centerY});\n        this.game.lead = undefined; // team in the lead\n\n        break;\n\n      case 1:\n\n        this.game.scores.fill(0);\n\n        break;\n    }\n  }\n\n  setupMap() {\n    let map = this.model.map = {},\n      info = this.mapInfo;\n\n    let cX = info.width / 2,\n      cY = info.height / 2;\n\n\n    // IMPERMEABLES\n    let initial_impermeables = [], radii = new Set();\n    for (let radius_size_group of info.impermeables.bodies) {\n      let list = radius_size_group.slice(),\n        radius = list.shift();\n      for (let [x, y] of list) {\n        initial_impermeables.push({\n          radius: radius,\n          position: {x, y}\n        })\n      }\n      radii.add(radius);\n    }\n\n    map.impermeables = [];\n    map.impermeables.radii = radii;\n    // in the future use the 'copies' variable on impermeables\n    // and make it odd symmetry\n    map.impermeables.push(...initial_impermeables)\n    if (info.impermeables.copies >= 2) {\n\n      map.impermeables.push(...(initial_impermeables.map(obj => {\n        return {\n          radius: obj.radius,\n          position: {x: info.width - obj.position.x, y: info.width - obj.position.y}\n        }\n      })));\n\n      if (info.impermeables.copies == 4) {\n\n        map.impermeables.push(...(initial_impermeables.map(obj => {\n          return {\n            radius: obj.radius,\n            position: {x: info.width - obj.position.y, y: obj.position.x}\n          }\n        })));\n\n        map.impermeables.push(...(initial_impermeables.map(obj => {\n          return {\n            radius: obj.radius,\n            position: {x: obj.position.y, y: info.width - obj.position.x}\n          }\n        })));\n\n      }\n\n    }\n\n    for (let imp of map.impermeables) {\n      imp.collision_groups = [this.physics.collision_groups.IMPERMEABLES]\n      this.setCollisionDivisions(imp);\n    }\n\n  }\n\n  setupView() {\n    this.setupPalette();\n    this.configureCreateJS();\n    this.configureProton();\n    this.setupCamera();\n  }\n\n  setupPalette() {\n    this.colors = this.setupData.colors;\n  }\n\n  configureCreateJS() {\n    this.setupCanvas();\n    // populate stage\n    this.createViews();\n  }\n\n  setupCanvas() { // TODO: (revise)\n    var canvas = $('#canvas')[0];\n    canvas.width = document.body.clientWidth;\n    canvas.height = document.body.clientHeight;\n    // if (canvas.width > 1024) canvas.width = 1024;\n    // if (canvas.height > 768) canvas.height = 768;\n    \n    this.scale = Math.sqrt(canvas.width * canvas.height) / Math.sqrt(1024 * 768);\n    // this.scale ;\n\n    var stage = new createjs.Stage();\n    stage.canvas = canvas;\n    stage.snapToPixel = true;\n    // gui.add(stage, 'snapToPixel');\n\n    this.stage = stage;\n\n    this.HDPSupport();\n  }\n\n  HDPSupport() {\n    this.HDPScale = 1;\n    if (window.devicePixelRatio) {\n      const stage = this.stage;\n      const canvas = stage.canvas;\n\n      // grab the width and height from canvas\n      var height = canvas.getAttribute('height');\n      var width = canvas.getAttribute('width');\n      // reset the canvas width and height with window.devicePixelRatio applied\n      canvas.setAttribute('width', Math.round(width * window.devicePixelRatio));\n      canvas.setAttribute('height', Math.round( height * window.devicePixelRatio));\n      // force the canvas back to the original size using css\n      canvas.style.width = width+\"px\";\n      canvas.style.height = height+\"px\";\n      // set CreateJS to render scaled\n      stage.scaleX = stage.scaleY = window.devicePixelRatio;\n      this.HDPScale = 1/window.devicePixelRatio\n    }\n  }\n\n  createViews() {\n    this.view = {\n      grid: {width: 48, height: 48},\n    };\n    this.window = {\n      width: this.stage.canvas.width * this.HDPScale,\n      height: this.stage.canvas.height * this.HDPScale,\n    };\n\n    this.createLayers();\n    this.createBackgroundViews();\n    this.createGameModeSpecificViewsAction();\n    this.createSpawnCampViews()\n    this.createShipViews();\n    this.createPoolViews();\n    this.createOverlayViews();\n  }\n\n  snapToGrid(position) {\n    position.x = Math.round(position.x / this.view.grid.width) * this.view.grid.width\n    position.y = Math.round(position.y / this.view.grid.height) * this.view.grid.height\n  }\n\n  createLayers() {\n    var layer = {}\n\n    layer.background = new createjs.Container();\n    layer.action = new createjs.Container();\n    layer.overlay = new createjs.Container();\n\n    layer.action.back = new createjs.Container();\n    layer.action.front = new createjs.Container();\n    layer.action.addChild(layer.action.back);\n    layer.action.addChild(layer.action.front);\n\n    layer.action.scaleX = layer.action.scaleY = this.scale;\n\n    this.stage.addChild(layer.background);\n    this.stage.addChild(layer.action);\n    this.stage.addChild(layer.overlay);\n\n    this.view.layer = layer;\n  }\n\n  createBackgroundViews() {\n    // var canvas = this.stage.canvas, background = new createjs.Shape();\n    // // background.graphics.beginFill('#37474F').drawRect(0, 0, canvas.width, canvas.height);\n    // // background.cache(0, 0, canvas.width, canvas.height);\n    // // this.view.layer.background.addChild(background);\n    // //\n    // // background = new createjs.Shape();\n    // background.graphics.beginFill('#455A64').drawRect(0, 0, canvas.width, canvas.height);\n    // background.cache(0, 0, canvas.width, canvas.height);\n    // this.view.layer.background.map_background = background;\n    // this.view.layer.background.addChild(background);\n\n\n    var canvas = this.stage.canvas, canvasBackground = new createjs.Shape(), mapBackground = new createjs.Shape();\n    canvasBackground.graphics.beginFill('#37474F').drawRect(0, 0, this.window.width, this.window.height);\n    canvasBackground.cache(0, 0, canvas.width, canvas.height);\n    this.view.layer.background.addChild(canvasBackground);\n\n    const background_width = this.window.width * 2\n    const background_height = this.window.width * 2\n    const hypotenuse = Math.sqrt(Math.sqr(this.window.width) + Math.sqr(this.window.height)) / this.scale;\n    mapBackground.graphics.beginFill('#455A64').drawRect(0, 0, hypotenuse, hypotenuse);\n    mapBackground.cache(0, 0, hypotenuse, hypotenuse);\n    mapBackground.regX = hypotenuse/2;\n    mapBackground.regY = hypotenuse/2;\n    this.view.layer.background.map_background = mapBackground;\n    this.view.layer.action.back.addChild(mapBackground);\n\n  }\n\n  createGameModeSpecificViewsAction() {\n    /*switch(this.gameMode) {\n     case \"ctf\":\n     // ring and flag\n\n     var centerX = this.mapInfo.width / 2;\n     var centerY = this.mapInfo.height / 2;\n\n     var r = DeepSpaceGame.modes[\"ctf\"].ring_radius, s = r * 1.2;\n     var ring = new createjs.Shape(\n     DeepSpaceGame.graphics.ring(r)\n     );\n     ring.cache(-s, -s, s*2, s*2);\n\n     // var r = DeepSpaceGame.modes[\"ctf\"].flag_radius, s = r * 1.2;\n     // var flag = new createjs.Shape(\n     //   DeepSpaceGame.graphics.flag(DeepSpaceGame.modes[\"ctf\"].flag_radius)\n     // );\n     // flag.shadow = DeepSpaceGame.graphics.flag_shadow();\n     // flag.cache(-s, -s, s*2, s*2);\n     //\n     ring.x = centerX; ring.y = centerY;\n     // flag.x = centerX; flag.y = centerY;\n\n\n     this.view.layer.action.back.addChild(ring);\n     // this.view.layer.action.back.addChild(flag);\n\n     // this.view.flag = flag;\n\n     // actual game things\n\n\n     break;\n     }*/\n\n    // create caches\n    var caches = new Map();\n    this.model.map.impermeables.radii.forEach(r => {\n      var view = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r));\n      var s = r * 1.2;\n      view.cache(-s, -s, s * 2, s * 2);\n\n      caches.set(r, view.cacheCanvas);\n    })\n\n    // create views\n    this.view.map = {impermeables: []}\n    this.model.map.impermeables.forEach(block => {\n      var view = new createjs.Bitmap(caches.get(block.radius)),\n        pos = block.position;\n      view.x = pos.x - block.radius * 1.2;\n      view.y = pos.y - block.radius * 1.2;\n      this.view.map.impermeables.push(view)\n      this.view.layer.action.front.addChild(view);\n    });\n\n  }\n\n  createSpawnCampViews() {\n\n    // this.view.teams = { spawn_camp: []}\n\n    // DeepSpaceGame.maps[0].spawn[this.owner.team.game.teams.length][this.owner.team.number]\n    var s = 64 + 3; // radius + border-half\n    this.teams.forEach((team, i) => {\n      var group = new createjs.Container(),\n        camp = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp(team.color)),\n        fill = new createjs.Shape(DeepSpaceGame.graphics.spawn_camp_fill(team.color)),\n        pos = team.spawn_camp.position;\n      fill.alpha = 0.08;\n      group.x = pos.x;\n      group.y = pos.y;\n      group.addChild(fill);\n      group.addChild(camp);\n      group.cache(-s, -s, s * 2, s * 2);\n      team.spawn_camp.view = group;\n      this.view.layer.action.back.addChild(group);\n    });\n  }\n\n  createShipViews() {\n    let our_ship = this.ships.main, our_team;\n    if (our_ship) our_team = our_ship.owner.team;\n    this.ships.forEach((ship) => {\n      let container = new createjs.Container();\n      var hollow = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][0](ship.owner.team.color, ship.isMain ? 4 : 2)),\n        filled = new createjs.Shape(DeepSpaceGame.graphics.ship[ship.owner.type][1](ship.owner.team.color, ship.isMain ? 4 : 2)),\n        s = ship.radius * 1.2;\n      hollow.cache(-s, -s, s * 2, s * 2);\n      filled.cache(-s, -s, s * 2, s * 2);\n      var view = new createjs.Bitmap(hollow.cacheCanvas);\n      view.regX = view.regY = s;\n      view.hollow = hollow.cacheCanvas, view.filled = filled.cacheCanvas; // TODO cache ships with interchangable bitmap instead\n      container.ship = view;\n      container.addChild(view);\n\n      //text\n      if (ship.owner.team == our_team && ship != our_ship) {\n        var text = new createjs.Text(ship.owner.name, \"14px Roboto\", our_team.color);\n        text.textAlign = \"center\";\n        // text.cache(-50, -30, 100, 60)\n        container.text = text;\n        container.addChild(text);\n      }\n\n      // if(ship == our_ship) {\n      //   let color = this.ships.main.owner.team.color,\n      //     view = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\n      //     shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\n      //     offset = { x: 22, y: -22 };\n      //\n      //   view.x = shadow.x = offset.x;\n      //   view.y = shadow.y = offset.y;\n      //\n      //   container.addChild(container.meter_shadow = view.shadow = shadow);\n      //   container.addChild(container.meter = view);\n      // }\n\n\n      this.view.layer.action.front.addChild(ship.view = container);\n    });\n\n    if (our_ship) {\n      let container = our_ship.view,\n        color = this.ships.main.owner.team.color,\n        innerRadius = 5 / this.scale,\n        outerRadius = 7 / this.scale,\n        meter = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1, this.scale)),\n        shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64', this.scale)),\n        offset = {x: 22, y: -22};\n\n      shadow.cache(-outerRadius, -outerRadius, outerRadius*2, outerRadius*2);\n\n      meter.x = shadow.x = offset.x;\n      meter.y = shadow.y = offset.y;\n\n      container.addChild(container.meter_shadow = meter.shadow = shadow);\n      container.addChild(container.meter = meter);\n    }\n  }\n\n  createPoolViews() {\n    this.view.bullets = new Map()\n    this.view.blocks = new Map()\n    this.view.subs = new Map()\n  }\n\n  createOverlayViews() {\n    var overlay = {};\n\n    overlay.score = new createjs.Container();\n    overlay.score.team = [];\n    var imagined_width = 120;\n    this.teams.forEach((team, i) => {\n      var text = new createjs.Text(this.game.scores[i].toString(), \"48px Unica One\", team.color);\n      text.x = (i * imagined_width) + (imagined_width / 2);\n      text.textAlign = \"center\";\n      text.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n      overlay.score.addChild(text);\n      overlay.score.team.push(text);\n    });\n    overlay.score.x = (this.window.width / 2) - ((this.teams.length * imagined_width) / 2)\n    overlay.score.y = 12;\n\n    this.view.layer.overlay.addChild(overlay.score);\n\n\n\n    // energy meter\n    // if(!this.spectate) {\n    //   overlay.ship = {};\n    //   let color = this.ships.main.owner.team.color,\n    //       view = new createjs.Shape(DeepSpaceGame.graphics.energyMeter(this.ships.main.owner.team.color, 1)),\n    //       shadow = new createjs.Shape(DeepSpaceGame.graphics.energyMeterShadow('#455A64')),\n    //       centerX = this.window.width / 2,\n    //       centerY = this.window.height / 2,\n    //       offset = { x: 22, y: -22 };\n    //\n    //   view.x = shadow.x = centerX + offset.x;\n    //   view.y = shadow.y = centerY + offset.y;\n    //\n    //   this.view.layer.overlay.addChild(view.shadow = shadow);\n    //   this.view.layer.overlay.addChild(overlay.ship.energyMeter = view);\n    // }\n\n    // MINI MAP\n    if (!this.spectate) this.createOverlayMinimapViews(overlay, this.view.layer.overlay);\n\n\n\n    // var imagined_width = 512;\n    overlay.message = new createjs.Text(\"\", \"24px Roboto Condensed\");\n    overlay.message.textAlign = \"center\";\n    overlay.message.x = (this.window.width / 2);\n    overlay.message.y = 76;\n    overlay.message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n\n    this.view.layer.overlay.addChild(overlay.message);\n\n    // var imagined_width = 512;\n    overlay.kill_message = new createjs.Text(\"\", \"24px Roboto Condensed\");\n    overlay.kill_message.textAlign = \"center\";\n    overlay.kill_message.x = (this.window.width / 2);\n    overlay.kill_message.y = this.window.height - 76;\n    overlay.kill_message.shadow = new createjs.Shadow(\"#455A64\", 0, 0, 6);\n\n    this.view.layer.overlay.addChild(overlay.kill_message);\n\n    switch (this.gameMode) {\n      case 0: // ctf\n        // var centerX = this.mapInfo.width / 2;\n        // var centerY = this.mapInfo.height / 2;\n\n        var r = DeepSpaceGame.modes[\"ctf\"].flag_radius * this.scale, s = r * 1.2;\n        var flag = new createjs.Shape(\n          DeepSpaceGame.graphics.flag(r)\n        );\n        flag.shadow = DeepSpaceGame.graphics.flag_shadow();\n        flag.cache(-s, -s, s * 2, s * 2);\n\n        // flag.x = centerX; flag.y = centerY;\n\n        this.view.layer.overlay.addChild(flag);\n        this.view.flag = flag;\n\n        break;\n    }\n\n\n    this.view.overlay = overlay;\n  }\n\n  createOverlayMinimapViews(overlay_model, overlay_view) {\n\n    let mini = overlay_model.minimap = new createjs.Container();\n\n    mini.width = mini.height = 168;\n    mini.scale = mini.width / this.mapInfo.width;\n    mini.regX = mini.width/2;\n    mini.regY = mini.height/2;\n    mini.rotation = Math.degrees(-this.ships.main.spawnRotation) - 90;\n\n    let padd = this.window.width < 600 ? 0 : 32;\n    mini.x = (padd) + mini.width/2;\n    mini.y = this.window.height - (padd + mini.height) + mini.height/2\n\n    // background\n    let background = mini.background = new createjs.Shape();\n    background.graphics.beginFill('#263238').drawRect(0, 0, mini.width, mini.height);\n    background.cache(0, 0, mini.width, mini.height);\n    mini.addChild(background);\n\n    // map obstacles\n    var max = 128,\n      r = max * mini.scale,\n      block = new createjs.Shape(DeepSpaceGame.graphics.block_fill('#37474F', r)),\n      s = r * 1.2;\n    block.cache(-s, -s, s * 2, s * 2);\n    var cache = block.cacheCanvas;\n\n    this.model.map.impermeables.forEach(block => {\n      var scale = (block.radius * mini.scale) / r,\n        view = new createjs.Bitmap(cache),\n        pos = block.position;\n      view.scaleX = view.scaleY = scale;\n      view.x = (pos.x * mini.scale) - (scale * cache.width / 2);\n      view.y = (pos.y * mini.scale) - (scale * cache.height / 2);\n      mini.addChild(view);\n    });\n\n    // spawns\n    this.teams.forEach(team => {\n      let camp = team.spawn_camp,\n        radius = team == this.ships.main.owner.team ? 8 : 6,\n        // radius = camp.radius*mini.scale,\n        view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(team.color, 6)),\n        pos = camp.position;\n      view.x = pos.x * mini.scale;\n      view.y = pos.y * mini.scale;\n      var s = radius * 1.2;\n      view.cache(-s, -s, s * 2, s * 2);\n      mini.addChild(view);\n    });\n\n    // flag\n    if(this.gameMode == 0) {\n      let flag_view = mini.flag = new createjs.Shape(DeepSpaceGame.graphics.circle_fill('#ECEFF1', 6))\n      mini.addChild(flag_view);\n    }\n\n    // ships .. hmmm.. intel >.>\n    // (only same team for now)\n    let this_player = this.ships.main.owner, this_team = this_player.team\n    mini.players = [];\n    this_team.players.forEach(player => {\n      let view = new createjs.Shape(DeepSpaceGame.graphics.circle_fill(this_team.color, 4));\n      view.alpha = player == this_player ? 1 : 0.6;\n      mini.players.push(view);\n      mini.addChild(view);\n    });\n\n    // and also eventually blocks\n    mini.blocks = new Map();\n\n\n    overlay_view.addChild(mini);\n  }\n\n  createOverlayMinimapBlockViewFor(block) {\n    let cache = DeepSpaceGame.graphicsCaches.minimap.blocks[block.team],\n      blv = new createjs.Bitmap(cache),\n      mini = this.view.overlay.minimap,\n      scale = mini.scale;\n\n    // blv.alpha = 0.2\n    blv.x = block.position.x * scale;\n    blv.y = block.position.y * scale;\n\n    blv.regX = blv.regY = (cache.width / 2);\n\n    mini.addChild(blv);\n    mini.setChildIndex(blv, 1)\n    mini.blocks.set(block.id, blv);\n\n    // flag always on top\n    // mini.setChildIndex(mini.flag, mini.numChildren-1)\n  }\n\n  destroyOverlayMinimapBlockViewFor(id) {\n    if (!this.spectate) {\n      var v = this.view.overlay.minimap.blocks.get(id);\n      if (v) {\n        this.view.overlay.minimap.blocks.delete(id);\n        this.view.overlay.minimap.removeChild(v);\n      }\n    }\n  }\n\n  configureProton() {\n\n    // functions\n    const bitmapOfColor = (color) => {\n      const graphics = DeepSpaceGame.graphics.block_fill(color, 6);\n      const particle = new createjs.Shape(graphics);\n      particle.cache(-10, -10, 20, 20);\n      const cache = particle.cacheCanvas;\n      return new createjs.Bitmap(cache);\n    };\n\n    // vars and references\n    this.view.proton = {};\n    const stage = this.stage;\n    const canvas = stage.canvas;\n    const view = this.view.layer.action.back;\n    const proton = this.view.proton.main = new Proton();\n    const renderer = this.view.proton.renderer = new Proton.Renderer('easel', proton, view);\n    const emitters = this.view.proton.emitters = new Map();\n\n    const imageTargets = this.view.proton.imageTargets = {};\n    imageTargets.teams = [];\n    imageTargets.death = new Proton.ImageTarget(bitmapOfColor('#FFFFFF'));\n    for(let team of this.teams) {\n      imageTargets.teams.push(new Proton.ImageTarget(bitmapOfColor(team.color)));\n    }\n\n    const util = this.view.proton.util = {};\n    util.hasInitializer = (emitter, initializer) => {\n      return (emitter.initializes.indexOf(initializer) > -1);\n    };\n    \n\n\n\n\n    // for each ship\n    for(let ship of this.ships) {\n      const local = ship === this.ships.main;\n\n      const emitter = new Proton.Emitter();\n      const color = ship.owner.team.color;\n\n      // setup and config\n      const graphics = DeepSpaceGame.graphics.block_fill(color, 6);\n      const particle = new createjs.Shape(graphics);\n      particle.cache(-10, -10, 20, 20);\n      const cache = particle.cacheCanvas;\n      const bitmap = new createjs.Bitmap(cache);\n\n      emitter.rate = new Proton.Rate(1, 0.2);\n      emitter.addInitialize(imageTargets.teams[ship.owner.team.number]);\n      emitter.addInitialize(new Proton.Life(1, 2.5));\n      const force = new Proton.V(new Proton.Span(0.2, 0.6), new Proton.Span(150, 210), 'polar');\n      emitter.addInitialize(force);\n      emitter.force = force;\n\n      emitter.addBehaviour(new Proton.Scale(1, 5));\n      emitter.addBehaviour(new Proton.Alpha(0.2, 0));\n\n      emitter.emit();\n      proton.addEmitter(emitter);\n      emitters.set(ship, emitter);\n\n    }\n\n\n\n    renderer.start();\n\n    // // refresh proton\n    // proton.update();\n\n\n  }\n\n  setupCamera() {\n    this.view.layer.action.width = this.mapInfo.width;\n    this.view.layer.action.height = this.mapInfo.height;\n    this.camera = new Camera(this.stage.canvas, this.view.layer.action, this.scale, this.HDPScale);\n\n    if (this.spectate) {\n      this.activePlayerIndex = 0;\n      // this.playerShipViews = new Map();\n      // this.setupData.players.forEach((p, i)=>{\n      //   this.playerShipViews.set(i, this.players.get(p.id).ship.view);\n      // });\n      this.activePlayers = this.setupData.players.map(p => this.players.get(p[0]));\n      this.updateCameraFocus();\n    } else {\n      this.camera.focus = this.ships.main.view;\n    }\n\n    this.camera.width = this.window.width;\n    this.camera.height = this.window.height;\n  }\n\n  setupListeners() { // (needs (even more) work)\n    this.inputHandlers = new Map();\n    var receiver = window;\n\n    if (this.spectate) {\n      var keyHandler = (e) => {\n        if (e.keyCode == 37) { // left: ◀︎\n          this.activePlayerIndex--;\n          if (this.activePlayerIndex < 0) this.activePlayerIndex = this.activePlayers.length - 1;\n        }\n        if (e.keyCode == 39) { // right: ▶︎\n          this.activePlayerIndex++;\n          if (this.activePlayerIndex >= this.activePlayers.length) this.activePlayerIndex = 0;\n        }\n        this.updateCameraFocus();\n      }\n      receiver.addEventListener('keydown', keyHandler); // onkeydown\n      this.inputHandlers.set('keydown', keyHandler);\n    } else {\n\n\n      const inputs = this.input = {\n        acceleration: 0,\n        angularAcceleration: 0,\n        shoot: false,\n        shootAngle: 0,\n        block: false,\n        sub: false,\n      };\n\n\n      // KEYBOARD\n      // key mappings, have multiple ('values') so you can switch between key bindings\n      // the default values are true / false\n\n      const keyboard = new KeyboardInput();\n\n      const keyboardStack = new InputStack();\n      window.stack = keyboardStack; window.keyboard = keyboard;\n      const keymap = [\n        // up: ▲\n        [\"up\", [38]],\n        // down: ▼\n        [\"dn\", [40]],\n        // left: ◀︎\n        [\"lt\", [37]],\n        // right: ▶︎\n        [\"rt\", [39]],\n        // up: w\n        [\"up2\", [87]],\n        // down: s\n        [\"dn2\", [83]],\n        // left: a\n        [\"lt2\", [65]],\n        // right: d\n        [\"rt2\", [68]],\n        // block: space, v\n        [\"block\", [32, 86]],\n        // sub: e\n        [\"sub\", [69]],\n        // shoot: wsad\n        // [\"shoot\", [87, 83, 65, 68]],\n      ];\n\n      for(const [item, mappings] of keymap) {\n        for(const keycode of mappings) {\n          keyboardStack.addItemWhen(item, keyboard.button(keycode).ontrue);\n          keyboardStack.removeItemWhen(item, keyboard.button(keycode).onfalse);\n        }\n      }\n      keyboardStack.on('change', () => flattenStack(keyboardStack));\n\n      const buttonWeight = 1;\n      const flattenStack = stack => {\n\n        // setup\n        inputs.acceleration = 0;\n        inputs.angularAcceleration = 0;\n        var x2 = 0, y2 = 0, shoot = false, block = false, sub = false;\n\n        // cycle through\n        for (let [input,] of stack.items) {\n          switch (input) {\n            case 'up':\n              inputs.acceleration = buttonWeight;\n              break;\n            case 'dn':\n              inputs.acceleration =-buttonWeight;\n              break;\n            case 'lt':\n              inputs.angularAcceleration =-buttonWeight;\n              break;\n            case 'rt':\n              inputs.angularAcceleration = buttonWeight;\n              break;\n            case 'up2':\n              y2 = -1;\n              shoot = true;\n              break;\n            case 'dn2':\n              y2 = 1;\n              shoot = true;\n              break;\n            case 'lt2':\n              x2 = -1;\n              shoot = true;\n              break;\n            case 'rt2':\n              x2 = 1;\n              shoot = true;\n              break;\n            case 'shoot':\n              shoot = true;\n              break;\n            case 'block':\n              block = true;\n              break;\n            case 'sub':\n              sub = true;\n              break;\n          }\n        }\n\n        // evaluate\n        var directionV = new V2D(x2, y2);\n        inputs.shootAngle = directionV.angle + (Math.PI / 2);\n        inputs.shoot = shoot;\n        inputs.block = block;\n        inputs.sub = sub;\n\n      };\n\n      // let keyHandler = (e) => {\n      //   var type = e.type;\n      //\n      //   if (type == 'keyup' || type == 'keydown') {\n      //     var eventCode = e.keyCode;\n      //\n      //     keymap.forEach((row) => {\n      //       row[1].forEach((code) => {\n      //         if (code == eventCode) {\n      //\n      //           // row[0] e.g. 'up' or 'block'\n      //           // row[2] is value on keydown\n      //           // row[3] is value on keyup\n      //\n      //           if (!type.is('keyup')) {\n      //             if (!inputStack.has(row[0])) {\n      //               inputStack.add(row[0]);\n      //               inputStack.changed = true;\n      //             }\n      //           } else {\n      //             inputStack.delete(row[0])\n      //             inputStack.changed = true;\n      //           }\n      //\n      //           // inputStack.delete(row[0])\n      //           // if(keydown)\n      //           // if(!type.is('keyup')) inputStack.add(row[0]);\n      //\n      //           // NetworkHelper.out_input_stack(Array.from(inputStack));\n      //           // inputStack.changed = true;\n      //           // log(Array.from(inputStack));\n      //         }\n      //       });\n      //     });\n      //\n      //     if(inputStack.changed) flattenStack(inputStack);\n      //   }\n      // };\n\n      // receiver.addEventListener('keydown', keyHandler); // onkeydown\n      // receiver.addEventListener('keyup', keyHandler); // onkeyup\n      //\n      // this.inputHandlers.set('keydown', keyHandler);\n      // this.inputHandlers.set('keyup', keyHandler);\n\n\n\n\n      // GAMEPAD\n\n      /*\n      receiver.addEventListener(\"gamepadconnected\", (e) => this.gamepad = e.gamepad);\n      // this closure has access to the inputStack variable.. the alias for this.ships.main.owner.input\n      // .. thus it is left here .. please revise\n      this.updateGamepadInput = (!navigator.getGamepads) ? () => {\n        } : () => {\n          var gamepad = navigator.getGamepads()[0];\n          if (!gamepad) return;\n\n\n\n\n          // NEW :)\n          const deadZone = 0.15;\n          const buttonMap = new Map([\n\n            ['up', [\n\n              // - y axis\n              gamepad.axes[1] < -deadZone,\n\n              // l trigger\n              gamepad.axes[3] > 0,\n\n              // d-pad north\n\n            ]],\n\n            ['dn', [\n\n              // + y axis\n              gamepad.axes[1] > deadZone,\n\n              // r trigger\n              gamepad.axes[4] > 0,\n\n            ]],\n\n            ['lt', [\n\n              // - x axis\n              gamepad.axes[0] < -deadZone,\n\n            ]],\n\n            ['rt', [\n\n              // - x axis\n              gamepad.axes[0] > deadZone,\n\n            ]],\n\n            ['up2', [\n\n              // - y axis 2\n              gamepad.axes[5] < -deadZone,\n\n            ]],\n\n            ['dn2', [\n\n              // + y axis 2\n              gamepad.axes[5] > deadZone,\n\n            ]],\n\n            ['lt2', [\n\n              // - x axis 2\n              gamepad.axes[2] < -deadZone,\n\n            ]],\n\n            ['rt2', [\n\n              // + x axis 2\n              gamepad.axes[2] > deadZone,\n\n            ]],\n\n            ['shoot', [\n\n              // buttons a & b\n              gamepad.buttons[0].pressed,\n              gamepad.buttons[1].pressed,\n\n            ]],\n\n            ['block', [\n\n              // r shoulder button\n              gamepad.buttons[7].pressed,\n\n            ]],\n\n            ['sub', [\n\n              // buttons x & y\n              gamepad.buttons[3].pressed,\n              gamepad.buttons[4].pressed,\n\n              // l shoulder button\n              gamepad.buttons[6].pressed,\n\n              // r joystick press\n              gamepad.buttons[14].pressed,\n\n            ]],\n\n          ]);\n\n          for(let [code, bindings] of buttonMap) {\n\n            const activation = _(bindings).contains(true);\n\n            if(activation) {\n\n              if(inputStack.has(code)) continue;\n\n              inputStack.add(code);\n              inputStack.changed = true;\n\n            } else {\n\n              if(!inputStack.has(code)) continue;\n\n              inputStack.delete(code);\n              inputStack.changed = true;\n\n            }\n\n          }\n\n\n\n        };\n      */\n\n      // NEWER :D\n\n      const gamepad = new GamepadInput();\n\n      // const buttonMap = new Map([\n      //\n      //   ['up', [\n      //\n      //     // - y axis\n      //     gamepad.axes[1] < -deadZone,\n      //\n      //     // l trigger\n      //     gamepad.axes[3] > 0,\n      //\n      //     // d-pad north\n      //\n      //   ]],\n      //\n      //   ['dn', [\n      //\n      //     // + y axis\n      //     gamepad.axes[1] > deadZone,\n      //\n      //     // r trigger\n      //     gamepad.axes[4] > 0,\n      //\n      //   ]],\n      //\n      //   ['lt', [\n      //\n      //     // - x axis\n      //     gamepad.axes[0] < -deadZone,\n      //\n      //   ]],\n      //\n      //   ['rt', [\n      //\n      //     // - x axis\n      //     gamepad.axes[0] > deadZone,\n      //\n      //   ]],\n      //\n      //   ['up2', [\n      //\n      //     // - y axis 2\n      //     gamepad.axes[5] < -deadZone,\n      //\n      //   ]],\n      //\n      //   ['dn2', [\n      //\n      //     // + y axis 2\n      //     gamepad.axes[5] > deadZone,\n      //\n      //   ]],\n      //\n      //   ['lt2', [\n      //\n      //     // - x axis 2\n      //     gamepad.axes[2] < -deadZone,\n      //\n      //   ]],\n      //\n      //   ['rt2', [\n      //\n      //     // + x axis 2\n      //     gamepad.axes[2] > deadZone,\n      //\n      //   ]],\n      //\n      //   ['shoot', [\n      //\n      //     // buttons a & b\n      //     gamepad.buttons[0].pressed,\n      //     gamepad.buttons[1].pressed,\n      //\n      //   ]],\n      //\n      //   ['block', [\n      //\n      //     // r shoulder button\n      //     gamepad.buttons[7].pressed,\n      //\n      //   ]],\n      //\n      //   ['sub', [\n      //\n      //     // buttons x & y\n      //     gamepad.buttons[3].pressed,\n      //     gamepad.buttons[4].pressed,\n      //\n      //     // l shoulder button\n      //     gamepad.buttons[6].pressed,\n      //\n      //     // r joystick press\n      //     gamepad.buttons[14].pressed,\n      //\n      //   ]],\n      //\n      // ]);\n\n      const deadzone = 0.2;\n      const max = 1;\n      const diff = max - deadzone;\n\n\n      // axes\n\n      keyboardStack.addItemWhen('up', gamepad.axis(1).onlessthan(-deadzone), n => (max + n / diff));\n      keyboardStack.addItemWhen('up', gamepad.axis(3).onmorethan(0));\n      keyboardStack.removeItemWhen('up', gamepad.axis(1).onmorethan(-deadzone));\n      keyboardStack.removeItemWhen('up', gamepad.axis(3).onlessthan(0));\n\n      keyboardStack.addItemWhen('dn', gamepad.axis(1).onmorethan(deadzone), n => (max - n / diff));\n      keyboardStack.addItemWhen('dn', gamepad.axis(4).onmorethan(0));\n      keyboardStack.removeItemWhen('dn', gamepad.axis(1).onlessthan(deadzone));\n      keyboardStack.removeItemWhen('dn', gamepad.axis(4).onlessthan(0));\n\n      keyboardStack.addItemWhen('lt', gamepad.axis(0).onlessthan(-deadzone), n => (max + n / diff));\n      keyboardStack.removeItemWhen('lt', gamepad.axis(0).onmorethan(-deadzone));\n\n      keyboardStack.addItemWhen('rt', gamepad.axis(0).onmorethan(deadzone), n => (max - n / diff));\n      keyboardStack.removeItemWhen('rt', gamepad.axis(0).onmorethan(deadzone));\n\n\n      keyboardStack.addItemWhen('up2', gamepad.axis(5).onlessthan(-deadzone), n => (max + n / diff));\n      keyboardStack.removeItemWhen('up2', gamepad.axis(5).onmorethan(-deadzone));\n\n      keyboardStack.addItemWhen('dn2', gamepad.axis(5).onmorethan(deadzone), n => (max - n / diff));\n      keyboardStack.removeItemWhen('dn2', gamepad.axis(5).onmorethan(deadzone));\n\n      keyboardStack.addItemWhen('lt2', gamepad.axis(2).onlessthan(-deadzone), n => (max + n / diff));\n      keyboardStack.removeItemWhen('lt2', gamepad.axis(2).onmorethan(-deadzone));\n\n      keyboardStack.addItemWhen('rt2', gamepad.axis(2).onmorethan(deadzone), n => (max - n / diff));\n      keyboardStack.removeItemWhen('rt2', gamepad.axis(2).onmorethan(deadzone));\n\n      // buttons\n\n      keyboardStack.addItemWhen('shoot', gamepad.button(0).ontrue);\n      keyboardStack.removeItemWhen('shoot', gamepad.button(0).onfalse);\n      keyboardStack.addItemWhen('shoot', gamepad.button(1).ontrue);\n      keyboardStack.removeItemWhen('shoot', gamepad.button(1).onfalse);\n\n      keyboardStack.addItemWhen('block', gamepad.button(7).ontrue);\n      keyboardStack.removeItemWhen('block', gamepad.button(7).onfalse);\n\n      keyboardStack.addItemWhen('sub', gamepad.button(3).ontrue);\n      keyboardStack.removeItemWhen('sub', gamepad.button(3).onfalse);\n      keyboardStack.addItemWhen('sub', gamepad.button(4).ontrue);\n      keyboardStack.removeItemWhen('sub', gamepad.button(4).onfalse);\n      keyboardStack.addItemWhen('sub', gamepad.button(6).ontrue);\n      keyboardStack.removeItemWhen('sub', gamepad.button(6).onfalse);\n      keyboardStack.addItemWhen('sub', gamepad.button(14).ontrue);\n      keyboardStack.removeItemWhen('sub', gamepad.button(14).onfalse);\n\n\n\n\n\n\n\n\n      // MOBILE\n      let raw_acc_data = [0, 0], applied_acc_data = [0, 0]; // [x, y]\n      let threshold = 1, bias = [0, 0]; // deadzone\n      const minThreshhold = 1;\n      const maxThreshhold = 4;\n      const thresholdSpan = maxThreshhold - minThreshhold;\n      bias = ENV.storage.calibration = (ENV.storage.calibration) ? ENV.storage.calibration.split(\",\").map(Number) : [0, 0];\n      // let origin = [0, bias];\n      if (ENV.mobile && window.DeviceMotionEvent != undefined) {\n        window.ondevicemotion = function (e) {\n          raw_acc_data = [e.accelerationIncludingGravity.x, e.accelerationIncludingGravity.y];\n          // if ( e.rotationRate )  {\n          //   document.getElementById(\"rotationAlpha\").innerHTML = e.rotationRate.alpha;\n          //   document.getElementById(\"rotationBeta\").innerHTML = e.rotationRate.beta;\n          //   document.getElementById(\"rotationGamma\").innerHTML = e.rotationRate.gamma;\n          // }\n        }\n\n        inputs.updateMotion = function () {\n\n          // generate the data\n          \n          let orientation = window.orientation,\n            [raw_x, raw_y] = raw_acc_data, [x, y] = [raw_x, raw_y];\n\n          if (orientation === 90) {\n            x = -raw_y, y = raw_x\n          }\n          else if (orientation === -90) {\n            x = raw_y, y = -raw_x\n          }\n          else if (orientation === 180 || orientation === -180) {\n            x = -x, y = -y\n          }\n\n          applied_acc_data = [x, y];\n          x -= bias[0]; // bias towards player;\n          y -= bias[1];\n\n          if(ENV.options.input.invertControls) { x = -x; y = -y }\n\n          // apply the data\n\n\n          if(x > minThreshhold) { // more\n            if(x < maxThreshhold) inputs.angularAcceleration = (maxThreshhold - x) / thresholdSpan;\n            else inputs.angularAcceleration = 1;\n          } else if(x < -minThreshhold) { // less\n            if(x > -maxThreshhold) inputs.angularAcceleration = (-maxThreshhold - x) / thresholdSpan;\n            else inputs.angularAcceleration = -1;\n          } else { // neither\n            inputs.angularAcceleration = 0;\n          }\n\n          if(y > minThreshhold) { // more\n            if(y < maxThreshhold) inputs.acceleration = (maxThreshhold - y) / thresholdSpan;\n            else inputs.acceleration = 1;\n          } else if(y < -minThreshhold) { // less\n            if(y > -maxThreshhold) inputs.acceleration = (-maxThreshhold - y) / thresholdSpan;\n            else inputs.acceleration = -1;\n          } else { // neither\n            inputs.acceleration = 0;\n          }\n\n          // if (x > threshold) {\n          //   inputStack.add('rt')\n          // } else {\n          //   inputStack.delete('rt')\n          // }\n          // if (x < -threshold) {\n          //   inputStack.add('lt')\n          // } else {\n          //   inputStack.delete('lt')\n          // }\n          // if (y > threshold) {\n          //   inputStack.add('up')\n          // } else {\n          //   inputStack.delete('up')\n          // }\n          // if (y < -threshold) {\n          //   inputStack.add('dn')\n          // } else {\n          //   inputStack.delete('dn')\n          // }\n\n          $('#clock').text(`x: ${x.round(0)}, y: ${y.round(0)}`);\n\n        };\n      }\n\n      var left = document.querySelector('#touch_layer > .left');\n      left.addEventListener('touchstart', e => {\n        inputStack.add('block')\n      });\n      left.addEventListener('touchend', e => {\n        inputStack.delete('block')\n      });\n\n      let joystick = new V2D(), joystick_deadzone_radius = 30;\n      var right = document.querySelector('#touch_layer > .right');\n      right.addEventListener('touchstart', e => {\n        inputStack.add('shoot')\n      });\n      right.addEventListener('touchend', e => {\n        inputStack.delete('shoot');\n        inputStack.delete('up2');\n        inputStack.delete('dn2');\n        inputStack.delete('lt2');\n        inputStack.delete('rt2');\n      });\n      var right_hammer = new Hammer(right);\n      right_hammer.on('panmove', function (e) {\n        var v = new V2D(e.deltaX, e.deltaY), a = v.angle;\n        if (v.length > joystick_deadzone_radius) {\n          if (a < -0.39 && a > -2.74) {\n            inputStack.add('up2')\n          } else {\n            inputStack.delete('up2')\n          }\n          if (a > 0.39 && a < 2.74) {\n            inputStack.add('dn2')\n          } else {\n            inputStack.delete('dn2')\n          }\n          if (a > 1.96 || a < -1.96) {\n            inputStack.add('lt2')\n          } else {\n            inputStack.delete('lt2')\n          }\n          if (a > -1.18 && a < 1.18) {\n            inputStack.add('rt2')\n          } else {\n            inputStack.delete('rt2')\n          }\n        } else {\n\n        }\n        // console.log(e)\n      });\n\n      var hammertime = new Hammer(document.querySelector('#touch_layer'));\n      hammertime.get('tap').set({taps: 2})\n      hammertime.get('swipe').set({direction: Hammer.DIRECTION_LEFT})\n      hammertime.on('tap', function (ev) {\n        inputStack.add('sub');\n        ( () => inputStack.delete('sub') ).wait(200);\n      });\n      hammertime.on('swipe', function (e) {\n        // calibrate\n        bias = applied_acc_data;\n        ENV.storage.calibration = bias;\n      });\n\n\n    }\n\n  }\n\n  setupPhysics() {\n    this.setupCollisionSystem();\n    this.assignCollisionPatterns();\n    this.setupReferenceGroups();\n  }\n\n  setupCollisionSystem() {\n    let physics = this.physics = {};\n\n    physics.block_size = 512;\n    physics.world_size = {width: this.mapInfo.width, height: this.mapInfo.height};\n\n    let rows = Math.ceil(physics.world_size.width / physics.block_size),\n      cols = Math.ceil(physics.world_size.height / physics.block_size);\n\n    physics.divisions = [];\n    // rows.times(i => {\n    //   physics.divisions.push([]);\n    //   cols.times(() => {\n    //     physics.divisions[i].push(new Set())\n    //   })\n    // })\n\n    physics.division_index = function (x, y) {\n      return (y * cols) + x;\n    }\n\n    physics.division_coordinates = function (i) {\n      return [i % rows, Math.floor(i / cols)]\n    }\n\n    /* collision testing will be composed of the following:\n\n     within each division, all the tests will be performed\n     with the objects available\n\n     each division will contain all the collision groups within..\n     they will be populated accordingly so when the tests are run\n     tests between objects listed in the groups in the division\n     will be tested. */\n    physics.collision_checks = [];\n    physics.collision_groups = {\n      SHIPS: Symbol('SHIPS'),\n      OUR_SHIP: Symbol('OUR_SHIP'),\n      OUR_SHIPS: Symbol('OUR_SHIPS'),\n      ENEMY_SHIPS: Symbol('ENEMY_SHIPS'),\n\n      BULLETS: Symbol('BULLETS'),\n      MY_BULLETS: Symbol('MY_BULLETS'),\n      OUR_BULLETS: Symbol('OUR_BULLETS'),\n      ENEMY_BULLETS: Symbol('ENEMY_BULLETS'),\n\n      BLOCKS: Symbol('BLOCKS'),\n      OUR_BLOCKS: Symbol('OUR_BLOCKS'),\n      ENEMY_BLOCKS: Symbol('ENEMY_BLOCKS'),\n\n      OUR_PROJ_SUBS: Symbol('OUR_PROJ_SUBS'),\n\n      SPAWN_CAMPS: Symbol('SPAWN_CAMPS'),\n      OUR_SPAWN_CAMP: Symbol('OUR_SPAWN_CAMP'),\n      ENEMY_SPAWN_CAMPS: Symbol('ENEMY_SPAWN_CAMPS'),\n\n      REFUGE: Symbol('REFUGE'), // block or camp\n      OUR_REFUGE: Symbol('OUR_REFUGE'),\n\n      FLAG: Symbol('FLAG'),\n      IMPERMEABLES: Symbol('IMPERMEABLES')\n    };\n\n\n    (rows * cols).times(() => {\n      let obj = {};\n      for (let group of Object.keys(physics.collision_groups)) obj[physics.collision_groups[group]] = new Set();\n      physics.divisions.push(obj);\n    })\n\n    /*\n     END RESULT LOOKS SOMETHING LIKE:\n     [.. {...}, {SHIPS: [Set], OUR_BULLETS: Set [b, b, ..], ...}, {...}, ...]\n\n     */\n  }\n\n  setCollisionDivisions(physics_body) {\n    this.clearCollisionDivisions(physics_body)\n\n    let d = physics_body.divisions = new Set(),\n      r = physics_body.radius,\n      [x, y] = [physics_body.position.x, physics_body.position.y];\n\n    [[1, 0], [0, -1], [-1, 0], [0, 1]].forEach(unit_offset_array => {\n      let check_x = x + (r * unit_offset_array[0]),\n        check_y = y + (r * unit_offset_array[1]);\n\n      let division_x = Math.floor(check_x / this.physics.block_size),\n        division_y = Math.floor(check_y / this.physics.block_size),\n        division_index = this.physics.division_index(division_x, division_y);\n\n      if (this.physics.divisions[division_index]) d.add(division_index);\n    });\n\n    for (let division_index of d)\n      for (let group of physics_body.collision_groups)\n        this.physics.divisions[division_index][group].add(physics_body);\n  }\n\n  clearCollisionDivisions(physics_body) {\n    if (physics_body.divisions) {\n      for (let i of physics_body.divisions)\n        for (let group of physics_body.collision_groups)\n          this.physics.divisions[i][group].delete(physics_body);\n    }\n  }\n\n  assignCollisionPatterns() {\n    let checks = this.physics.collision_checks,\n      groups = this.physics.collision_groups;\n\n\n    if (!this.spectate) {\n\n      // MY BULLET <-> ENEMY SHIPS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_SHIPS,\n        (bullet, ship) => {\n          if (!bullet.disabled && !ship.disabled) {\n            this.damageShip(ship.owner.id, bullet.hp, bullet.creator)\n            this.removeBullet(bullet.id)\n          }\n        }]\n      );\n\n      // MY BULLET <-> ENEMY BLOCKS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_BLOCKS,\n        (bullet, block) => {\n          if (!bullet.disabled && !block.disabled) {\n            this.damageBlock(block.id, bullet.hp)\n            if (bullet.hp < block.hp) this.removeBullet(bullet.id);\n          }\n        }]\n      );\n\n      // MY BULLET <-> ENEMY SPAWN_CAMPS\n      checks.push([\n        groups.MY_BULLETS,\n        groups.ENEMY_SPAWN_CAMPS,\n        (bullet, spawn_camp) => {\n          if (!bullet.disabled) {\n            this.removeBullet(bullet.id);\n          }\n        }]\n      );\n\n      // OUR BULLET <-> IMPERMEABLES\n      // checks.push([\n      //   groups.OUR_BULLETS,\n      //   groups.IMPERMEABLES,\n      //   (bullet, imp) => {\n      //     if(!bullet.disabled) {\n      //       NetworkHelper.bullet_destroy(bullet.id);\n      //     }\n      //   }]\n      // );\n\n      // // OUR SHIP <-> OUR REFUGE\n      // checks.push([\n      //   groups.OUR_SHIP,\n      //   groups.OUR_REFUGE,\n      //   (ship, refuge) => {\n      //     if(!ship.disabled) ship.charging = true;\n      //   }]\n      // );\n\n      // OUR SHIP <-> FLAG\n      checks.push([\n        groups.OUR_SHIP,\n        groups.FLAG,\n        (ship, flag) => {\n          if (!ship.disabled && flag.idle)\n            if(ship.canPickupFlag())\n              this.assumeFlag(ship);\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY BLOCKS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_BLOCKS,\n        (sub, block) => {\n          if (!sub.disabled && !block.disabled) {\n            switch (sub.type) {\n              case 'attractor':\n              case 'repulsor':\n                // NetworkHelper.sub_destroy(sub.id);\n                // NetworkHelper.block_destroy(block.id);\n                break;\n              case 'block_bomb':\n              case 'missile':\n                sub.explode();\n                break;\n            }\n          }\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY SHIPS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_SHIPS,\n        (sub, ship) => {\n          if (!sub.disabled && !ship.disabled) {\n            if (sub.type == 'missile') {\n              this.damageShip(ship.owner.id, sub.hp, sub.player);\n              this.removeSub(sub.id)\n            }\n          }\n        }]\n      );\n\n      // OUR SUBS <-> ENEMY SPAWN_CAMPS\n      checks.push([\n        groups.OUR_PROJ_SUBS,\n        groups.ENEMY_SPAWN_CAMPS,\n        (sub, spawn_camp) => {\n          if (!sub.disabled) this.removeSub(sub.id);\n        }]\n      );\n\n      // OUR BLOCKS <-> OUR BLOCKS\n      checks.push([\n        groups.OUR_BLOCKS,\n        groups.OUR_BLOCKS,\n        (block_a, block_b) => {\n          if (block_a != block_b && !block_a.disabled && !block_b.disabled)\n            if (Physics.overlap(block_a, block_b) > 0.8) // 0.8\n              this.removeBlock(block_a.id);\n        }]\n      );\n\n    }\n\n    // SHIPS <-> WALL OR CAMP (REFUGE)\n    checks.push([\n      groups.SHIPS,\n      groups.REFUGE,\n      (ship, refuge) => {\n        if (!ship.disabled) {\n          if (ship.owner.team.number != refuge.team) {\n            Physics.bounce(ship, refuge);\n          } else {\n            ship.charging = true;\n          }\n        }\n      }]\n    );\n\n    // SHIPS <-> IMPERMEABLES\n    checks.push([\n      groups.SHIPS,\n      groups.IMPERMEABLES,\n      (ship, imp) => {\n        if (!ship.disabled) {\n          Physics.bounce(ship, imp);\n        }\n      }]\n    );\n\n    // BULLETS <-> IMPERMEABLES\n    checks.push([\n      groups.BULLETS,\n      groups.IMPERMEABLES,\n      (bullet, imp) => {\n        if (!bullet.disabled) {\n          if (Physics.overlap(bullet, imp) < 0.1) {\n            Physics.bounce(bullet, imp);\n          } else {\n            this.removeBullet(bullet.id);\n          }\n        }\n      }]\n    );\n\n  }\n\n  setupReferenceGroups() {\n    var refGroups = {};\n\n    refGroups.enemyBlocks = new Set();\n    refGroups.enemySubs = new Set();\n\n    refGroups.animate = new Set();\n\n    // this.collisionGroups = groups;\n    this.refGroups = refGroups;\n  }\n\n  setupLoop() {\n    var FPS = n => 1000 / n;\n    window.getAnimationFrame =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function (callback) {\n        window.setTimeout(callback, FPS(60))\n      };\n\n    this.setupDT();\n  }\n\n  setupDT() {\n    this.last_time = (new Date()).getTime();\n\n    // the variable percentage of a second that has gone by since the last frame\n    // usually expressed: 0.016 when running 60 fps\n    this.dt = 0;\n  }\n\n  updateDT() {\n    let now = (new Date()).getTime();\n    this.dt = (now - this.last_time) / 1000;\n    this.last_time = now;\n  }\n\n  setupReferences() {\n    this.setupShortcutsToCommonCalls();\n    this.setupFinishCollisionAssignment();\n    this.setupGraphicsCaches();\n  }\n\n  setupShortcutsToCommonCalls() {\n    if (!this.spectate) {\n      // model references\n      this.enemyTeams = this.teams.filter(team => team.number != this.ships.main.owner.team.number);\n      this.enemyPlayers = this.enemyTeams.reduce((list, team) => list.concat(team.players), []);\n\n      this.player = this.ships.main.owner;\n      this.team = this.player.team;\n    }\n  }\n\n  setupFinishCollisionAssignment() {\n    /*\n     this method is run near end of the setup since things like ships and players\n     and teams and everything else is assigned and references can be made to the\n     local players team and such..\n     */\n\n    // spawn camps\n    this.teams.forEach(team => {\n      let spawn_c = team.spawn_camp;\n      spawn_c.collision_groups = [this.physics.collision_groups.SPAWN_CAMPS, this.physics.collision_groups.REFUGE] // TODO COLLISION OR PHYSICS CLASS PROTOCOLS\n      if (team == this.team) {\n        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_SPAWN_CAMP);\n        spawn_c.collision_groups.push(this.physics.collision_groups.OUR_REFUGE);\n      } else {\n        spawn_c.collision_groups.push(this.physics.collision_groups.ENEMY_SPAWN_CAMPS);\n      }\n      this.setCollisionDivisions(spawn_c);\n    });\n\n    // ships\n    this.ships.forEach(ship => {\n      ship.collision_groups = [this.physics.collision_groups.SHIPS];\n      if (ship == this.ships.main) ship.collision_groups.push(this.physics.collision_groups.OUR_SHIP);\n      ship.collision_groups.push((ship.owner.team == this.team) ? this.physics.collision_groups.OUR_SHIPS : this.physics.collision_groups.ENEMY_SHIPS)\n    });\n  }\n\n  setupGraphicsCaches() {\n    // TODO: deinit graphics caches\n\n    // cache background\n    // this.view.layer.background.cache(0, 0, this.mapInfo.width, this.mapInfo.height);\n\n    // create single cache for common objects\n    this.setupCommonGraphicsCachePool();\n  }\n\n\n  setupCommonGraphicsCachePool() {\n    let gc = DeepSpaceGame.graphicsCaches = {};\n\n    // bullets\n    gc.bullets = [];\n    this.teams.forEach(team => {\n\n      // always caching the largest version\n      let radius = Bullet.stats.MAX_RADIUS;\n\n      let v = new createjs.Shape(\n        DeepSpaceGame.graphics.particle(this.teams[team.number].color, radius)\n      );\n\n      var s = radius * 1.2;\n      v.cache(-s, -s, s * 2, s * 2);\n\n      gc.bullets[team.number] = v.cacheCanvas;\n    });\n\n    // blocks\n    gc.blocks = {\n      unlocked: [],\n      locked: [],\n      enemy: []\n    };\n    this.teams.forEach(team => {\n\n      // always caching the largest version\n      let radius = Block.stats.MAX_RADIUS;\n\n\n      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(this.teams[team.number].color, radius)),\n        border = new createjs.Shape(DeepSpaceGame.graphics.block_border(this.teams[team.number].color, radius));\n\n      var s = radius * 1.2;\n      let c;\n\n      // enemy\n      c = new createjs.Container();\n      fill.alpha = 0.24;\n      c.addChild(fill);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.enemy[team.number] = c.cacheCanvas;\n\n      // unlocked\n      // fill.alpha = 0.16;\n      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius))\n      c = new createjs.Container();\n      c.addChild(fill);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.unlocked[team.number] = c.cacheCanvas;\n\n      // locked\n      // fill.alpha = 1;\n      // fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#455A64', 40), radius))\n      c = new createjs.Container();\n      c.addChild(fill);\n      // c.addChild(border);\n      c.cache(-s, -s, s * 2, s * 2);\n      gc.blocks.locked[team.number] = c.cacheCanvas;\n    });\n\n    // minimap\n    if (this.spectate) return; // TODO make minimap accesible to all even spectators\n    gc.minimap = {blocks: []};\n    this.teams.forEach(team => {\n      // '#37474F'\n      let radius = Block.stats.MAX_RADIUS * this.view.overlay.minimap.scale;\n\n      let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(COLOR.mix(this.teams[team.number].color, '#37474F', 40), radius));\n\n      var s = radius * 1.2;\n      // fill.alpha = 0.16;\n      fill.cache(-s, -s, s * 2, s * 2);\n      gc.minimap.blocks[team.number] = fill.cacheCanvas;\n    });\n    // (()=>{\n    //   let radius = 128 * this.view.overlay.minimap.scale;\n    //\n    //   let fill = new createjs.Shape(DeepSpaceGame.graphics.block_fill(, radius));\n    //\n    //   var s = radius * 1.2;\n    //   // fill.alpha = 0.16;\n    //   fill.cache(-s, -s, s*2, s*2);\n    //   gc.minimap.blocks[team.number] = fill.cacheCanvas;\n    //\n    //   gc.minimap.impermeables = ;\n    // })\n  }\n\n  actualize() {\n    // bring an outside game up to speed\n    // DEPRECIATED :: .. no client can join match after start\n\n    // scores\n    // this.setupData.state.scores.forEach((entry) => {\n    //   this.game.scores[entry.t] = entry.s\n    // });\n    this.setupData.teams.forEach((team, i) => {\n      this.game.scores[i] = 100\n    });\n\n    // flag\n    // var holder;\n    // setTimeout(() => {\n    //   if (holder = this.setupData.state.flagHolder) this.pickupFlag(holder);\n    // }, 100);\n\n    // disconnects\n    // this.setupData.disconnects.forEach(id => this.disconnectPlayer(id))\n\n  }\n\n\n  loop() {\n    // stats.begin();\n    this.updateDT();\n    this.update();\n    this.log();\n    // stats.end();\n\n    // NetworkHelper.release();\n\n    getAnimationFrame(() => this.game.ended ? true : this.loop())\n  }\n\n  update() {\n    // this function duty is as follows:\n    // to update all the moving parts pertaining to the current/local user.\n    // any collisions should be sent back to the server to sync the changes.\n    var over = this.game.disabled;\n    if (!over) this.updateInput();\n    this.updateModel(); // TODO: improve performance\n    if (!over) this.checkForCollisions();\n    // if(this.isHost) this.generateMapEntities();\n\n    if (!over) this.updateGame();\n\n    this.updateView();\n  }\n\n  updateInput() {\n    // if(!this.spectate) this.updateGamepadInput();\n    if(!this.spectate) if(this.input.updateMotion) this.input.updateMotion();\n  }\n\n  // updateGamepadInput() {}\n\n  updateModel() {\n    this.updateShips();\n    this.broadcastShip();\n\n    this.updateBullets();\n    this.updateBlocks();\n    this.updateSubs();\n  }\n\n  updateShips() {\n    for (var ship of this.ships) {\n\n      ship.update(this.dt);\n\n      if (ship == this.ships.main && !ship.disabled) {\n\n        const input = this.input;\n\n        // new abstraction\n        ship.acceleration = ship.LINEAR_ACCELERATION_LIMIT * input.acceleration;\n        ship.angular_acceleration = ship.ANGULAR_ACCELERATION_LIMIT * input.angularAcceleration;\n        ship.relative_shoot_angle = input.shootAngle;\n        if(input.shoot)\n          if(ship.canShoot())\n            this.addBullet(ship);\n\n        if(input.block) {\n          if(ship.canBlock()) {\n            while(ship.reachedBlockLimit) this.removeBlock(ship.oldestBlockID())\n            this.addBlock(ship)\n          }\n        }\n        if(input.sub) {\n          if(ship.flag) {\n            this.releaseFlag()\n          } else {\n            if(ship.canSub())\n              this.addSub(ship);\n          }\n        }\n\n\n\n\n        // var input = ship.owner.input,\n        //   x = 0, y = 0, x2 = 0, y2 = 0,\n        //   s = false;\n        //\n        // for (var prop of input) {\n        //   switch (prop) {\n        //     case 'up':\n        //       y = 1;\n        //       // y = -1;\n        //       break;\n        //     case 'dn':\n        //       y = -1;\n        //       // y = 1;\n        //       break;\n        //     case 'lt':\n        //       x = -1;\n        //       break;\n        //     case 'rt':\n        //       x = 1;\n        //       break;\n        //     case 'up2':\n        //       y2 = -1;\n        //       break;\n        //     case 'dn2':\n        //       y2 = 1;\n        //       break;\n        //     case 'lt2':\n        //       x2 = -1;\n        //       break;\n        //     case 'rt2':\n        //       x2 = 1;\n        //       break;\n        //     case 'sub':\n        //       // if(!ship.flag) ship.sub();\n        //       if(ship.flag) {\n        //         this.releaseFlag()\n        //       } else {\n        //         if(ship.canSub())\n        //           this.addSub(ship);\n        //       }\n        //       break;\n        //     case 'block':\n        //       if(ship.canBlock()) {\n        //         while(ship.reachedBlockLimit) this.removeBlock(ship.oldestBlockID())\n        //         this.addBlock(ship)\n        //       }\n        //       break;\n        //     case 'shoot':\n        //       s = true;\n        //       break;\n        //   }\n        // }\n        //\n        // // ship.acceleration.set({x, y})\n        // // if (ship.acceleration.length) ship.acceleration.length = ship.LINEAR_ACCELERATION_LIMIT;\n        // //\n        // // // if(ship.acceleration.length) ship.angle = ship.acceleration.angle\n        // // if (ship.velocity.length) ship.angle = ship.velocity.angle;\n        //\n        // var direction_v = new V2D(x2, y2)\n        // ship.relative_shoot_angle = direction_v.length ? direction_v.angle + (Math.PI/2) : 0;\n        //\n        //\n        // // new ship controls\n        // ship.acceleration = ship.LINEAR_ACCELERATION_LIMIT * y;\n        // ship.angular_acceleration = ship.ANGULAR_ACCELERATION_LIMIT * x;\n        //\n        //\n        // // if(direction_v.length) ship.shoot();\n        //\n        //\n        // if (s || direction_v.length)\n        //   if (ship.canShoot())\n        //     this.addBullet(ship);\n      }\n\n      // validate new position TODO (revise)\n      let r = ship.radius + 8;\n      if (ship.position.x - r < 0) {\n        ship.position.x = r;\n        ship.velocity.x = 0\n      }\n      if (ship.position.y - r < 0) {\n        ship.position.y = r;\n        ship.velocity.y = 0\n      }\n      if (ship.position.x + r > this.mapInfo.width) {\n        ship.position.x = this.mapInfo.width - r;\n        ship.velocity.x = 0;\n      }\n      if (ship.position.y + r > this.mapInfo.height) {\n        ship.position.y = this.mapInfo.height - r;\n        ship.velocity.y = 0;\n      }\n\n      this.setCollisionDivisions(ship);\n\n      // if(ship.position.x < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.height))\n      // if(ship.position.y < 0) Physics.bounce_off_line(ship, V2D.new(0, 0), V2D.new(0, this.mapInfo.width))\n      // if(ship.position.x > this.mapInfo.width) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.height))\n      // if(ship.position.y > this.mapInfo.height) Physics.bounce_off_line(ship, V2D.new(0, this.mapInfo.width))\n\n      // if(ship.position.x < 0) ship.position.x = this.mapInfo.width;\n      // if(ship.position.y < 0) ship.position.y = this.mapInfo.height;\n      // if(ship.position.x > this.mapInfo.width) ship.position.x = 0;\n      // if(ship.position.y > this.mapInfo.height) ship.position.y = 0;\n    }\n  }\n\n  broadcastShip() {\n    var ship, input;\n    if ((ship = this.ships.main) && (input = ship.owner.input)) {\n      if (input.changed) {\n        // log(Array.from(input));\n        // NetworkHelper.out_input_stack(Array.from(input));\n        input.changed = false;\n      }\n\n      this.network.sendShipUpdate(ship.export_update());\n\n      if ((new Date()).getTime() % 60 < 2) this.network.sendShipOverride(ship.export_override());\n      if (ship.flag && ship.disabled) this.releaseFlag();\n      // if(ship.flag && ship.disabled && !this.game.flag.idle) NetworkHelper.out_flag_drop();\n    }\n  }\n\n  updateBullets() {\n    this.model.bullets.forEach(b => {\n      b.update(this.dt);\n      this.setCollisionDivisions(b)\n    });\n    // this.model.bullets.forEach(b => { b.update(); if(b.disabled) NetworkHelper.out_bullet_destroy(b.id) });\n  }\n\n  updateBlocks() { // needs needs work\n    this.model.blocks.forEach(b => {\n      if (b.locked) return;\n      if (b.qualified) {\n        this.snapToGrid(b.position);\n        b.scale = 1;\n        this.setCollisionDivisions(b);\n        if (!this.spectate) this.createOverlayMinimapBlockViewFor(b);\n        if (!this.spectate) if (b.team != this.team.number) this.refGroups.enemyBlocks.add(b); // TODO REVISE AFTER NEW COLLISION SYSTEM!!\n        b.locked = true;\n        b.qualified = false;\n      }\n      b.update(this.dt);\n      // if(b.disabled) NetworkHelper.out_block_destroy(b.id) // due to aging\n    });\n  }\n\n  updateSubs() {\n    this.model.subs.forEach(p => {\n      p.update(this.dt);\n      if (p.collision_groups) this.setCollisionDivisions(p);\n\n      switch (p.type) {\n        case 'attractor':\n        case 'repulsor':\n\n          // field effects TODO is games responsibility..? dt is passed to subs themseves..\n          var distance, direction;\n          this.model.bullets.forEach((b) => {\n            if (!b.disabled && p.team != b.team) {\n              if ((distance = Physics.distance(b.position, p.position)) < p.RANGE) {\n                var force = new V2D();\n                direction = p.position.copy();\n                direction.sub(b.position);\n                force.length = p.INTENSITY_FUNCTION(distance);\n                force.angle = direction.angle;\n                if (p.type == 'repulsor') force.angle = force.angle - Math.PI;\n                b.velocity.add(force);\n                b.velocity.length *= 0.94; // friction TODO\n              }\n            }\n          });\n\n          break;\n        case 'block_bomb':\n\n\n          if (p.exploding) {\n\n            // only the player who created it hands out damage to the blocks so it is done once\n            var ship;\n            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\n              var distance;\n              this.refGroups.enemyBlocks.forEach(block => {\n                if (block && !block.disabled) {\n                  if ((distance = Physics.distance(block.position, p.position)) < p.EXPLOSION_RANGE) {\n                    this.damageBlock(block.id, p.EXPLOSION_DAMAGE_FUNCTION(distance));\n                  }\n                }\n              });\n            }\n\n            // the player is the only one who must wait, the others have been notified to endSub\n            this.removeSub(p.id);\n          }\n\n          break;\n        case 'stealth_cloak':\n          if(p.disabled) ENV.game.destroySub(p.id);\n          break;\n        case 'missile':\n\n          // targeting\n          if (p.target && (Physics.distance(p.target.position, p.position) > p.VISION_RANGE || p.target.stealth)) p.target = null;\n          this.ships.forEach(ship => {\n            if (ship && !ship.disabled && !ship.stealth && ship.owner.team.number != p.team) {\n              if (!p.target && ((distance = Physics.distance(ship.position, p.position)) < p.VISION_RANGE)) {\n                p.target = ship;\n              }\n            }\n          });\n\n          // exploding\n          if (p.exploding) {\n\n            // only the player who created it hands out damage to the blocks so it is done once\n            var ship;\n            if ((ship = this.ships.main) && (ship.subs.has(p.id))) {\n              var distance;\n              this.refGroups.enemyBlocks.forEach(block => {\n                if (block && !block.disabled) {\n                  if ((distance = Physics.distance(block.position, p.position) - block.radius) < p.EXPLOSION_RANGE) {\n                    this.changeBlock(block.id, ship.owner.team.number)\n                    if(!this.spectate) this.ships.main.blocks.add(block.id);\n                  }\n                }\n              });\n            }\n\n            // the player is the only one who must wait, the others have been notified to endSub\n            this.removeSub(p.id);\n          }\n\n          break;\n        default:\n          break;\n      }\n\n\n    });\n\n  }\n\n  checkForCollisions() {\n    // in theory, the user will only check\n    // collisions of those things which it\n    // created. though in practice, perhaps\n    // just it's attack moves. e.g. bullets\n\n    for (let div of this.physics.divisions) {\n      for (var [a_type, b_type, check] of this.physics.collision_checks)\n        for (let body_a of div[a_type])\n          for (let body_b of div[b_type])\n            if (Physics.doTouch(body_a, body_b))\n              check(body_a, body_b);\n    }\n\n  }\n\n  updateGame() {\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        var flag = this.game.flag;\n        if (!flag.idle) {\n          var player = this.players.get(flag.holderID),\n            p = player.ship.last_known_position,\n            camp = player.team.spawn_camp;\n          flag.position.x = p.x;\n          flag.position.y = p.y;\n\n          this.setCollisionDivisions(flag);\n\n          // real game stuff\n          var distance = Physics.distance(p, camp.position) - camp.radius,\n            percent = distance / this.game.max,\n            low_score = this.game.scores[player.team.number],\n            current_score = Math.round(percent * 100);\n\n          if (current_score < low_score && current_score >= 0) this.game.scores[player.team.number] = current_score;\n\n          if ((percent < 0) && player == this.player) this.network.sendFlagProgress([player.team.number, current_score])\n          // this.network.out_game_over(player.team.number);\n\n\n          // LEAD COMPARISON\n          // replace lead if none exists\n          if (!this.game.lead) this.game.lead = player.team;\n\n          // replace lead if record shows\n          if (current_score < this.game.scores[this.game.lead.number]) {\n\n            if (!this.spectate) {\n              // if you are replacing\n              if (player.team == this.team) {\n                let c = this.team.color;\n                this.alert(\n                  DeepSpaceGame.localizationStrings.alerts['teamTakesLead'][this.language]()\n                  , c);\n                this.network.sendFlagProgress([player.team.number, current_score])\n                // if (this.game.overtime) this.network.out_game_over(this.team.number);\n              }\n              // if you are being replaced\n              else if (this.game.lead == this.team) {\n                let c = player.team.color;\n                this.alert(\n                  DeepSpaceGame.localizationStrings.alerts['teamLosesLead'][this.language]()\n                  , c);\n              }\n            }\n\n            this.game.lead = player.team;\n          }\n\n\n        }\n\n        break;\n\n      case 1:\n\n\n\n        break;\n\n    } // end switch\n\n\n  }\n\n  updateView() {\n    this.updateShipViews();\n    this.updateBulletViews();\n    this.updateBlockViews();\n    this.updateSubViews();\n\n    this.updateCamera();\n    this.updateBackground();\n    this.updateMap();\n    // this.updateTINT();\n    // this.updateGrid();\n\n    this.updateGameViews();\n\n    if (!this.spectate) this.updateMinimapView();\n\n    this.updateProton();\n\n    this.stage.update(); // render changes!!\n  }\n\n  updateShipViews() {\n    this.ships.forEach((ship) => {\n\n      const isVisible = ( ship.view.visible = this.camera.showing(ship) );\n      const shipIsVisible = ( ship.view.visible = this.camera.showing(ship) );\n\n      if (ship.view.visible = this.camera.showing(ship) || ship.view == this.camera.focus) {\n\n        let visibility = 1;\n        if(ship.disabled) {\n          visibility = 0;\n        } else {\n          if(this.game.flag && this.game.flag.holderID === ship.owner.id) {\n            visibility = 1;\n          } else {\n            if(ship.owner.team != this.team && ship.charging) {\n              visibility = 0;\n            } else if(ship.stealth) {\n              if (ship.owner.team == this.team) {\n                visibility = Math.flipCoin(0.2) ? 0 : 0.4;\n              } else {\n                visibility = 0;\n              }\n            }\n          }\n        }\n\n        let ship_view = ship.view.ship;\n        ship_view.alpha = ship.health * visibility;\n        ship_view.rotation = Math.degrees(ship.angle);\n\n        ship.view.x = ship.position.x;\n        ship.view.y = ship.position.y;\n\n        // ship.view.graphics.clear();\n        ship_view.image = ((ship.flag) ? ship_view.filled : ship_view.hollow);\n      }\n\n    });\n    this.updateEnergyMeterView();\n    this.updateNameViews();\n  }\n\n  updateEnergyMeterView() {\n    if (this.spectate) return;\n\n    let ship = this.player.ship,\n      meterView = ship.view.meter,\n      shadowView = meterView.shadow,\n      percent = ship.energy / 100,\n      offset = V2D.new({angle: ship.angle + (Math.PI/4), length: 30 / this.scale});\n    meterView.graphics = DeepSpaceGame.graphics.energyMeter(this.team.color, percent, this.scale);\n    meterView.alpha = shadowView.alpha = ship.disabled ? 0 : 1;\n    meterView.x = shadowView.x = offset.x\n    meterView.y = shadowView.y = offset.y\n    meterView.rotation = shadowView.rotation = Math.degrees(ship.angle + Math.PI/2)\n  }\n\n  updateNameViews() {\n    if (this.spectate) return;\n\n    let our_ship = this.ships.main, our_team;\n    if (our_ship) our_team = our_ship.owner.team;\n\n    this.ships.forEach((ship) => {\n      if (ship.owner.team == our_team && ship != our_ship) {\n        let textView = ship.view.text,\n            offset = V2D.new({angle: our_ship.angle, length: 30});\n        textView.x = offset.x\n        textView.y = offset.y\n        textView.rotation = Math.degrees(our_ship.angle + Math.PI/2)\n      }\n    });\n\n  }\n\n  updateBulletViews() {\n    var views = this.view.bullets;\n    this.model.bullets.forEach(b => {\n      let v = views.get(b.id);\n      if(this.camera.showing(b)) {\n        if(!v) v = this.createBulletView(b)\n        v.x = b.position.x;\n        v.y = b.position.y;\n      } else {\n        if(v) this.destroyBulletView(b.id);\n      }\n    });\n  }\n\n  updateBlockViews() {\n    var views = this.view.blocks;\n    this.model.blocks.forEach(b => {\n      var v = views.get(b.id);\n\n      if(this.camera.showing(b)) {\n        if(!v) v = this.createBlockView(b)\n        v.alpha = (b.health * 0.9 + 0.1);\n        v.x = b.position.x;\n        v.y = b.position.y;\n        v.scaleX = v.scaleY = (b.radius / Block.stats.MAX_RADIUS) * b.scale;\n        if (b.qualified) {\n          let type = b.isForeign ? 'enemy' : 'locked';\n          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\n        }\n      } else {\n        if(v) this.destroyBlockView(b.id);\n      }\n\n    });\n  }\n\n  updateSubViews() {\n    var views = this.view.subs;\n    this.model.subs.forEach(s => {\n      var v = views.get(s.id);\n      if (v && (v.visible = this.camera.showing(s))) {\n        v.x = s.position.x;\n        v.y = s.position.y;\n        v.rotation = Math.degrees(s.rotation);\n      }\n    });\n  }\n\n  updateCamera() {\n    this.camera.update();\n    // if(camera.position)\n  }\n\n  updateBackground() {\n    \n    const background = this.view.layer.background.map_background;\n    const map_width = this.mapInfo.width;\n    const map_height = this.mapInfo.height;\n    const half_window_width = this.window.width/2;\n    const half_window_height = this.window.height/2;\n    const half_background_width = background.cacheCanvas.width / 2;\n    const half_background_height = background.cacheCanvas.height / 2;\n    let backgroundPositionVector = V2D.new(this.camera.focus);\n    const centerOffset = V2D.new({x: this.camera.offset.x - half_window_width, y: this.camera.offset.y - half_window_height});\n\n    centerOffset.div(this.scale)\n    centerOffset.angle = Math.radians(this.camera.focus.ship.rotation);\n    backgroundPositionVector.add(centerOffset);\n\n    // edges\n    if (backgroundPositionVector.x < half_background_width) backgroundPositionVector.x = half_background_width;\n    if (backgroundPositionVector.y < half_background_height) backgroundPositionVector.y = half_background_height;\n\n\n    if (backgroundPositionVector.x > map_width - half_background_width) backgroundPositionVector.x = map_width - half_background_width;\n    if (backgroundPositionVector.y > map_height - half_background_height) backgroundPositionVector.y = map_height - half_background_height;\n\n\n    background.x = backgroundPositionVector.x;\n    background.y = backgroundPositionVector.y;\n\n    background.rotation = - 90;\n\n\n\n\n    // let background = this.view.layer.background.map_background,\n    //     full_map_width = this.mapInfo.width,\n    //     full_map_height = this.mapInfo.height,\n    //     {x, y} = this.camera.focus,\n    //     half_window_width = this.window.width/2,\n    //     half_window_height = this.window.height/2;\n    //\n    // if(x < half_window_width) background.x = half_window_width - x;\n    // if(x > (full_map_width - half_window_width)) background.x = full_map_width - half_window_width - x;\n    //\n    // if(y < half_window_height) background.y = half_window_height - y;\n    // if(y > (full_map_height - half_window_height)) background.y = full_map_height - half_window_height - y;\n  }\n\n  updateMap() {\n    this.teams.forEach(team => {\n      team.spawn_camp.view.visible = this.camera.showing(team.spawn_camp);\n    })\n\n    this.model.map.impermeables.forEach((imp, i) => {\n      this.view.map.impermeables[i].visible = this.camera.showing(imp);\n    });\n\n  }\n\n  updateTINT() {\n    try {\n      if (TINT) TINT.setAngleOffset(-this.camera.focus.ship.rotation)\n    } catch (e) {\n      log('tint load failed')\n    }\n  }\n\n  updateGrid() {\n    var focus = this.camera.focus;\n    if (focus) GRID.offset(-focus.x, -focus.y)\n  }\n\n  updateGameViews() {\n\n    const list = this.calculateTeamScoreAppearance();\n\n    this.view.overlay.score.team.forEach((text, i) => {\n      text.text = this.game.scores[i];\n      // text.scaleX = text.scaleY = (this.teams[i] == this.game.lead ? 1 : 0.86);\n\n      if(this.gameMode == 0) // todo FIX --     export logic to another function to know which is larger\n        text.scaleX = text.scaleY = (list[i] ? 1 : 0.86);\n    })\n\n    if(this.gameMode == 0)\n      this.updateFlagView();\n\n  }\n\n  calculateTeamScoreAppearance() {\n\n    const list = [];\n\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        for(let team of this.teams)\n          list.push(team.players.map(p => p.id).indexOf(this.game.flag.holderID) != -1)\n\n        break;\n\n      case 1: // territory\n\n        const bestScore = _(this.game.scores).max();\n        _(this.game.scores).each(score => list.push(score == bestScore))\n\n        break;\n\n    }\n\n    return list;\n  }\n\n  updateFlagView() {\n    var v = this.view.flag, flag = this.game.flag;\n\n    var not_visible = false;\n    let newPosition = new V2D(flag.position.x - this.camera.plane.regX, flag.position.y - this.camera.plane.regY)\n    newPosition.angle -= Math.radians(this.camera.focus.ship.rotation + 90)\n    newPosition.mul(this.scale)\n    newPosition.add({x: this.camera.plane.x, y: this.camera.plane.y})\n    v.x = newPosition.x;\n    v.y = newPosition.y;\n    var padding = (flag.radius * 2)\n    if (v.x < padding) {\n      v.x = padding;\n      not_visible = true;\n    }\n    if (v.x > this.window.width - padding) {\n      v.x = this.window.width - padding;\n      not_visible = true;\n    }\n    if (v.y < padding) {\n      v.y = padding;\n      not_visible = true;\n    }\n    if (v.y > this.window.height - padding) {\n      v.y = this.window.height - padding;\n      not_visible = true;\n    }\n\n    v.alpha = not_visible ? 0.3 : (flag.idle ? 1 : 0);\n\n\n    // var v = this.view.flag, flag = this.game.flag;\n    //\n    // var not_visible = false;\n    // v.x = flag.position.x + this.camera.plane.x;\n    // v.y = flag.position.y + this.camera.plane.y;\n    // var padding = (flag.radius * 2)\n    // if(v.x < padding) { v.x = padding; not_visible = true; }\n    // if(v.x > this.window.width - padding) { v.x = this.window.width - padding; not_visible = true; }\n    // if(v.y < padding) { v.y = padding; not_visible = true; }\n    // if(v.y > this.window.height - padding) { v.y = this.window.height - padding; not_visible = true; }\n    //\n    // v.alpha = not_visible ? 0.1 : (flag.idle ? 1 : 0);\n  }\n\n  updateMinimapView() {\n    let mini = this.view.overlay.minimap;\n\n    // ships\n    this.team.players.forEach((player, i) => {\n      mini.players[i].x = player.ship.position.x * mini.scale;\n      mini.players[i].y = player.ship.position.y * mini.scale;\n    })\n\n\n    // flag\n    if(this.gameMode == 0) {\n      let flag = this.game.flag;\n      mini.flag.x = flag.position.x * mini.scale;\n      mini.flag.y = flag.position.y * mini.scale;\n    }\n\n  }\n\n  updateCameraFocus() {\n    this.camera.focus = this.activePlayers[this.activePlayerIndex].ship.view;\n  }\n\n  updateProton() {\n\n    const timingFunction = BezierEasing(0.0, 0.0, 0.2, 1);\n    const slowest = 0.1; const fastest = 0.02;\n    const defaultMinAngle = 150; const defaultMaxAngle = 210;\n\n    for(const [ship, emitter] of this.view.proton.emitters) {\n\n      if(ship.disabled) {\n        if(!this.view.proton.util.hasInitializer(emitter, this.view.proton.imageTargets.death)) {\n          emitter.removeInitialize(this.view.proton.imageTargets.teams[ship.owner.team.number]);\n          emitter.addInitialize(this.view.proton.imageTargets.death);\n        }\n      } else {\n        if(!this.view.proton.util.hasInitializer(emitter, this.view.proton.imageTargets.teams[ship.owner.team.number])) {\n          emitter.removeInitialize(this.view.proton.imageTargets.death);\n          emitter.addInitialize(this.view.proton.imageTargets.teams[ship.owner.team.number]);\n        }\n      }\n\n      // update ship dependencies\n      const percent = ship.velocity.length /\n        (ship.LINEAR_VELOCITY_LIMIT + ship.LINEAR_VELOCITY_LIMIT_EXTENDED);\n      let amount = ship.disabled ? 3 : (percent < 0.2 ? 0 : 1);\n      const pos = ship.back_weapon_position;\n      const minAngle = ship.disabled ? 0 : defaultMinAngle;\n      const maxAngle = ship.disabled ? 360 : defaultMinAngle;\n\n      emitter.p.x = pos.x;\n      emitter.p.y = pos.y;\n      emitter.rotation = -Math.degrees(ship.angle) - 90;\n      emitter.rate.timePan.a =\n        emitter.rate.timePan.b =\n          slowest - ((slowest - fastest) * timingFunction(percent));\n      emitter.rate.numPan.a =\n        emitter.rate.numPan.b =\n          amount;\n      emitter.force.thaPan.a = minAngle;\n      emitter.force.thaPan.b = maxAngle;\n\n\n    }\n\n\n    // refresh proton\n    this.view.proton.main.update();\n  }\n\n  log() {\n    // var input = this.ships.main.owner.input;\n    // var ship = this.ships.main;\n    // $('#log').text(`forward: ${input.get('forward')}, turn: ${input.get('turn')}, shoot: ${input.get('shoot')}, block: ${input.get('block')}, `)\n//     $('#log').text(\n// `    x: ${ship.position.x.round(2)}\n//     y: ${ship.position.y.round(2)}\n// angle: ${ship.angle.round(2)}`\n//     );\n\n    // FPS\n    // this.last = this.last || [];\n    // this.last.push(1/this.dt)\n    // if(this.last.length > 10) this.last.shift();\n    // $('#log').text(`fps ${Math.round(this.last.average())}`);\n  }\n\n\n  // end vs stop: end happens when the local game appears to conclude; interaction with the game is stopped\n  // and the state might even be obstructed from view though the simluation continues;\n\n  disableInteraction() {\n    this.game.disabled = true;\n    if (this.player) this.resetInput();\n    this.deinitListeners();\n    this.timer.cancel();\n  }\n\n  endSimulation() {\n    this.game.ended = true;\n    // SoundHelper.stop();\n  }\n\n  timerExpire() {\n\n    // let server know TODO this should not lie here like this..\n    switch(this.gameMode) {\n\n      case 0: // ctf\n\n        const team = this.player.team.number;\n        const score = this.game.scores[team];\n        this.network.sendFlagProgress([team, score]);\n\n        break;\n\n    }\n\n    // LOBBY.disableGame();\n\n    // disconnect if no server response after 6s\n    setTimeout(() => {\n      if (!(this.game.ended || this.game.overtime)) LOBBY.disconnect();\n    }, 6000);\n  }\n\n  takeOvertime() {\n    this.game.overtime = true;\n\n    // disconnect if no server response after 40s\n    setTimeout(() => {\n      if (!(this.game.ended)) LOBBY.disconnect();\n    }, TIME.sec(40)); // OVERTIME DURATION.. todo\n  }\n\n\n  end(results) {\n\n    // this.setScoreToResults(results);\n\n    this.game.ended = true;\n    this.disableInteraction();\n  }\n\n  setScoreToResults(results) {\n    // this.game.scores = results;\n  }\n\n  // *** NEW NETWORK STRUCTURE *** //\n\n  // ** SHIP ** //\n\n  damageShip(toID, hp, fromID) {\n\n    // interpret damage data\n    const data = [toID, hp, fromID];\n\n    // adjust locally (if possible)\n    this.adjustShipHP(data)\n\n    // send through network\n    this.network.sendAdjustShipHP(data);\n\n  }\n\n  adjustShipHP([toID, hp, fromID]) {\n\n    // health on a player can only be adjusted by own player\n    if(toID !== this.player.id) return;\n\n    // damage and send death if neccessary\n    if(this.player.ship.damage(hp))\n      this.processDeath([toID, fromID]);\n\n }\n\n  processDeath(data) {\n\n    // announce locally\n    this.deathOccurrence(data)\n\n    // send through network\n    this.network.sendDeathOccurrence(data);\n\n  }\n\n  deathOccurrence([toID, fromID]) {\n\n    const t = this.players.get(toID)\n    const g = this.players.get(fromID);\n\n    if (t) t.score.deaths++;\n    if (g) g.score.kills++;\n\n    if (this.spectate) return;\n    if (toID == this.player.id) {\n      const player = this.players.get(fromID);\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\n          player.name\n        )\n      );\n      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\n      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\n    } else if (fromID == this.player.id) {\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\n          this.players.get(toID).name\n        )\n      );\n    }\n\n  }\n\n  // ** PROJECTILES ** //\n\n  // * BULLETS * //\n\n  addBullet(ship) {\n    \n    // interpretation ship data for bullet creation\n    const data = this.generateBulletData(ship)\n\n    // actually create bullet object\n    this.createBullet(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateBullet(data)\n\n    // notify ship\n    ship.didShoot(data.id)\n\n  }\n\n  generateBulletData(ship) {\n\n    return ({\n      id: Math.uuid(),\n      creator: ship.owner.id,\n      team: ship.owner.team.number,\n      position: ship.shoot_position,\n      angle: ship.shoot_angle + ship.shot_RNG,\n      radius: ship.ATTACK_RADIUS,\n      hp: ship.ATTACK_HP,\n      lifespan: ship.ATTACK_LIFESPAN,\n      velocity: ship.velocity,\n      speed: ship.ATTACK_SPEED\n    });\n\n  }\n\n  createBullet(data) {\n\n    const b = new Bullet(data);\n\n    // set model map\n    this.model.bullets.set(b.id, b);\n\n    // collision groups\n    b.collision_groups = [this.physics.collision_groups.BULLETS];\n    b.collision_groups.push(this.teams[b.team] == this.team ? this.physics.collision_groups.OUR_BULLETS : this.physics.collision_groups.ENEMY_BULLETS);\n    if (!this.spectate && b.creator == this.player.id) b.collision_groups.push(this.physics.collision_groups.MY_BULLETS);\n\n  }\n\n  removeBullet(id) {\n\n    // remove local copy\n    this.destroyBullet(id)\n\n    // annouce bullet demise\n    this.network.sendDestroyBullet(id)\n\n  }\n\n  destroyBullet(id) {\n\n    var b = this.model.bullets.get(id);\n    if (!b) return;\n\n    this.clearCollisionDivisions(b);\n\n    this.model.bullets.delete(id);\n    if (!this.spectate) this.ships.main.bullets.delete(id);\n\n    // erase the view for it.\n    this.destroyBulletView(id);\n\n  }\n\n  // * BLOCKS * //\n\n  addBlock(ship) {\n\n    // interpretation ship data for block creation\n    const data = this.generateBlockData(ship)\n\n    // actually create block object\n    this.createBlock(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateBlock(data)\n\n    // notify ship\n    ship.didBlock(data.id)\n\n  }\n\n  generateBlockData(ship) {\n    return ({\n      id: Math.uuid(),\n      creator: ship.owner.id,\n      team: ship.owner.team.number,\n      position: ship.front_weapon_position,\n      angle: (ship.angle) + ((ship.BLOCK_SPREAD / 2) * ((Math.random()*2) - 1)),\n      hp: ship.BLOCK_HP_CAPACITY,\n      // radius: Math.randomIntMinMax(Block.stats.MIN_RADIUS, Block.stats.MAX_RADIUS)\n      radius: Block.stats.MAX_RADIUS,\n      speed: Math.randomIntMinMax(Block.stats.MIN_SPEED, Block.stats.MAX_SPEED)\n    });\n\n  }\n\n  createBlock(data) {\n\n    var bl = new Block(data);\n\n    // misc..?\n    bl.isForeign = this.spectate || bl.team != this.team.number;\n\n    // set model map\n    this.model.blocks.set(bl.id, bl);\n\n    // collision groups\n    bl.collision_groups = [this.physics.collision_groups.REFUGE]\n    if (this.teams[bl.team] != this.team) {\n      bl.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\n    } else {\n      bl.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\n      bl.collision_groups.push(this.physics.collision_groups.OUR_BLOCKS)\n    }\n\n    // notify game\n    if(this.gameMode == 1) this.game.scores[data.team]++;\n\n  }\n\n  damageBlock(id, hp) {\n\n    // interpret damage data\n    const data = [id, hp];\n\n    // adjust locally\n    this.adjustBlockHP(data)\n\n    // send through network\n    this.network.sendAdjustBlockHP(data);\n\n  }\n\n  adjustBlockHP([id, hp]) {\n    const block = ENV.game.model.blocks.get(id);\n    if(block) block.damage(hp);\n  }\n\n  changeBlock(id, team) {\n\n    // interpret change data\n    const data = [id, team];\n\n    // adjust locally\n    this.setBlockTeam(data)\n    \n    // send through network\n    this.network.sendSetBlockTeam(data);\n\n  }\n\n  setBlockTeam([id, team]) {\n    // retrieve and store block\n    var b = this.model.blocks.get(id);\n    if (!b) return false;\n\n    // begin change if locked\n    if (b.locked) {\n\n      // skip if change is unnecessary\n      if (b.team != team) {\n\n        const oldTeam = b.team;\n\n        // assign new team\n        b.team = team;\n\n        // if not spectating add or remove from ref group\n        if (!this.spectate) {\n          if (b.team != this.team.number) {\n            this.refGroups.enemyBlocks.add(b);\n          } else {\n            this.refGroups.enemyBlocks.delete(b);\n          }\n        }\n\n        //\n        if (!this.spectate) {\n\n          this.ships.main.blocks.delete(id);\n\n        }\n\n        // replace and delete old view\n        var v = this.view.blocks.get(id);\n        if (v) {\n          let type = this.refGroups.enemyBlocks.has(b) ? 'enemy' : (b.locked ? 'locked' : 'unlocked');\n          v.image = DeepSpaceGame.graphicsCaches.blocks[type][b.team];\n          // v.updateCache();\n        }\n\n        // collision groups\n        this.clearCollisionDivisions(b);\n        b.collision_groups = [this.physics.collision_groups.REFUGE]\n        if (this.teams[b.team] != this.team) {\n          b.collision_groups.push(this.physics.collision_groups.ENEMY_BLOCKS)\n        } else {\n          b.collision_groups.push(this.physics.collision_groups.OUR_REFUGE)\n        }\n        this.setCollisionDivisions(b);\n\n        // notify game\n        if(this.gameMode == 1) {\n          this.game.scores[oldTeam]--;\n          this.game.scores[team]++;\n        }\n\n        \n      } // end if(b.team != team)\n    } // end if(!b.locked)\n\n\n  }\n\n  removeBlock(id) {\n\n    // remove local copy\n    this.destroyBlock(id)\n\n    // annouce blocks demise\n    this.network.sendDestroyBlock(id)\n\n  }\n\n  destroyBlock(id) {\n    var b = this.model.blocks.get(id);\n    if (!b) return false;\n\n    this.clearCollisionDivisions(b);\n\n    this.model.blocks.delete(id);\n    if (!this.spectate) this.ships.main.blocks.delete(id);\n\n    if (b.locked) this.refGroups.enemyBlocks.delete(b);\n\n    // erase the view for it.\n    this.destroyBlockView(id);\n    this.destroyOverlayMinimapBlockViewFor(id);\n\n    // notify game\n    if(this.gameMode == 1) this.game.scores[b.team]--;\n\n    return true;\n  }\n\n  // * SUBS * //\n\n  addSub(ship) {\n\n    // interpretation ship data for sub creation\n    const data = this.generateSubData(ship)\n\n    // actually create block object\n    this.createSub(data)\n\n    // ditribute bullet creation data to other clients\n    this.network.sendCreateSub(data)\n\n    // notify ship\n    ship.didSub(data.id)\n\n  }\n\n  generateSubData(ship) {\n    return ({\n      id: Math.uuid(),\n      type: ship.SUB_TYPE,\n      team: ship.owner.team.number,\n      player: ship.owner.id,\n      position: ship.front_weapon_position,\n      angle: ship.angle\n    });\n  }\n\n  createSub(data) {\n    var p;\n    switch (data.type) {\n      case 'attractor':\n        p = new Attractor(data)\n        break;\n      case 'repulsor':\n        p = new Repulsor(data)\n        break;\n      case 'block_bomb':\n        p = new BlockBomb(data)\n        break;\n      case 'stealth_cloak':\n        p = new StealthCloak(data)\n        break;\n      case 'missile':\n        p = new Missile(data)\n        break;\n      default:\n        break;\n    }\n\n    // create a view for it.\n    if (data.type != 'stealth_cloak') {\n      let graphics = DeepSpaceGame.graphics[data.type](this.teams[p.team].color);\n      var pv = new createjs.Shape(graphics);\n      pv.cache(-12, -12, 24, 24);\n      this.view.layer.action.back.addChild(pv);\n\n      this.view.subs.set(p.id, pv);\n\n      // if(this.camera.showing(p)) SoundHelper.fireSub(); // no sound for stealth\n\n      p.collision_groups = (this.teams[p.team] == this.team) ? [this.physics.collision_groups.OUR_PROJ_SUBS] : [];\n    }\n\n    this.model.subs.set(p.id, p);\n\n    if (!this.spectate) if (p.team != this.ships.main.owner.team.number) this.refGroups.enemySubs.add(p.id);\n\n    return p;\n  }\n\n  removeSub(id) {\n\n    // remove local copy\n    this.destroySub(id)\n\n    // annouce blocks demise\n    this.network.sendDestroySub(id)\n\n  }\n\n  destroySub(id) {\n    var p = this.model.subs.get(id);\n    if (!p) return false;\n\n    this.clearCollisionDivisions(p);\n\n    this.model.subs.delete(id);\n    if (!this.spectate) this.ships.main.subs.delete(id);\n\n    this.refGroups.enemySubs.delete(p.id);\n\n    // erase the view for it.\n    if (p.type != 'stealth_cloak') {\n      var v = this.view.subs.get(id);\n      if (v) {\n        this.view.subs.delete(id);\n        this.view.layer.action.back.removeChild(v);\n      }\n    }\n    return true;\n  }\n\n  // * GAME * //\n\n  // CTF //\n\n  assumeFlag(ship) {\n\n    // interpret for flag capture\n    const id = ship.owner.id\n\n    // capture flag locally\n    this.captureFlag(id)\n\n    // let other clients know\n    this.network.sendCaptureFlag(id)\n\n    // notify ship\n    ship.didPickupFlag()\n\n  }\n\n  captureFlag(id) {\n\n    // set flag and ship state\n    const player = this.players.get(id);\n    this.game.flag.holderID = id;\n    if(this.players.get(id)) this.players.get(id).ship.setFlag(this.game.flag);\n\n    // alert\n    var c = player.team.color, us = player.team == this.team;\n    // var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\n    this.alert(\n      DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\n        DeepSpaceGame.localizationStrings.colors[c][this.language]\n      )\n      , c);\n\n    // sound\n    // us ? SoundHelper.teamYay() : SoundHelper.teamNay();\n\n    // this.updateFlagView();\n\n  }\n\n  releaseFlag() {\n\n    // capture flag locally\n    this.dropFlag()\n\n    // let other clients know\n    this.network.sendDropFlag()\n\n    // let server know\n    const team = this.player.team.number;\n    const score = this.game.scores[team];\n    this.network.sendFlagProgress([team, score]);\n\n  }\n\n  dropFlag() {\n\n    var id, flag = this.game.flag, ship = null;\n\n    if (id = flag.holderID) {\n      var player = this.players.get(flag.holderID)\n      if (ship = player.ship)\n        ship.clearFlag();\n\n      flag.reset();\n\n      var c = player.team.color, us = player.team == this.team;\n      var color = undefined;//us || this.spectate ? undefined : this.team.color;\n      this.alert(\n        DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\n          DeepSpaceGame.localizationStrings.colors[c][this.language]\n        )\n        , color);\n\n      // this.updateFlagView();\n    }\n\n  }\n\n  flagProgress([team, score]) {\n\n    // update local registry w/ server score\n    this.game.scores[team] = score;\n\n  }\n\n\n\n\n  // pickupFlag(playerID) { // flag activation needs to go through here\n  //   var flag = this.game.flag, ship = null;\n  //   // if(!flag.idle) NetworkHelper.out_flag_drop();\n  //   flag.holderID = playerID;\n  //\n  //   var player = this.players.get(flag.holderID);\n  //\n  //\n  //   if (ship = player.ship) {\n  //     ship.setFlag(flag);\n  //     if(this.game.overtime)\n  //       if(ship.owner.team == this.game.lead)\n  //         if(ship.owner.team == this.team)\n  //           this.network.out_game_over(this.team.number);\n  //   }\n  //\n  //\n  //\n  //   var c = DeepSpaceGame.colors[player.team.color], us = player.team == this.team;\n  //   this.alert(\n  //     DeepSpaceGame.localizationStrings.alerts[us ? 'teamTakesFlag' : 'enemyTakesFlag'][this.language](\n  //       DeepSpaceGame.localizationStrings.colors[c][this.language]\n  //     )\n  //     , c);\n  //\n  //   // sound\n  //   us ? SoundHelper.teamYay() : SoundHelper.teamNay();\n  //\n  //   // this.updateFlagView();\n  // }\n\n  // dropFlag() {\n  //   var id, flag = this.game.flag, ship = null;\n  //   if (id = flag.holderID) {\n  //     var player = this.players.get(flag.holderID)\n  //     if (ship = player.ship)\n  //       ship.clearFlag();\n  //\n  //     flag.reset();\n  //\n  //     var c = player.team.color, us = player.team == this.team;\n  //     this.alert(\n  //       DeepSpaceGame.localizationStrings.alerts[us ? 'teamDropsFlag' : 'enemyDropsFlag'][this.language](\n  //         DeepSpaceGame.localizationStrings.colors[c][this.language]\n  //       )\n  //       , us || this.spectate ? undefined : this.team.color);\n  //\n  //     // this.updateFlagView();\n  //   }\n  //\n  // }\n\n  \n\n  alert(msg, color = \"#ECEFF1\") {\n    clearTimeout(this.alertTimeout)\n    var v = this.view.overlay.message;\n    v.text = msg;\n    v.color = color;\n    if (msg.trim() !== '') this.alertTimeout = setTimeout(() => {\n      this.alert(\"\")\n    }, 4000)\n  }\n\n  alert_kill(msg, color = \"#ECEFF1\") {\n    clearTimeout(this.alertKillTimeout)\n    var v = this.view.overlay.kill_message;\n    v.text = msg;\n    v.color = color;\n    if (msg.trim() !== '') this.alertKillTimeout = setTimeout(() => {\n      this.alert_kill(\"\")\n    }, 4000)\n  }\n\n\n  msgShipKill(takerID, giverID) {//alert(`takerID ${takerID}, giverID ${giverID},`)\n    var t = this.players.get(takerID), g = this.players.get(giverID);\n    if (t) t.score.deaths++;\n    if (g) g.score.kills++;\n\n    if (this.spectate) return;\n    if (takerID == this.player.id) {\n      const player = this.players.get(giverID);\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourDeath'][this.language](\n          player.name\n        )\n      );\n      this.camera.animateFocus(player.ship.view, [this.player.ship, 'disabled']);\n      // this.camera.animateFocus(player.ship.view, player.ship.RESPAWN_DELAY*16.7);\n    } else if (giverID == this.player.id) {\n      this.alert_kill(\n        DeepSpaceGame.localizationStrings.alerts['yourKill'][this.language](\n          this.players.get(takerID).name\n        )\n      );\n    }\n  }\n\n\n\n  /* NEW DYNAMIC GRAPHICS */\n  // Size has grown. It is now ineffective to keep copies\n  // of views for all map objects and choose to render\n  // based on visibility. Views will be created and\n  // destroyed dynamically. This will hopefully have\n  // great performance benefits 09/17/17\n\n  createBulletView(b) {\n\n    const cache = DeepSpaceGame.graphicsCaches.bullets[b.team];\n    const bv = new createjs.Bitmap(cache);\n    bv.scaleX = bv.scaleY = b.radius / Bullet.stats.MAX_RADIUS;\n    bv.regX = bv.regY = (cache.width / 2);\n    this.view.layer.action.back.addChild(bv);\n\n    // set view map\n    this.view.bullets.set(b.id, bv);\n\n    return bv\n\n  }\n\n  destroyBulletView(id) {\n\n    const v = this.view.bullets.get(id);\n    if (v) {\n      this.view.bullets.delete(id);\n      this.view.layer.action.back.removeChild(v);\n    }\n\n  }\n\n  createBlockView(bl) {\n    \n    // a block can either look fluid or locked\n    // these being either ours or theirs\n\n    // create a view for it.\n    let type = 'unlocked';\n    if(bl.locked || bl.qualified) type = bl.isForeign ? 'enemy' : 'locked';\n    let cache = DeepSpaceGame.graphicsCaches.blocks[type][bl.team];\n    var blv = new createjs.Bitmap(cache);\n    blv.scaleX = blv.scaleY = bl.radius / Block.stats.MAX_RADIUS;\n    blv.regX = blv.regY = (cache.width / 2);\n    this.view.layer.action.back.addChild(blv);\n\n    // set view map\n    this.view.blocks.set(bl.id, blv);\n\n    return blv\n\n  }\n\n  destroyBlockView(id) {\n\n    const v = this.view.blocks.get(id);\n    if (v) {\n      this.view.blocks.delete(id);\n      this.view.layer.action.back.removeChild(v);\n    }\n\n  }\n\n  /* DEINITIALIZATION */\n\n  deinit() {\n    // it must go in reverse order\n    // as children of root objects will\n    // need to know what to get removed from\n    this.deinitCaches();\n    this.deinitPhysics();\n    this.deinitInput();\n    this.deinitListeners();\n    this.deinitCamera();\n    this.deinitView();\n    this.deinitGame();\n    this.deinitModel();\n\n    delete DeepSpaceGame.runningInstance;\n  }\n\n  deinitCaches() {\n    delete this.enemyTeams;\n    delete this.enemyPlayers;\n    delete this.player;\n    delete this.team;\n\n    delete DeepSpaceGame.graphicsCaches;\n  }\n\n  deinitPhysics() {\n    delete this.refGroups;\n  }\n\n  deinitInput() {\n    var main = this.ships.main;\n    if (main) delete main.owner.input;\n  }\n\n  deinitListeners() {\n    for (let [, handler] of this.inputHandlers) {\n      window.removeEventListener('keydown', handler); // onkeydown\n      window.removeEventListener('keyup', handler); // onkeyup\n    }\n  }\n\n  deinitCamera() {\n    delete this.camera;\n  }\n\n  deinitView() {\n    delete this.view;\n    delete this.window;\n    this.stage.removeAllChildren();\n    delete this.stage;\n    delete this.colors;\n  }\n\n  deinitGame() {\n    delete this.game;\n  }\n\n  deinitModel() {\n    delete this.ships;\n    delete this.players;\n    delete this.teams;\n  }\n\n  reset() {\n\n  }\n\n  resetInput() {\n    var input;\n    if (this.player) if (input = this.player.input) input.clear();\n  }\n\n  disconnectPlayer(id) {\n    var player = this.players.get(id);\n    if (player) {\n      player.disconnected = true;\n      player.ship.disabled = true;\n      if (this.spectate) this.activePlayers.delete(player);\n      \n      // alert team members\n      if (!this.spectate) {\n        if(player.team === this.team) this.alert(\n          DeepSpaceGame.localizationStrings.alerts['teamMemberDisconnects'][this.language](\n            player.name\n          )\n        )\n      }\n    } else {\n      log(`ERR in disconnectPlayer :: id(${id}) not found`)\n    }\n  }\n\n}\n\nDeepSpaceGame.graphics = {\n  circle_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n\n  spawn_camp: (color) => new createjs.Graphics().beginStroke(color).setStrokeStyle(6).drawCircle(0, 0, 64),\n  spawn_camp_fill: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 64),\n  // spawn_camp: () => new createjs.Graphics().beginStroke(\"#37474F\").setStrokeStyle(4).drawCircle(0, 0, 64),\n  ship: [\n    // 0 \"standard\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\n\n    // 1 \"rate\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-4.8, -8).lineTo(-8, 0).lineTo(-4.8, 8).lineTo(8, 0).lineTo(-4.8, -8)],\n\n    // 2 \"speed\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(8, 0).lineTo(-8, -8)],\n\n    // 3 \"defense\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(6.4, -4).lineTo(-8, -8).lineTo(-8, 8).lineTo(6.4, 4).lineTo(8, 0).lineTo(6.4, -4)],\n\n    // 4 \"damage\"\n    [(color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8),\n      (color, width) => new createjs.Graphics().beginStroke(color).setStrokeStyle(width).beginFill(color).moveTo(8, 0).lineTo(4.8, -8).lineTo(-8, -8).lineTo(-4.8, 0).lineTo(-8, 8).lineTo(4.8, 8).lineTo(8, 0).lineTo(4.8, -8)],\n\n  ],\n  particle: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(4).drawCircle(0, 0, size),\n  // bullet: (color) => DeepSpaceGame.graphics.particle(color)\n  // block: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n  block_border: (color, size) => new createjs.Graphics().beginStroke(color).setStrokeStyle(2).drawCircle(0, 0, size),\n  block_fill: (color, size) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, size),\n  block_center: (color) => new createjs.Graphics().beginFill(color).drawCircle(0, 0, 2),\n\n  attractor: color => new createjs.Graphics().beginFill(color).moveTo(2, 2).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, 2).lineTo(-8, 2).lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\n  repulsor: color => new createjs.Graphics().beginFill(color).moveTo(2, -8).lineTo(2, 8).lineTo(-2, 8).lineTo(-2, -8).lineTo(2, -8),//.lineTo(-8, -2).lineTo(-2, -2).lineTo(-2, -8).lineTo(2, -8).lineTo(2, -2).lineTo(8, -2).lineTo(8, 2).lineTo(2, 2),\n  block_bomb: color => new createjs.Graphics().beginFill(color).moveTo(-10, 0).arcTo(-10, -10, 0, -10, 10).lineTo(0, 10).arcTo(-9, 9, -10, 0, 10),\n  missile: color => new createjs.Graphics().beginFill(color).moveTo(6, 0).lineTo(-6, -6).lineTo(-6, 6).lineTo(6, 0),\n\n\n  ring: r => new createjs.Graphics().beginStroke(\"#ECEFF1\").setStrokeStyle(16).drawCircle(0, 0, r),\n  flag: r => new createjs.Graphics().beginFill(\"#ECEFF1\").drawCircle(0, 0, r),\n  flag_shadow: () => new createjs.Shadow(\"#ECEFF1\", 0, 0, 10),\n\n  energyMeter: (color, percent, scale, radius = 5) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius/scale, (-Math.PI / 2), (2 * Math.PI * percent) - (Math.PI / 2)),\n  energyMeterShadow: (color, scale, radius = 7) => new createjs.Graphics().beginFill(color).moveTo(0, 0).arc(0, 0, radius/scale, 0, 2 * Math.PI)\n};\n\nDeepSpaceGame.renderingParameters = {\n  'bulletCount': 100,\n  'shipThrustParticleCount': 80\n}\n\nDeepSpaceGame.localizationStrings = {\n  alerts: {\n    enemyTakesFlag: {\n      en: (color) => `The ${color} team has the moon!`\n    },\n    teamTakesFlag: {\n      en: () => `We have the moon!`\n    },\n    enemyDropsFlag: {\n      en: (color) => `The ${color} team dropped the moon!`\n    },\n    teamDropsFlag: {\n      en: () => `We dropped the moon!`\n    },\n    yourKill: {\n      en: (name) => `you got ${name}`\n    },\n    yourDeath: {\n      en: (name) => `${name} got you!`\n    },\n    teamTakesLead: {\n      en: () => `We took the lead!`\n    },\n    teamLosesLead: {\n      en: () => `We lost the lead!`\n    },\n    teamMemberDisconnects: {\n      en: (name) => `Your teammate ${name} has disconnected`\n    }\n  },\n  colors: {\n    '#FF4081': {\n      en: `pink`\n    },\n    '#FF5252': {\n      en: `red`\n    },\n    '#FFEA00': {\n      en: `yellow`\n    },\n    '#00E676': {\n      en: `green`\n    },\n    '#00B0FF': {\n      en: `blue`\n    },\n    '#BB33FF': {\n      en: `purple`\n    },\n    '#ECEFF1': {\n      en: `white`\n    },\n    '#90A4AE': {\n      en: `light`\n    },\n    '#37474F': {\n      en: `dark`\n    },\n    '#263238': {\n      en: `black`\n    },\n\n\n    '#FFA33F': {\n      en: `orange`\n    }, // 10 orange\n    '#82E600': {\n      en: `lime`\n    }, // 11 grass\n    '#00FFE2': {\n      en: `aqua`\n    }, // 12 aqua\n    '#F93FFF': {\n      en: `magenta`\n    }, // 13 magenta\n  }\n}\n\n// DeepSpaceGame.colorNames = [\n//   '#FF4081': `pink`,\n//   '#FF5252': `red`,\n//   '#FFEA00': `yellow`,\n//   '#00E676': `green`,\n//   '#00B0FF': `blue`,\n//   '#AA00FF': `purple`,\n//   '#ECEFF1': `white`,\n//   '#90A4AE': `light`,\n//   '#37474F': `dark`,\n//   '#263238': `black`\n// ];\n\n// DeepSpaceGame.colorNames = [\n//   '#FF4081', // 0 pink\n//   '#FF5252', // 1 red\n//   '#FFEA00', // 2 yellow\n//   '#00E676', // 3 green\n//   '#00B0FF', // 4 blue\n//   '#AA00FF', // 5 purple\n//   '#ECEFF1', // 6 white\n//   '#90A4AE', // 7 light\n//   '#37474F', // 8 dark\n//   '#263238'  // 9 black\n// ];\n//\n// DeepSpaceGame.colorCombinations = new Map([2, [\n//   [1, 4], // red, blue\n//   [1, 2], // red, yellow\n//   [5, 2], // purple, yellow\n//   [2, 4], // yellow, blue\n//   [2, 0], // yellow, pink\n//   [0, 4], // pink, blue\n//   [4, 3]  // blue, green\n// ]],\n// [3,[\n//\n// ]]\n// );\n\nDeepSpaceGame.colors = [\n  '#FF4081', // 0 pink\n  '#FF5252', // 1 red\n  '#FFEA00', // 2 yellow\n  '#00E676', // 3 green\n  '#00B0FF', // 4 blue\n  '#BB33FF', // 5 purple AA00FF old\n  '#ECEFF1', // 6 white\n  '#90A4AE', // 7 light\n  '#37474F', // 8 dark\n  '#263238', // 9 black\n\n  // added colors\n  '#FFA33F', // 10 orange\n  '#82E600', // 11 grass\n  '#00FFE2', // 12 aqua\n  '#F93FFF', // 13 bubble gum\n];\n\nDeepSpaceGame.maps = [\n  {\n    name: \"The Event Horizon\",\n    width: 1920, height: 1920,\n    // width: 1024, height: 1024,\n    spawn: [\n      [{x: 30, y: 30}, {x: 30, y: 60}, {x: 60, y: 60}, {x: 60, y: 30}],\n      [{x: 450, y: 290}, {x: 450, y: 260}],\n      [{x: 450, y: 290}, {x: 450, y: 260}]\n    ]\n  }\n];\n\nDeepSpaceGame.maps = [\n  { // 0\n    name: \"Wide Sky\",\n    width: 3072 * 1, height: 3072 * 1,\n    teams: [2],\n\n    spawn: [\n      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\n\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n      [{x: (600)+64, y: (777)+64, rotation: Math.PI}, {x: (3072 - 600)-64, y: (3072 - 777)-64, rotation: 0}, {x: (777)+64, y: (3072 - 600)-64, rotation: Math.PI/+2}, {x: (3072 - 777)-64, y: (600)+64, rotation: Math.PI/-2}, {x: (1476)+64, y: (267)+64, rotation: Math.PI/-2}, {x: (3072 - 1476)-64, y: (3072 - 267)-64, rotation: Math.PI/2}, {x: (267)+64, y: (3072 - 1476)-64, rotation: Math.PI}, {x: (3072 - 267)-64, y: (1476)+64, rotation: 0}],\n    ],\n    impermeables: {\n      copies: 4,\n      bodies: [\n        [32, // radius\n          [ 1192, 382 ],\n          [ 716, 414 ],\n          [ 1496, 87 ],\n          [ 1668, 441 ],\n          [ 1670, 849 ],\n          [ 869, 1320 ],\n          [ 276, 1270 ],\n          [ 1380, 681 ],\n          [ 344, 1228 ],\n          [ 632, 1022 ],\n          [ 427, 1256 ],\n          [ 728, 1150 ],\n          [ 140, 1096 ],\n          [ 76, 1146 ],\n          [ 716, 1064 ]\n        ],\n        [48,\n          [ 1332, 585 ],\n          [ 1021, 265 ],\n          [ 1224, 1006 ],\n          [ 520, 1308 ],\n          [ 812, 1006 ],\n          [ 536, 974 ]\n        ],\n        [64,\n          [ 408, 942 ],\n          [ 856, 878 ],\n          [ 684, 537 ],\n          [ 1160, 274 ],\n          [ 957, 761 ],\n          [ 840, 1210 ]\n        ],\n        [96,\n          [ 491, 169 ],\n          [ 860, 601 ],\n          [ 1338, 409 ]\n        ],\n        [128,\n          [1540, 569],\n        ]\n      ]\n    }\n  },\n  { // 0\n    name: \"Nautical\",\n    width: 3072 * 1, height: 3072 * 1,\n    teams: [2],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 3072 - 192, y: 3072 - 192}] // 2\n\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}],\n      [{x: 581, y: 555, rotation: Math.PI/2}, {x: 3072 - 581, y: 3072 - 555, rotation: -Math.PI/2}, {x: 3072 - 581, y: 555, rotation: Math.PI}, {x: 581, y: 3072 - 555, rotation: 0}]\n    ],\n    impermeables: {\n      copies: 4,\n      bodies: [\n        [32, // radius\n          [325, 764],\n          [989, 98],\n          [746, 898],\n          [1054, 1308],\n          [1179, 1260],\n          [1514, 1308],\n          [993, 1356],\n          [534, 1308],\n          [1546, 194],\n          [1488, 130],\n          [173, 1028],\n          [173, 892],\n          [470, 880],\n          [325, 764],\n          [667, 892]\n        ],\n        [48,\n          [1218, 274],\n          [1242, 786],\n          [618, 1260],\n          [1139, 1340],\n          [238, 960],\n          [794, 818]\n        ],\n        [64,\n          [1084, 475],\n          [422, 322],\n          [914, 784],\n          [1654, 546],\n          [1279, 1219],\n          [1423, 1228]\n        ],\n        [96,\n          [298, 539],\n          [967, 610]\n        ],\n        [128,\n          [831, 411]\n        ]\n      ]\n    }\n  },\n  /*{ // 1\n    name: \"Liftor\",\n    width: 1920, height: 1920,\n    teams: [2],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}],\n      [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}, {x: 1920 - 192, y: 192}, {x: 192, y: 1920 - 192}]\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [929, 76],\n          [582, 128],\n          [696, 176],\n          [811, 226],\n          [173, 892],\n          [173, 1028]\n        ],\n        [48,\n          [1218, 274],\n          [1242, 786],\n          [238, 960]\n        ],\n        [64,\n          [1654, 546],\n          [637, 578]\n        ]\n      ]\n    }\n  },*/\n  {\n    name: \"Nebula\",\n    width: 3072, height: 3072,\n    teams: [2],\n    tint: [180, '#FFFFFF', '#000000', ],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [\n        {x: 1791, y: 160, rotation: Math.PI/2},\n        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\n      ],\n      [\n        {x: 1791, y: 160, rotation: Math.PI/2},\n        {x: 3072 - 1791, y: 3072 - 160, rotation: -Math.PI/2},\n      ],\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [ 456, 549 ],\n          [ 692, 1238 ],\n          [ 787, 1367 ],\n          [ 2013, 176 ],\n          [ 1199, 1175 ],\n          [ 555, 1731 ],\n          [ 1276, 1143 ],\n          [ 1507, 192 ],\n          [ 1587, 224 ],\n          [ 1443, 391 ],\n          [ 3030, 697 ],\n          [ 2609, 847 ],\n          [ 1727, 920 ],\n          [ 1911, 643 ],\n          [ 898, 1303 ],\n          [ 1078, 1358 ],\n          [ 1503, 1341 ],\n          [ 1575, 1316 ],\n          [ 1639, 1358 ],\n          [ 2798, 859 ]\n        ],\n        [48,\n          [898,1207],[510,1183],[1110,1206],[1343,1214],[1459,274],[2888,863]\n        ],\n        [64,\n          [1372,1079],[1631,845],[946,1422],[1515,86],[1007,1278],[341,660],[2166,1047],[541,1348],[421,1271],[1395,160],[992,847],[566,537],[2449,560],[2936,751],[2699,909],[2077,86],[1497,811],[2417,697],[2737,258]\n        ],\n        [96,\n          [231,304],[330,485],[1355,911],[276,822],[820,879],[1853,845],[2045,920],[2221,1213],[2277,592]\n        ],\n        [128,\n          [2609,421],[385,1037],[641,724],[1267,334],[1215,613],[427,1519],[2149,278],[2289,857]\n        ]\n      ]\n    }\n  },\n  {\n    name: \"Clockwise\",\n    width: 2048, height: 2048,\n    teams: [2],\n    tint: [180, '#207272', '#000000', ],\n\n    // first array is for the number of teams coresponding to the teams array\n    // second is place in the arrangement for that number of teams\n    // object is position\n    spawn: [\n      // [{x: 192, y: 192}, {x: 1920 - 192, y: 1920 - 192}] // 2\n\n      [\n        {x: 1023, y: 119, rotation: Math.PI/2},\n        {x: 2048 - 1023, y: 2048 - 119, rotation: -Math.PI/2},\n      ],\n      [\n        {x: 1023, y: 119, rotation: Math.PI/2},\n        {x: 2048 - 1023, y: 2048 - 119, rotation: -Math.PI/2},\n      ],\n    ],\n    impermeables: {\n      copies: 2,\n      bodies: [\n        [32, // radius\n          [557,1059],[509,1367],[1000,876],[1077,844],[678,1420],[1897,192],[1977,224],[1162,344],[589,173],[1613,398],[1367,299],[1439,274],[1485,211]\n        ],\n        [48,\n          [589,77],[481,1009],[587,1415],[911,907],[1144,915],[941,372],[745,1491]\n        ],\n        [64,\n          [278,205],[541,748],[635,276],[1865,86],[507,521],[826,661],[370,1091],[420,1312],[317,1219],[1056,320],[1266,332],[497,883],[1549,302]\n        ],\n        [96,\n          [806,292],[656,617],[118,662]\n        ],\n      ]\n    }\n  },\n];\n\nDeepSpaceGame.spawn_structure = [\n  [{x: 0, y: 0}], // 1 player\n  [{x: 18, y: 0}, {x: -18, y: 0}], // 2\n  [{x: 26, y: 0}, {x: -13, y: 22}, {x: -13, y: -22}], // 3\n  [{x: 34, y: 0}, {x: 0, y: 34}, {x: -34, y: 0}, {x: 0, y: -34}], //4\n  [{x: 34, y: 0}, {x: 10, y: 32}, {x: -28, y: 20}, {x: -28, y: -20}, {x: 10, y: -32}], // 5\n  [{x: 34, y: 0}, {x: 17, y: 30}, {x: -17, y: 30}, {x: -34, y: 0}, {x: -17, y: -30}, {x: 17, y: -30}] // 6\n]\n\nDeepSpaceGame.modes = {\n  ctf: { // capture the flag\n    ring_radius: 720,\n    flag_radius: 18,\n    time_limit: FRAMES.mins(3)\n  }\n};\n"]}