{"version":3,"sources":["../js/bubble.js"],"names":["SimpleBubble","data","id","team","Object","assign","Bubble","stats","target","position","V2D","radius","INNER_RADIUS","growing","locked","complete","disabled","dt","x","y","set","OUTER_RADIUS","dropCooldownCounter","currentProgress","progress","futureProgress","GROWTH_RATE","secure","hp","effectOnProgress","HP_TO_PROGRESS","percent","DROP_COOLDOWN","BubbleCore","bubble","RADIUS","b","ready"],"mappings":"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","file":"bubble.js","sourcesContent":["// TODO optimize by giving radius a getter instead of progress since it is the lesser called var\n\nclass SimpleBubble {\n\n  constructor(data) {\n    this.id = data.id;\n    this.team = data.team;\n\n    Object.assign(this, Bubble.stats);\n\n    this.target = data.target;\n    this.position = new V2D();\n\n    this.radius = this.INNER_RADIUS;\n\n    this.growing = false;\n    this.locked = false;\n    this.complete = false;\n    this.disabled = false;\n\n  }\n\n  get progress() {\n    if(this.radius <= this.INNER_RADIUS) return 0;\n    if(this.radius < this.OUTER_RADIUS) return (this.radius - this.INNER_RADIUS) / (this.OUTER_RADIUS - this.INNER_RADIUS);\n    else return 1;\n  }\n\n  update(dt) {\n\n    if(!this.locked) {\n      const { x, y } = this.target.position;\n      this.position.set({ x, y });\n    }\n\n  }\n\n}\n\nclass Bubble extends SimpleBubble {\n\n  constructor(data) {\n    super(data);\n    this.dropCooldownCounter = 0;\n  }\n\n  get progress() {\n    return super.progress\n  }\n\n  set progress(percent) {\n    this.radius = (percent * (this.OUTER_RADIUS - this.INNER_RADIUS)) + this.INNER_RADIUS\n  }\n\n  get ready() { return this.dropCooldownCounter > this.DROP_COOLDOWN }\n\n  update(dt) {\n\n    super.update(dt);\n\n    if(this.locked) {\n      this.dropCooldownCounter += dt;\n    } else {\n      this.dropCooldownCounter = 0;\n    }\n\n    if(this.growing) {\n      let currentProgress = this.progress;\n      let futureProgress = currentProgress + (this.GROWTH_RATE * dt);\n\n      if(futureProgress >= 1) {\n        futureProgress = 1;\n        this.secure();\n      }\n      this.progress = futureProgress;\n    }\n\n    this.growing = false;\n\n  }\n\n  secure() {\n    this.complete = true;\n  }\n\n  damage(hp) {\n    // TODO (see top) .. like this validation, shouldn't be happening here.. I think\n    let currentProgress = this.progress;\n    let effectOnProgress = this.HP_TO_PROGRESS * hp;\n    let futureProgress = currentProgress - effectOnProgress;\n\n    if(futureProgress < 0) futureProgress = 0;\n\n    this.progress = futureProgress;\n  }\n\n  resetDropCooldownCounter() {\n    this.dropCooldownCounter = 0;\n  }\n\n}\n\nBubble.stats = {\n  INNER_RADIUS: 64, // px\n  OUTER_RADIUS: 256, // px\n  GROWTH_RATE: 0.2, // r / s\n  HP_TO_PROGRESS: 0.01, // % / hp\n  DROP_COOLDOWN: 1,\n};\n\n\nclass BubbleCore {\n\n  constructor(bubble) {\n\n    this.bubble = bubble;\n\n    Object.assign(this, BubbleCore.stats);\n\n    this.radius = this.RADIUS;\n\n  }\n\n  get position() { return this.bubble.position }\n\n  get disabled() {\n    const b = this.bubble;\n    return !b.locked || b.complete || !b.ready;\n  }\n\n}\n\nBubbleCore.stats = {\n  RADIUS: 10,\n};\n\n"]}