{"version":3,"sources":["../js/ship.js"],"names":["BasicShip","player","owner","disabled","position","V2D","velocity","acceleration","angle","angular_velocity","angular_acceleration","health","radius","stealth","Object","assign","Ship","baseStats","type","spawn","new","team","game","mapInfo","teams","length","number","add","DeepSpaceGame","spawn_structure","players","indexOf","spawnRotation","rotation","last_known_position","reset","dt","angularMotion","Math","pow","ANGULAR_FRICTION","percentOfFullSpeed","LINEAR_VELOCITY_LIMIT","angularVelocityLimit","ANGULAR_VELOCITY_LIMIT_MAX","ANGULAR_VELOCITY_LIMIT_MIN","isLinearlyMoving","accelerationIsPositive","accelerationVector","mul","LINEAR_FRICTION","linearVelocityLimit","flag","drag","charging","LINEAR_VELOCITY_LIMIT_EXTENDED","mul_","data","bubble","bubbleRadius","locked","bubbleLocked","complete","bubbleComplete","bubbleDisabled","set","bubblePosition","undefined","fwp","copy","shift","bwp","PI","energy","block_friction","relative_shoot_angle","bullets","Set","blocks","subs","intersecting","recoil_counter","respawn_counter","regen_counter","block_recoil_counter","sub_recoil_counter","SUB_RECOIL_DELAY","flag_recoil_counter","FLAG_RECOIL_DELAY","hp","HP_CAPACITY","c","charge","IDLE_ENERGY_REGEN_RATE","ACTIVE_ENERGY_REGEN_RATE","REGEN_DELAY","heal","REGEN_RATE","RESPAWN_DELAY","recoilHasPast","ATTACK_RECOIL_DELAY","hasEnoughEnergy","canDrain","ATTACK_HP","ATTACK_ENERGY_FRACTION_HP","id","drain","hasNoFlag","BLOCK_RECOIL_DELAY","BLOCK_ENERGY_COST","first","subLimitHasNotBeenReached","size","SUB_CAPACITY","SUB_ENERGY_COST","ENERGY_CAPACITY","network","sendShipOverride","export_override","recoilHasPassed","notCarryingBubble","cooldownHasPast","ready","notComplete","notCarryingFlag","percent","shoot_angle","ATTACK_SPREAD","random","BLOCK_CAPACITY","SUB_TYPE","ATTACK_RADIUS","ATTACK_LIFESPAN","ATTACK_SPEED","radians","ANGULAR_ACCELERATION_LIMIT","LINEAR_ACCELERATION_LIMIT","LINEAR_VELOCITY_LIMIT_BACKWARD","BLOCK_HP_CAPACITY","BLOCK_SPREAD"],"mappings":"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","file":"ship.js","sourcesContent":["\nclass BasicShip {\n\n  constructor(player) {\n    this.owner = player;\n\n    this.disabled = false;\n    this.position = new V2D(20, 20);\n        this.velocity = new V2D();\n        // this.acceleration = new V2D();\n        this.acceleration = 0;\n    this.angle = 0;\n        this.angular_velocity = 0;\n        this.angular_acceleration = 0;\n    this.health = 1;\n    this.radius = 10;\n    this.stealth = false;\n\n    Object.assign(this, Ship.baseStats);           // write base stats\n    Object.assign(this, Ship.type[player.type]);   // then overwrite with type specific changes\n\n    this.spawn =\n      V2D.new(this.owner.team.game.mapInfo.spawn[this.owner.team.game.teams.length-1][this.owner.team.number])\n      .add(DeepSpaceGame.spawn_structure[this.owner.team.players.length - 1][this.owner.team.players.indexOf(this.owner)]);\n    this.spawnRotation = this.owner.team.game.mapInfo.spawn[this.owner.team.game.teams.length-1][this.owner.team.number].rotation;\n    this.last_known_position = this.position;\n    this.reset()\n  }\n\n  update(dt) {\n    if(!this.disabled) {\n      // let inert = this.acceleration.length == 0 ;\n      // !inert ? this.velocity.add(this.acceleration.mul_(60*dt)) : this.velocity.mul(Math.pow(this.LINEAR_FRICTION, (60*dt)) ); // TODO revise\n      //\n      // // if(this.flag) this.velocity.mul(this.flag.drag);\n      //\n      // let limit = this.LINEAR_VELOCITY_LIMIT; if(this.flag) limit *= this.flag.drag; if(this.charging) limit += this.LINEAR_VELOCITY_LIMIT_EXTENDED;\n      // if(this.velocity.length > limit)\n      //    this.velocity.length = limit;\n      //\n      // this.position.add(this.velocity.mul_(dt));\n      //\n      // this.charging = false;\n\n\n      // NEW SHIP CONTROLS //\n\n      //// angular motion\n\n      // apply acceleration\n      const angularMotion = this.angular_acceleration !== 0;\n      angularMotion ? this.angular_velocity += (this.angular_acceleration * 60*dt) : this.angular_velocity *= (Math.pow(this.ANGULAR_FRICTION, (60*dt) ))\n\n      // validate and adjust new velocity\n      const percentOfFullSpeed = this.velocity.length / this.LINEAR_VELOCITY_LIMIT;\n      const angularVelocityLimit = this.ANGULAR_VELOCITY_LIMIT_MAX - (percentOfFullSpeed * (this.ANGULAR_VELOCITY_LIMIT_MAX - this.ANGULAR_VELOCITY_LIMIT_MIN)); // lower percent greater ability to turn\n\n      if(this.angular_velocity > angularVelocityLimit)\n        this.angular_velocity = angularVelocityLimit;\n      if(this.angular_velocity < -angularVelocityLimit)\n        this.angular_velocity = -angularVelocityLimit;\n\n      this.angle += (this.angular_velocity * dt);\n\n\n      //// linear motion\n\n      // apply acceleration\n      const isLinearlyMoving = this.acceleration !== 0;\n      const accelerationIsPositive = this.acceleration > 0;\n      const accelerationVector = V2D.new({angle: this.angle, length: 1}); accelerationVector.length = this.acceleration;\n      // if(isLinearlyMoving && accelerationIsPositive) this.velocity.add(accelerationVector.mul(60*dt))\n      if(isLinearlyMoving) {\n        this.velocity.add(accelerationVector.mul(60*dt))\n      } else {\n        // apply friction\n        this.velocity.mul(Math.pow(this.LINEAR_FRICTION, (60*dt) ))\n      }\n\n      // validate and adjust new velocity\n      let linearVelocityLimit = this.LINEAR_VELOCITY_LIMIT; if(this.flag) linearVelocityLimit *= this.flag.drag; if(this.charging) linearVelocityLimit += this.LINEAR_VELOCITY_LIMIT_EXTENDED;\n      if(this.velocity.length > linearVelocityLimit) this.velocity.length = linearVelocityLimit;\n      if(this.velocity.length < 0) this.velocity.length = 0;\n\n      // apply velocity\n      this.position.add(this.velocity.mul_(dt));\n\n\n      // misc.\n      this.charging = false;\n\n    }\n  }\n\n  get front_weapon_position() { var fwp = this.position.copy(); var shift = new V2D(); shift.length = 8*2; shift.angle = this.angle; fwp.add(shift); return fwp; }\n  get back_weapon_position() { var bwp = this.position.copy(); var shift = new V2D(); shift.length = 8*2; shift.angle = this.angle - Math.PI; bwp.add(shift); return bwp }\n\n\n  // adjusts forces letting the simulation continue\n  apply(data) {\n    this.disabled = data.disabled;\n    // this.acceleration.set(data.acceleration);\n    this.acceleration = data.acceleration;\n    this.angular_velocity = data.angular_velocity;\n    this.angle = data.angle;\n    this.health = data.health;\n\n    this.bubble.radius = data.bubbleRadius;\n    this.bubble.locked = data.bubbleLocked;\n    this.bubble.complete = data.bubbleComplete;\n    this.bubble.disabled = data.bubbleDisabled;\n    this.bubble.position.set(data.bubblePosition);\n\n  }\n  // replaces the state of the ship\n  override(data) {\n    this.position.set(data.position);\n    this.last_known_position.set(data.position);\n    // this.angle = data.angle;\n\n    // this.disabled = data.disabled;\n    // this.acceleration = data.acceleration;\n    // this.angular_acceleration = data.angular_acceleration;\n    // this.angle = data.angle;\n    // this.health = data.health;\n  }\n\n  // update(data) {\n  //   this.disabled = data.disabled;\n  //   this.position = data.position;\n  //   this.angle = data.angle;\n  //   this.health = data.health;\n  // }\n\n  reset() {\n    this.position.set(this.spawn);\n    this.velocity.reset();\n    this.health = 1;\n    this.disabled = false;\n  }\n\n  setFlag(flag) { this.flag = flag }\n  clearFlag() { this.flag = undefined }\n}\n\nclass Ship extends BasicShip {\n\n  constructor(player) {\n    super(player);\n\n    // this._angle = 0;\n\n    this.energy = 100;\n\n    this.block_friction = 0;\n\n    this.relative_shoot_angle = 0;\n\n    this.bullets = new Set();\n    this.blocks = new Set();\n    this.subs = new Set();\n\n    this.intersecting = new Set();\n\n    this.recoil_counter = 0;\n    this.respawn_counter = 0;\n    this.regen_counter = 0;\n    this.block_recoil_counter = 0;\n    this.sub_recoil_counter = this.SUB_RECOIL_DELAY;\n    this.flag_recoil_counter = this.FLAG_RECOIL_DELAY;\n\n    // Object.assign(this, Ship.type[player.type]); >> moved to super!\n    this.hp = this.HP_CAPACITY;\n\n    // this.spawn =\n    //   V2D.new(DeepSpaceGame.maps[0].spawn[this.owner.team.game.teams.length][this.owner.team.number])\n    //   .add(DeepSpaceGame.spawn_structure[this.owner.team.players.length - 1][this.owner.team.players.indexOf(this.owner)]);\n    // this.reset()\n  }\n\n  // export() {\n  //   return {\n  //     disabled: this.disabled,\n  //     position: this.position,\n  //     angle: this.angle,\n  //     health: this.health\n  //   }\n  // }\n\n  export_update() {\n    return {\n      disabled: this.disabled,\n      acceleration: this.acceleration,\n      angular_velocity: this.angular_velocity,\n      angle: this.angle,\n      health: this.health,\n\n      bubbleRadius: this.bubble.radius,\n      bubbleLocked: this.bubble.locked,\n      bubbleComplete: this.bubble.complete,\n      bubbleDisabled: this.bubble.disabled,\n      bubblePosition: this.bubble.position,\n    }\n  }\n\n  export_override() {\n    return {\n      position: this.position,\n      // angle: this.angle\n\n      // disabled: this.disabled,\n      // acceleration: this.acceleration,\n      // angular_acceleration: this.angular_acceleration,\n      // angle: this.angle,\n      // health: this.health,\n    }\n  }\n\n  // get angle() { return this._angle }\n  // set angle(angle) { if(this._angle != angle) this.recoil_counter = this.ATTACK_RECOIL_DELAY; this._angle = angle; }\n\n  get health() { return this.hp / this.HP_CAPACITY }\n  set health(percent) { this.hp = percent * this.HP_CAPACITY }\n\n  get shoot_angle() { return this.relative_shoot_angle + this.angle }\n  get shoot_position() { const fwp = this.position.copy(); const shift = new V2D(); shift.length = 8*2; shift.angle = this.shoot_angle; fwp.add(shift); return fwp; }\n  get shot_RNG() { return (this.ATTACK_SPREAD / 2) * ((Math.random()*2) - 1) }\n\n  update(dt) {\n    let c = this.charging;\n    super.update(dt);\n    this.charging = c;\n    this.last_known_position = this.position;\n\n    if(!this.disabled) {\n      this.regen_counter+=dt;\n\n      this.charge(this.IDLE_ENERGY_REGEN_RATE*dt);\n      if(this.charging) {\n        this.charge(this.ACTIVE_ENERGY_REGEN_RATE*dt);\n        if(this.regen_counter > this.REGEN_DELAY) this.heal(this.REGEN_RATE*dt);\n      } this.charging = false;\n      // if(this.charging && !this.stealth) this.charge(this.ACTIVE_ENERGY_REGEN_RATE*dt);\n    } else {\n      if((this.respawn_counter+=dt) > this.RESPAWN_DELAY) {\n        this.respawn_counter = 0;\n        this.reset();\n      }\n    }\n    if(!this.flag) this.flag_recoil_counter+=dt;\n    this.recoil_counter+=dt; this.block_recoil_counter+=dt; this.sub_recoil_counter+=dt;\n  }\n\n  canShoot() {\n\n    const recoilHasPast = this.recoil_counter > this.ATTACK_RECOIL_DELAY;\n    const hasEnoughEnergy = this.canDrain(this.ATTACK_HP * this.ATTACK_ENERGY_FRACTION_HP);\n\n    return recoilHasPast && hasEnoughEnergy\n\n  }\n\n  didShoot(id) {\n\n    // list new bullet id\n    this.bullets.add(id);\n\n    // drain energy\n    this.drain(this.ATTACK_HP * this.ATTACK_ENERGY_FRACTION_HP);\n\n    // reset recoil counter\n    this.recoil_counter = 0;\n\n  }\n\n\n  damage(hp) {\n    this.hp -= hp; this.regen_counter = 0;\n    if(this.hp <= 0) this.disabled = true;\n    return this.disabled;\n  }\n\n  heal(hp) {\n    this.hp += hp;\n    if(this.hp > this.HP_CAPACITY) this.hp = this.HP_CAPACITY;\n  }\n\n\n  canBlock() {\n\n    const hasNoFlag = !this.flag;\n    const recoilHasPast = this.block_recoil_counter > this.BLOCK_RECOIL_DELAY;\n    const hasEnoughEnergy = this.canDrain(this.BLOCK_ENERGY_COST);\n\n    return hasNoFlag && recoilHasPast && hasEnoughEnergy\n\n  }\n  \n  didBlock(id) {\n\n    // list new block id\n    this.blocks.add(id);\n\n    // drain energy\n    this.drain(this.BLOCK_ENERGY_COST);\n\n    // reset recoil counter\n    this.block_recoil_counter = 0;\n\n  }\n\n  get reachedBlockLimit() {\n    return this.blocks.size >= this.BLOCK_CAPACITY\n  }\n\n  oldestBlockID() {\n    return this.blocks.first()\n  }\n\n\n  canSub() {\n\n    const subLimitHasNotBeenReached = this.subs.size < this.SUB_CAPACITY;\n    const recoilHasPast = this.sub_recoil_counter > this.SUB_RECOIL_DELAY;\n    const hasEnoughEnergy = this.canDrain(this.SUB_ENERGY_COST);\n\n    return subLimitHasNotBeenReached && recoilHasPast && hasEnoughEnergy\n\n  }\n\n  didSub(id) {\n\n    // list new sub id\n    this.subs.add(id);\n\n    // drain energy\n    this.drain(this.SUB_ENERGY_COST);\n\n    // reset recoil counter\n    this.sub_recoil_counter = 0;\n\n  }\n\n  get subPercent() {\n    if(this.sub_recoil_counter + 1 > this.SUB_RECOIL_DELAY) { return 1; }\n    else if(this.sub_recoil_counter > 0) { return (this.sub_recoil_counter + 1) / this.SUB_RECOIL_DELAY; }\n    else { return 0; }\n  }\n\n  // adds to energy reserve\n  charge(energy) {\n    this.energy += energy;\n    if(this.energy > 100) this.energy = 100;\n  }\n\n\n  canDrain(energy) {\n    return !(this.energy - energy < 0)\n  }\n\n  // takes if possible, returns a result as bool\n  drain(energy) {\n    if(this.flag) return true;\n    if(this.energy - energy < 0) return false;\n    this.energy -= energy; return true;\n  }\n\n  reset() {\n    this.angle = this.spawnRotation;\n    this.position.set(this.spawn);\n    this.velocity.reset();\n    this.energy = this.ENERGY_CAPACITY;\n    this.health = 1;\n    this.disabled = false;\n    this.flag = undefined;\n    this.sub_recoil_counter = this.SUB_RECOIL_DELAY;\n\n    this.owner.team.game.network.sendShipOverride(this.export_override());\n  }\n\n  canPickupFlag() {\n\n    const recoilHasPassed = this.flag_recoil_counter > this.FLAG_RECOIL_DELAY;\n    const notCarryingBubble = this.bubble.locked;\n\n    return recoilHasPassed && notCarryingBubble\n\n  }\n\n  didPickupFlag() {\n    this.flag_recoil_counter = 0;\n  }\n\n  canPickupBubble() {\n\n    const cooldownHasPast = this.bubble.ready;\n    const notComplete = !this.bubble.complete;\n    const notCarryingFlag = !this.flag;\n\n    return cooldownHasPast && notComplete && notCarryingFlag;\n  }\n\n}\n\nShip.type = [\n  {\n    type: 'standard',\n\n    SUB_TYPE: 'attractor',\n    SUB_RECOIL_DELAY: 0.5, //s\n    SUB_ENERGY_COST: 45 // ep\n  },\n\n  {\n    type: 'rate',\n\n    RESPAWN_DELAY: 3, // 4\n\n    ATTACK_HP: 6, // 8\n    ATTACK_RECOIL_DELAY: (1/6), // (1/4)\n    ATTACK_RADIUS: 20, // 24\n\n    // BLOCK_HP_CAPACITY: 6, // 8\n    BLOCK_RECOIL_DELAY: (1/3), // (1/4)\n\n    SUB_TYPE: 'missile',\n    SUB_RECOIL_DELAY: 1, //s 2\n    SUB_CAPACITY: 1,\n    SUB_ENERGY_COST: 70\n  },\n\n  {\n    type: 'speed',\n\n    HP_CAPACITY: 32, // 40\n\n    LINEAR_VELOCITY_LIMIT: 300, // 240\n    // LINEAR_ACCELERATION_LIMIT: ,\n\n    ATTACK_HP: 7, // 8\n    ATTACK_RADIUS: 30, // 24\n    ATTACK_SPREAD: (2 * Math.PI) * (0.02), // (0.01)\n    ATTACK_LIFESPAN: 1, // 1.6\n\n    // BLOCK_RECOIL_DELAY: ,\n\n    SUB_TYPE: 'repulsor',\n    SUB_RECOIL_DELAY: 0.5, //s\n    SUB_ENERGY_COST: 30\n  },\n\n  {\n    type: 'defense',\n\n    HP_CAPACITY: 50, // 40\n\n    LINEAR_VELOCITY_LIMIT: 200, // 240\n\n    ATTACK_HP: 8, // 8\n    ATTACK_RECOIL_DELAY: (1/3), // (1/4)\n    ATTACK_LIFESPAN: 1.8, // 1.6\n\n    REGEN_RATE: 10.8, // 24\n\n    BLOCK_RECOIL_DELAY: (1/6), // (1/6)\n    // BLOCK_ENERGY_COST: 10, // 8\n\n    SUB_TYPE: 'stealth_cloak',\n    SUB_RECOIL_DELAY: 1, //s\n    SUB_CAPACITY: 1,\n    SUB_ENERGY_COST: 90 // 70 when no charge upon stealth\n  },\n\n  {\n    type: 'damage',\n\n    HP_CAPACITY: 44, // 40\n\n    LINEAR_VELOCITY_LIMIT: 100, // 120\n\n    ATTACK_HP: 24, // 8\n    ATTACK_RECOIL_DELAY: (1/1.2), // (1/4)\n    ATTACK_RADIUS: 30, // 24\n    ATTACK_LIFESPAN: 1.6, // 2.2\n    ATTACK_SPEED: 320, // 400\n\n    SUB_TYPE: 'block_bomb',\n    SUB_RECOIL_DELAY: 0.5, //s\n    SUB_ENERGY_COST: 50\n  }\n];\n\n// BASE STATS\n// measurements will be expressed in:\n//  time: s\n//  distance: px\n//  velocity: px / s\n//  acceleration: px / s*s\nShip.baseStats = {\n  type: 'base',\n\n  HP_CAPACITY: 40, //hp\n  ANGULAR_FRICTION: 0.9, //%\n  ANGULAR_VELOCITY_LIMIT_MIN: Math.radians(150), //deg/s\n  ANGULAR_VELOCITY_LIMIT_MAX: Math.radians(180), //deg/s\n  ANGULAR_ACCELERATION_LIMIT: Math.radians(8), //deg/s*s\n  LINEAR_FRICTION: 0.9, //%\n  LINEAR_VELOCITY_LIMIT: 240, //188 //px/s (3px/f)\n  LINEAR_ACCELERATION_LIMIT: 10, //px/s*s (0.26px/f*f)\n  LINEAR_VELOCITY_LIMIT_EXTENDED: 50, //px/s\n  LINEAR_VELOCITY_LIMIT_BACKWARD: 60, //px/s\n\n  // HP_CAPACITY: 20, //hp\n  // ANGULAR_FRICTION: 0.9, //%\n  // ANGULAR_VELOCITY_LIMIT_MIN: Math.radians(60), //deg/s\n  // ANGULAR_VELOCITY_LIMIT_MAX: Math.radians(120), //deg/s\n  // ANGULAR_ACCELERATION_LIMIT: Math.radians(8), //deg/s*s\n  // LINEAR_FRICTION: 0.80, //%\n  // LINEAR_VELOCITY_LIMIT: 120, //188 //px/s (3px/f)\n  // LINEAR_ACCELERATION_LIMIT: 10, //px/s*s (0.26px/f*f)\n  // LINEAR_VELOCITY_LIMIT_EXTENDED: 50, //px/s\n\n\n  RESPAWN_DELAY: 4, //s (240f)\n\n  ATTACK_HP: 8, //hp\n  ATTACK_RECOIL_DELAY: 1/4, //8 //b/s (8f == 7.5b/s)\n  ATTACK_RADIUS: 24, //px\n  ATTACK_SPREAD: (2 * Math.PI) * (0.01), // (1%) angle sweep in radians,\n  ATTACK_LIFESPAN: 1.6, //0.5 //s,\n  ATTACK_ENERGY_FRACTION_HP: 0.3, //%\n  ATTACK_SPEED: 400, //px/s\n\n  REGEN_DELAY: 3, //s (180f)\n  REGEN_RATE: 24, //hp/s (0.4hp/f)\n\n  BLOCK_CAPACITY: 500, //#\n  BLOCK_HP_CAPACITY: 20, //hp\n  BLOCK_SPREAD: (2 * Math.PI) * (0.1), // 0.2 (30%) angle sweep in radians.\n  BLOCK_RECOIL_DELAY: 1/4, //b/s (8f == 7.5b/s)\n  BLOCK_ENERGY_COST: 8, //ep\n\n  SUB_TYPE: 'block_bomb',\n  SUB_RECOIL_DELAY: 0.5, //s\n  SUB_CAPACITY: 5, //#\n  SUB_ENERGY_COST: 40, //ep\n\n  ENERGY_CAPACITY: 100, // (ep)\n  IDLE_ENERGY_REGEN_RATE: 0, // of automatic energy per second (ep/s)\n  ACTIVE_ENERGY_REGEN_RATE: 24, // while charging energy per second (ep/s)\n\n  FLAG_RECOIL_DELAY: 1, // s\n};\n\n// SPECIALS??? LARGE HEAVY BLOCK, or INTEL\n"]}